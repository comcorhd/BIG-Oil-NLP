metálica oﬀ-shore já construída no Brasil (Figura 2). A operação da plataforma de PMXL-1 iniciou-se em 2011.
Figura 2 – Plataforma de Mexilhão (PMXL-1).
Fonte: Galante (2009) e Belchior (2013, p. 37) respectivamente.
No Campo de Mexilhão, a atividade de produção e escoamento de gás e condensado contempla o emprego de poços produtores, um sistema de coleta constituído por linhas e estruturas submarinas, uma plataforma marítima e um sistema de escoamento da produção para a Unidade de Tratamento de Gás de Caraguatatuba (UTGCA), na costa, por meio de gasoduto submarino (Figura 3).
Figura 3 – Desenvolvimento do Campo de Mexilhão.
A plataforma de produção encontra-se ﬁxada, por meio de jaqueta, ao leito submarino a uma profundidade de 172 metros. Ela está interligada aos poços produtores possuindo uma capacidade de processamento estimada em 15 milhões de m3/dia de gás e de 3,2 mil m3/dia para o condensado.
A atividade de produção de gás e condensado do Campo de Mexilhão está representada pela Figura 4.
Figura 4 – Atividade de produção de gás e condensado para o Campo de Mexilhão.
Fonte: Petrobras (2007, p. 25).
Durante a atividade de produção, o ﬂuido proveniente do reservatório é coletado através do sistema submarino diretamente para a plataforma. Este é rico em gás, além de condensado e pequena quantidade de água. Na plataforma realiza-se o processamento da produção.
As principais etapas envolvendo o ﬂuido produzido são: a) Coleta do ﬂuido produzido (gás, condensado e água) no poço; b) Separação do gás, condensado e água na plataforma; c) Tratamento do gás e do condensado na plataforma; d) Processamento de parte do gás para suporte ao processo de produção (geração de energia); e) Circulação do MEG pelo sistema submarino de coleta, evitando-se assim entupimentos por formação de hidratos no interior das tubulações, e posterior regeneração do MEG na plataforma.
Após tratamento, gás e condensado são bombeados para o litoral (UTGCA) através de gasoduto.
1.2 Formação de Hidratos em Tubulações Em condições termodinâmicas favoráveis, de temperatura e pressão, poderá haver a formação de hidratos em tubulações. Estes poderão provocar o bloqueio do ﬂuido em linhas, dutos e equipamentos e, consequentemente, interrupção na produção, entre outros problemas.
A obstrução de tubulações de produção pode ser um problema grave com enormes prejuízos e, portanto, deve ser evitado a todo custo.
A interrupção para remoção manual dos blocos de hidratos normalmente demanda diminuição ou até interrupção na produção, além de exigir procedimentos com operações de risco para a plataforma. O processo de remoção manual e a dimensão do problema pode ser compreendida melhor por meio da vizualização das dimensões dos blocos de hidratos removidos do interior de uma tubulação mostrados na Figura 5(a) e na Figura 5(b).
Figura 5 – Remoção de bloco de hidratos de tubulação.
Fonte: Moura (2007, p. 11).
Conforme Baptista (2007), a atração entre os pólos de cargas opostas de duas moléculas de água distintas origina ligações conhecidas como pontes de hidrogênio. Estas ligações são as mais fortes dentre as ligações intermoleculares. Necessita-se de aproximadamente 5 kcal/mol de energia para romper uma ponte de hidrogênio enquanto que para uma ligação de van der Waals essa energia é de 0,3 kcal/mol. As pontes de hidrogênio contribuem ativamente na energia de dissociação da estrutura dos hidratos.
Na Figura 6 está representado uma molécula de hidrocarboneto que encontra-se aprisionada por meio de rede de pontes de hidrogênio formadas com outras moléculas de água.
Figura 6 – Estrutura dos hidratos de metano e etano.
Fonte: Statoil (2011, p. 4).
1.4 Inibição da Formação de Hidratos Substâncias que provocam o atraso na cinética de formação de hidratos, ou mesmo, impedem a sua formação, são conhecidas como Inibidores da formação de hidratos. Conforme Andrade (2009) estes podem ser classiﬁcados em três tipos: a) Inibidores termodinâmicos: são geralmente sais inorgânicos (NaCl, CaCl2, KCl), alcoóis (metanol) e glicóis (MEG) que objetivam reduzir a atividade da água, quantidade de água livre na mistura, e com isso deslocar a curva de equilíbrio de fases, desfavorecendo a formação de hidratos; b) Inibidores cinéticos: são polímeros solúveis em água e que reagem sinergicamente com glicóis e alcoóis de alto peso molecular. Esses aditivos são capazes de retardar o início da nucleação e diminuem a taxa de crescimento de cristais de hidratos; c) Antiaglomerantes: são basicamente polímeros e tensoativos, os quais, de modo similar aos inibidores cinéticos, quando utilizados em pequenas quantidades já surtem os efeitos desejados. Sua principal função é retardar a aglomeração de cristais e facilitar o transporte dos núcleos já formados. Não impedem a formação de cristais de hidratos, no entanto, ajudam bastante no transporte dos cristais formados.
Estes inibidores e seus mecanismos estão ilustrados na Figura 7.
Figura 7 – Mecanismos de inibição de hidratos.
Alguns exemplos de inibidores de formação de hidratos e suas características são: a) Sais inorgânicos: podem causar corrosão e incrustação; b) Metanol: possui alta toxicidade, de difícil recuperação e não é adequado para injeção contínua; c) Glicóis: são pouco voláteis, de fácil recuperação e se concentram na fase aquosa.
1.5 O Monoetilenoglicol O monoetilenoglicol (MEG), chamado simplesmente etilenoglicol, com nome IUPAC: etano-1,2-diol, ou 1,2-etanodiol, é um álcool com 2 grupos OH (um diol), largamente usado como anticongelante automotivo. Puro é um composto inodoro, incolor, líquido xaroposo com sabor doce. O MEG é tóxico, e sua ingestão é considerada uma emergência médica.
Sua densidade absoluta a 20 °C é 1,1135 g/cm3, com massa molar 62,068 g/mol, ponto de fusão -12,69 °C e ponto de ebulição 197,3 °C (LIDE, 2009).
O MEG é o mais simples dos etilenoglicóis. Normalmente é obtido pela reação de água com óxido de etileno (OE). Reagindo-se MEG com óxido de eteno, produz-se o dietilenoglicol (DEG) e a partir deste, adicionando-se mais óxido de etileno, chega-se ao trietilenoglicol (TEG). A representação da sequência de reações de formação dos etilenoglicóis é ilustrada na Figura 8.
1.6 Uso do MEG como Inibidor da Formação de Hidratos O uso do MEG como inibidor da formação de hidratos, por injeção na cabeça do poço, apresenta vantagens, como por exemplo: 1.7 Processos de Recuperação e de Regeneração do MEG Em plataformas de gás natural, o MEG tem sido largamente utilizado como inibidor da formação de hidratos sem grandes problemas. Por outro lado, no processo de recuperação do MEG para reuso podem ocorrer problemas causados por incrustações formadas pela precipitação de sais, tornando necessário o conhecimento das condições de formação, quantidade e natureza dos respectivos precipitados para, então, ser possível evitá-los.
O elevado ponto de ebulição do MEG em relação ao da água e a tendência a decompor-se termicamente em ácidos orgânicos podem causar problemas em unidades de regeneração convencionais quando a água de formação for rica em sais. Estas unidades simplesmente fervem a água de soluções diluídas de MEG rico produzindo soluções reconcentradas de MEG pobre. Este processo funcionaria bem se não fosse o fato da água de formação normalmente conter concentrações altas de sais dissolvidos (principalmente NaCl) que tendem a acumularem-se no MEG pobre até a saturação e, vez ou outra, acima dela. O emprego deste processo pode causar perda de MEG por degradação térmica além de problemas operacionais (entupimentos e corrosão) pela precipitação de sais.
Na década de 1990 foi sugerido um processo que evitaria os problemas do processo convencional (Figura 9). Neste processo o MEG rico contaminado por sais ﬂui para o interior de uma unidade de separação a vácuo onde ele é instantaneamente vaporizado quando misturado ao licor mãe aquecido. Este conceito de licor mãe aquecido tem sido utilizado por décadas. A corrente de alimentação, excluindo-se os sólidos dissolvidos e em suspensão, é vaporizada e ﬂui para uma coluna de destilação convencional para ser separada em água e MEG pobre reconcentrado limpos.
Figura 9 – Processo de recuperação do MEG (década de 1990).
O líquido de reciclo é tirado a partir da acumulação de líquido no separador a vácuo e, como dito anteriormente, devido ao MEG ter um ponto de ebulição muito mais elevado do que a água, o líquido resultante terá um teor de água muito menor do que a alimentação de MEG rico. Calor sensível suﬁciente é adicionado ao ﬂuido de reciclo para vaporizar completamente a alimentação de MEG rico. Isto é conseguido mantendo uma alta taxa de ﬂuxo de reciclo aquecido por uma variação de apenas 10 a 20 graus Celsius, de modo a evitar a degradação térmica do MEG no circuito de reciclo. Nenhuma ebulição ocorre no aquecedor de reciclo devido ao líquido de reciclo estar sob pressão. Neste ponto no processo, o teor de água é reduzido, e o aumento de temperatura é pequeno.
A quantidade de calor adicionada ao aquecedor de reciclo varia com a taxa de alimentação de MEG rico: se a taxa de alimentação é aumentada (ou diminuída), em seguida, mais calor (ou menos) deve ser adicionado para manter um nível constante de líquido no separador a vácuo.
Geralmente ﬁxa-se a pressão de operação de modo a manter-se temperaturas de processamento baixas o suﬁciente para evitar-se a degradação do MEG. O controle direto sobre a temperatura não é necessário, mas o nível do líquido no separador a vácuo deve ser medido e controlado de forma conﬁável. Isto é feito controlando-se a adição de calor ao aquecedor de reciclo conforme seja necessário. A temperatura de funcionamento do processo ﬂutua livremente dentro de uma faixa prevista, sendo esta, deﬁnida pela pressão de operação e pela concentração do MEG na alimentação (Figura 10). Devido a estabilidade inerente do processo, não há necessidade de ação por parte do operador ou do sistema de controle quando o MEG contido na alimentação varia dentro do intervalo permitido.
Figura 10 – Típica faixa de operação do processo de recuperação do MEG.
Fonte: Nazzer e Keogh (2006, p. 3), adaptada.
Para poder ser utilizado no processo de inibição de hidrato, o MEG pobre é normalmente produzido com uma concentração que varia na faixa de 80% a 95% em peso de MEG. Esta concentração pode ser facilmente conseguida através do fracionamento do MEG/vapor de água numa coluna de destilação convencional equipada com enchimento estruturado (Figura 11). Um refervedor geralmente não é necessário. Em situações normais, nenhuma energia térmica adicional é necessária para produzir 90-95% em peso de MEG em comparação com 80% em peso de MEG devido ao fato da alimentação na coluna de destilação ser tudo vapor.
Figura 11 – Seção de destilação do processo de regeneração do MEG.
Em processos atuais, os sólidos decantados passam pela camada estática de líquido no fundo do separador a vácuo, evitando o circuito de reciclo e descendo para a seção de remoção de sólidos da planta. Em métodos convencionais, a remoção de sólidos em ﬂuxos de processo, faz-se por meio de pequena purga em corrente lateral. Aplicado a recuperação de MEG, implica em ﬂuir uma fração do líquido de reciclo através do decantador e centrífuga.
Um decantador a montante da centrífuga ocasiona a transição do regime contínuo para o em batelada, propiciando um meio de aumentar o teor de sólidos na lama a ser alimentada à centrífuga. Balanços de massa mostram que plantas onde os sólidos são removidos do circuito de reciclo tem uma carga de partículas muito alta. Isto aumenta o risco de interrupções para remover incrustações no aquecedor de reciclo e para reparar a erosão no equipamento e dutos. Logo, ocorrem benefícios substanciais com a segregação e remoção de partículas sólidas do separador a vácuo a montante da entrada do circuito de reciclo.
Tipicamente a taxa de ﬂuxo de reciclo é de 30 a 60 vezes maior que a alimentação de MEG rico, logo, uma pequena segregação de sólidos gera um aumento acentuado no desempenho.
A Figura 12 mostra a remoção de sais pelo método convencional e pelo circuito de reciclo.
Figura 12 – Remoção de sais após o separador a vácuo e no circuito de reciclo no Fonte: Nazzer e Keogh (2006, p. 3), adaptada.
O aquecedor de reciclo é um item fundamental que deve aquecer de forma conﬁável uma alta taxa de ﬂuxo do líquido com sais reciclado sem expor este a altas temperaturas que podem promover degradação térmica do MEG, e sem permitir deposição de material particulado em suspensão. Normalmente são utilizado trocadores de calor de alta performance como o trocador em espiral ilustrado na Figura 13.
Figura 13 – Trocador de calor em espiral.
A Figura 14 ilustra o Processo PureMEG™ da Cameron que é utilizado na plataforma PMXL-1. Nele podem ser vistos vários dos conceitos e equipamentos comentados aqui. Este processo consiste de três etapas principais: a) pré-tratamento do MEG ⇒ remoção de hidrocarbonetos; b) recuperação do MEG ⇒ remoção de sais; c) regeneração do MEG ⇒ remoção de água.
Este processo recupera até 99,5% de MEG.
Fonte: Cameron (2012, p. 5), adaptada.
Como ﬁca notório, o conhecimento da solubilidade dos sais nas misturas aquosas com MEG, nos equipamentos da unidade de MEG, é informação crucial para o monitoramento das formações de incrustação de sais durante o processo.
Dados de solubilidade, densidade, pH e condutividade tem sido obtidos da literatura e em especial no laboratório de Fotoquímica e Equilíbrio de Fases (FOTEQ) da Universidade Federal do Rio Grande do Norte (UFRN). Os dados gerados pelo FOTEQ tem por meta possibilitar um melhor monitoramento do processo de recuperação do MEG, visando suprir a escassez dessas informações para sistemas aquosos com MEG e sais. Este fato também resulta na demanda de modelos para estes sistemas aquosos com eletrólitos e solvente orgânico, tema cientíﬁco desta tese de doutorado. Neste sentido, também deve ser ressaltada a importância do projeto no que diz respeito à demanda da indústria do petróleo, em particular o campo de Mexilhão na Bacia de Santos que se destaca por sua signiﬁcativa reserva.
Dentro do exposto até aqui, tem-se que esta tese de doutorado visa abordar, através de modelagem termodinâmica, o comportamento de sistemas aquosos selecionados, contendo sais e MEG, presentes no processo de recuperação do MEG.
Com a ﬁnalidade meramente ilustrativa, a Figura 15 mostra o módulo de recuperação do MEG pelo processo PureMEG™ da Cameron utilizado na plataforma PMXL-1.
CAPÍTULO 2 REVISÃO BIBLIOGRÁFICA 2 REVISÃO BIBLIOGRÁFICA Neste capítulo, inicialmente, deﬁnições fundamentais e teorias para soluções eletrolíticas e mistura de solventes são apresentadas. Em seguida, é realizada uma revisão dos dados experimentais encontrados na literatura para soluções aquosas eletrolíticas com apenas um sal e um solvente orgânico. Por último, são apresentados modelos termodinâmicos para soluções eletrolíticas e mistura de solventes e, também, algumas ferramentas computacionais disponíveis para a implementação (ou apenas utilização) destes modelos.
2.1 Equilíbrio de Fases para Sistemas com Eletrólitos 2.1.1 Escalas de concentração Geralmente a concentração de uma solução eletrolítica é expressa em molalidade, molaridade ou fração molar.
A molalidade é deﬁnida como o número de moles do soluto por quilo de solvente: (2.1) A molaridade é deﬁnida como o número de moles do soluto por litro de solução: (2.2) onde ci é a molaridade de i e V é o volume da solução.
A fração molar é deﬁnida como a razão entre o número de moles do soluto pelo número de moles total na solução: (2.3) Como a molaridade é dependente da temperatura, está não é preferida como unidade de concentração em soluções eletrolíticas. Daqui para a frente será utilizada, quando for necessário maior clareza, os subscritos b, c ou x respectivamente para molalidade, molaridade ou fração molar, como indicação da escala de concentração utilizada.
1 Neste trabalho de tese de doutorado, optou-se pelo uso de bi para representar a molalidade de i, ao invés de mi, para evitar-se confusão de notação com massa de i (mi), conforme Cohen et al. (2007), p. 48 e Thompson e Taylor (2008), p. 28.
2.1.2 Potencial químico O potencial químico é deﬁnido como: (2.4) onde µi é o potencial químico de i, G é a energia livre de Gibbs, T é a temperatura, P é a pressão e nj6=i designa todos os números de moles exceto o referente a i.
O potencial químico relaciona-se a atividade ou concentração e ao coeﬁciente de atividade da seguinte forma: (2.5) onde µ• 2 é a constante universal do gases ideais, ai é a atividade de i, γi é o coeﬁciente de atividade de i e ξi é uma escala de concentração conveniente.
i é o potencial químico de i em um estado padrão apropriadamente escolhido, R O potencial químico constitui uma grandeza de suma importância na abordagem em equilíbrio de fases. Como exemplo desta abordagem, tem-se a Figura 16, que representa o equilíbrio sólido-líquido de um eletrólito MX e uma mistura de solventes: água e MEG.
Este sistema apresenta quatro fases: três fases líquidas (cor azul) e uma sólida (cor marrom).
A condição de equilíbrio para este sistema é a igualdade dos potenciais entre as fases. Logo, o equilíbrio deste sistema pode ser descrito em termos da seguinte equação: (2.6) {H2O} MX , µ {MEG} MX {H2O+MEG} MX s MX é o potencial químico de MX na fase sólida e µ são os onde µ potenciais químicos de MX respectivamente nas fases líquidas H2O, MEG e H2O + MEG.
e µ Figura 16 – Representação do equílibrio de um elétro-lito em mistura de solventes.
Fonte: O autor.
2 Para valores de constantes, consulte a Tabela 6 da seção 3.11.
2.1.3 Estado padrão Um equívoco comum é dizer que o estado padrão do potencial químico para o soluto é o soluto à temperatura e pressão do sistema e à diluição inﬁnita. Isso não é correto, pois, à diluição inﬁnita, o potencial químico do soluto é negativamente inﬁnito (PRAUSNITZ; LICHTENTHALER; AZEVEDO, 1999). O estado padrão do potencial químico para um soluto precisa estar à uma concentração ﬁxa (diferente de zero), conhecida como concentração unitária. Esta é usada por ser o seu logaritmo igual a zero.
O estado padrão do potencial químico não precisa necessariamente ser realizável, mas precisa ser bem deﬁnido.
Para soluções concentradas, ou líquidos puros, a fração molar é uma escala de concentração mais conveniente, pois para soluções concentradas os valores tanto para molaridade quanto para a molalidade tendem a serem enormes, e no caso de líquidos puros atingem o inﬁnito. Uma convenção de estado padrão comumente usada é a convenção por coeﬁciente de atividade racional simétrico, onde normaliza-se de forma que os coeﬁcientes de atividade são unitários para componentes puros, assim sendo: (2.7) onde µ Figura 17 – Conceito de solução ideal hipotética.
Fonte: Prausnitz, Lichtenthaler e Azevedo (1999, p. 511), adaptada.
A atividade real do soluto para uma concentração de 1,5 é dada pela ordenada do ponto C, enquanto que na solução ideal hipotética é dada pela ordenada do ponto B. Na solução ideal, a atividade é igual a concentração porque, na solução ideal, o coeﬁciente de atividade é unitário para todas as concentrações de soluto. Assim, o coeﬁciente de atividade em soluções reais: (2.8) com i i 3), ou seja: γ∗ i,b = γ∗ com (2.10) i,xxsolv onde µ assimétrico e xsolv é a fração molar de solvente na fase líquida.
i,b é o coeﬁciente de atividade molal 2.1.4 Coeﬁciente de atividade médio iônico e molalidade média iônica Representa-se a dissociação de um eletrólito eletricamente neutro Mν+Xν− em ν+ cátions (cada qual com carga z+) e ν− ânions (cada qual com carga z−) da seguinte forma: De Prausnitz, Lichtenthaler e Azevedo (1999), tem-se as deﬁnições de coeﬁciente de atividade médio iônico (γ±) e molalidade média iônica (b±): 2.1.5 Leis limitantes Por lei limitante compreende-se aquela cuja validade (aplicação) encontra-se na região de diluição inﬁnita.
Numa solução ideal, o cálculo das propriedades de mistura requer a composição da mistura e as propriedades dos componentes puros. A solução ideal de um sistema não eletrolítico de acordo com a Lei de Raoult para o equilíbrio líquido-vapor (ELV) é: (2.14) sat i é a pressão de vapor de i puro.
onde yi é a fração molar de i na fase vapor e P Em soluções reais diluídas, com respeito ao soluto, o solvente tende a seguir a Lei de Raoult. Uma solução diluída ideal é a solução onde o solvente segue a Lei de Raoult e o soluto segue a Lei de Henry: (2.15) onde Hi é a constante de Henry para i.
Em soluções eletrolíticas reais, as interações entre os íons através de suas cargas, que são chamadas interações coulombianas, provocam desvios da idealidade, podendo estes desvios, mesmo a baixas concentrações, serem bastante relevantes. Estas forças de característica eletrostática possuem alcance bem maior que as forças intermoleculares presentes em soluções apolares, cuja signiﬁcância ocorre apenas a curta distância. Considerando, também, que os íons não são voláteis a pressão atmosférica e a temperatura ambiente, tudo isso conduz a necessidade de uma teoria especíﬁca para descrever o comportamento de soluções eletrolíticas. Como os desvios do comportamento ideal estão relacionados as forças eletrostáticas dos íons em solução, tem-se que, uma teoria ou modelo eﬁciente para soluções eletrolíticas reais, necessita ser capaz de descrever e quantiﬁcar a força das interações coulombianas, tanto as atrativas quanto as repulsivas. Na 3ª década do século XX, a partir da hipótese de que cada íon, individualmente, esteja cercado por uma nuvem de íons de carga oposta, a qual promove um efeito de blindagem, Debye e Hückel (1923) formularam uma teoria para soluções eletrolíticas. Nesta teoria, a medida do comprimento desta blindagem recebe o nome de comprimento de Debye-Hückel (κ−1), deﬁnido como: (2.16) onde ε0 permissividade relativa), kB e0 4 é a constante de Boltzmann, NA 4 é a carga do elétron e Ic é a força iônica molar, deﬁnida como: (2.17) sendo zi a carga de i.
Debye e Hückel (1923) derivaram uma expressão simples para o coeﬁciente de atividade: (2.18) (2.19) onde ρsolv densidade absoluta do solvente, pode-se trocar as unidades do coeﬁciente de atividade e da força iônica na Equação 2.18, resultando em: (2.21) (2.22) Para o eletrólito Mν+Xν−, usando a Equação 2.13, e desprezando o subscrito b na Equação 2.20, obtém-se a Lei de Debye-Hückel: (2.23) onde I = Ib é a força iônica.
O comportamento descrito pela Lei de Raoult (Equação 2.14) e pela Lei de Henry (Equação 2.15) tende a ser o comportamento de soluções reais conforme estas tendam a ser diluídas. Da mesma forma, a Lei de Debye-Hückel providencia uma representação satisfatória do comportamento dos coeﬁcientes de atividade em soluções diluídas, sendo limitada para soluções aquosas com força iônica até 0,01 mol/kg. A Lei de Debye-Hückel Extendida (GUGGENHEIM, 1935) aumentou o limite de aplicação no cálculo do coeﬁciente de atividade para soluções aquosas com força iônica até 0,1 mol/kg: (2.24) 2.1.6 Energia livre de Gibbs para soluções eletrolíticas reais Soluções reais podem ser descritas a partir de seus desvios em relação à idealidade por propriedades de excesso. Para uma propriedade , temos: (2.25) id representa uma propriedade ideal.
E representa uma propriedade de excesso e Deﬁne-se propriedade parcial molar como: onde (2.26) onde ¯Mi representa uma propriedade parcial molar de i.
(2.27) (2.28) onde ¯Gi é a energia livre de Gibbs parcial molar de i.
Para um sistema aberto, multicomponente e com uma única fase, tem-se: (2.29) onde S é a entropia.
Dividindo G por RT e diferenciando em relação à T, tem-se: (2.30) Dividindo a Equação 2.29 por RT e somando com a equação Equação 2.30, tem-se: (2.31) Como G = H−T S, tem-se, substituindo na Equação 2.30, uma relação fundamental (2.32) A partir da energia livre de Gibbs pode-se gerar outras propriedades termodinâmicas, conforme pode ser visto em Prausnitz, Lichtenthaler e Azevedo (1999). Isto tudo está resumido e ilustrado na Figura 18.
Figura 18 – Fluxograma de obtenção de propriedades termodi-Para soluções aquosas com eletrólitos, como, por exemplo, um sal MX completamente dissociado em água, à pressão e temperatura constantes, a partir da Equação 2.28, da Equação 2.26 e da Equação 2.4, pode-se expressar a energia livre de Gibbs como: (2.33) onde nH2O e nMX são os números de moles respectivamente da água e do eletrólito MX, e µH2O é o potencial químico da água.
2.1.7 Fugacidade (2.34) i é a fugacidade de i em um estado padrão A fugacidade de um componente i pode ser expressa, usando convenção simétrica e escala de fração molar, como: (2.35) 
i é a fugacidade racional simétrica de i.
onde f A fugacidade de um componente i pode ser expressa, usando convenção assimétrica e escala de fração molar, como: (2.36) A fugacidade de um componente i pode também ser expressa, usando convenção (2.37) onde Hi,b é a constante de Henry molal.
2.2 Dados Experimentais de Solubilidade A qualidade dos dados experimentais é de suma importância em qualquer trabalho cientíﬁco. No entanto, nem sempre os dados que necessitamos estão disponíveis na literatura.
Embora tenha aumentado nos últimos anos, a quantidade de dados experimentais de solubilidade de sais em mistura de solventes ainda são considerados muito escassos. Mesmo dados experimentais de solubilidade de apenas um sal em um único solvente (como, por exemplo, o MEG), por vezes, são muito difíceis de serem encontrados. Este fato, aliado a uma possível não conﬁabilidade nos dados oriundos da literatura, justiﬁca, em muitos casos, a necessidade da realização de experimentos objetivando a simples reprodução ou mesmo a coleta integral de novos dados experimentais.
Uma grande compilação de dados experimentais de solubilidade de sais é o banco de dados presente em Linke e Seidell (1958) e Linke e Seidell (1965). Nesta compilação observa-se a carência de dados experimentais para o MEG. Desta compilação, juntamente com Lide (2009), foram coletados dados de solubilidade dos sais KCl e NaCl em água.
Estes dados estão resumidos na Tabela 1.
Tabela 1 – Banco de dados de solubilidade de sal em água a diferentes temperaturas.
Embora, conforme mencionado anteriormente, dados de solubilidade de sais em misturas de solventes sejam escassos, após um extensa pesquisa, conseguiu-se encontrar na literatura dados de solubilidade para um sal em meio aquoso com um álcool ou glicol. A Tabela 2 apresenta um resumo contendo vários destes dados. Estes estão agrupados numa série sistemática de misturas, seguidas por suas isotermas, número de pontos experimentais e a referência consultada.
Foi observado, na literatura, uma escassez de trabalhos com dados de solubilidade de sal em meio aquoso com MEG. Este fato destaca a importância do trabalho de Figueiredo et al. (2014 (em Publicação)) desenvolvido pelo grupo de pesquisa do FOTEQ.
Outros trabalhos experimentais de sal em meio aquoso com MEG, que reportam outras propriedades que não a solubilidade, foram encontrados na literatura: Tsierkezos e Molinou (1998) estudaram propriedades termodinâmicas como volume de excesso, viscosidade e refração da água com etilenoglicol à diferentes temperaturas; Braun, Persson e Karlsson (2001) estudaram soluções ternárias de MEG+2-amino-2-metil-1-propanol+água em diferentes concentrações obtendo dados de viscosidade e densidade, e Sandengen e Kaasa (2006) estudaram as soluções aquosas de MEG na presença de sais com respeito à condutividade e densidade, no sentido de gerarem curvas de referência para determinar as concentrações a partir dessas duas propriedades para sistemas ortogonais.
Nesta seção são descritos modelos termodinâmicos que podem ser aplicados a dados de solubilidade de sais em misturas de solventes, seguindo uma ordem de complexidade, ou seja, partindo do modelo ideal, passando pela correlação empírica de Setchenov (chamada também de Setschenow ou Sechenov) e, por último, aplicando a correção das não idealidades através do Modelo de Pitzer adaptado para mistura de solventes.
2.3.1 Logaritmos ideal e de excesso da solubilidade de um sal em mistura de solventes Primeiramente, deve-se deﬁnir o logaritmo ideal da solubilidade de um sal em mistura de solventes que, para uma mistura binária de solventes, foi deﬁnido por meio de regra linear com a composição de cada solvente livre de sal: (2.38) onde hln b {H2O+MEG} é o logaritmo ideal da molalidade de MX na mistura água e MEG, MX MEG são as frações molares respectivamente da água e do MEG livres de sal e, {MEG} MX H2O e x0 x0 {H2O} e b b MX A deﬁnição do logaritmo de excesso da solubilidade de um sal em mistura de solventes (LORIMER, 1993) permite uma avaliação simpliﬁcada do comportamento das soluções aquosas de MEG e com um sal. Isto ocorre, pois, quando considera-se solução ideal não é necessário usar-se modelo de energia livre de excesso. Conforme visto na Equação 2.25, deﬁne-se o logaritmo de excesso da solubilidade da seguinte forma: são as molalidades do sal MX respectivamente em água e em MEG.
(2.39) onde hln b {H2O+MEG} MX é o logaritmo de excesso da molalidade de MX na mistura água e MEG.
Essa abordagem ideal pode representar surpreendentemente bem, e de maneira bastante simpliﬁcada, a inﬂuência do solvente na solubilidade do sal. Ela requer apenas o conhecimento das solubilidades do sal nos solventes puros e descreve nestes extremos os valores de maneira plena. Vale ressaltar que as soluções de água e MEG formam soluções ideais (CHIAVONE-FILHO; PROUST; RASMUSSEN, 1993) para o ELV.
2.3.2 Equação de Setchenov O efeito linear do solvente sobre a solubilidade do sal numa escala logarítmica pode ser mensurado pela Equação de Setchenov (Equação 2.40), que expressa o efeito salting-out (LEE, 1997), que é justamente o oposto do que ocorre no processo de regeneração do MEG, mas que acompanha o mesmo fenômeno físico.
(2.40) {H2O+MEG} MX onde b é a molalidade de MX na mistura água e MEG, e kS é a constante de Setchenov. Aplicando uma correlação equivalente entre o produto de solubilidade de um componente em água e o mesmo em uma mistura de solventes (água+MEG) usando essa equação de Setchenov, pode-se estimar o produto de solubilidade nesse novo meio solvente (OLIVEIRA et al., 2010).
2.3.3 Modelo de Pitzer Na termodinâmica de soluções eletrolíticas é comum expressar os modelos de correção das não idealidades pelo coeﬁciente osmótico (solvente) ou pelo coeﬁciente de atividade (soluto). A deﬁnição do coeﬁciente osmótico é dada pela Equação 2.41.
(2.41) 5 é a massa molar da onde φ é o coeﬁciente osmótico, aH2O é a atividade da água e MH2O água.
(2.42) onde zM e zX são respectivamente as cargas do cátion e do ânion, f φMX é a função de Debye-Hückel na forma para o coeﬁciente osmótico, isto é: (2.43) (2.44) (2.45) ν = νM + νX (2.46) 5 Para valores de constantes, consulte a Tabela 6 da seção 3.11.
(2.47) (0) MX e β 6 que é uma constante sendo que β do modelo.
O Modelo de Pitzer expresso para o coeﬁciente de atividade é: (2.48) onde f γMX é a função de Debye-Hückel na forma para o coeﬁciente de atividade, isto é: (2.49) e, continuando, BγMX e C γMX são respectivamente o segundo e o terceiro coeﬁcientes do virial na forma para coeﬁciente de atividade, expressos como: (2.50) (2.51) Seguindo a abordagem de Lorimer (1993), que usa a teoria de McMillan-Mayer, é possível corrigir as não idealidades da fase líquida com uma equação de coeﬁciente de atividade, como o Modelo de Pitzer. Este modelo foi desenvolvido para o solvente água e, assim sendo, a aplicação dele em mistura de solventes requer uma estratégia para estimar os parâmetros de interação entre solvente orgânico e sal.
No Modelo de Pitzer, para expressar-se o efeito térmico, os parâmetros devem ser considerados dependentes da temperatura (ZEMAITIS JR. et al., 1986).
Lorimer (1993) aplicou o Modelo de Pitzer para misturas de solventes determinando (1) o parâmetro β MX como função da constante dielétrica e da composição da mistura de solventes livre de sal. Essa mesma abordagem foi aplicada nesta tese de doutorado e será descrita no Capítulo 3.
2.4 Outros Modelos Termodinâmicos Várias teses de doutorado no tema de modelagem termodinâmica de solubilidade para sistemas aquosos com eletrólitos podem ser encontradas na Universidade Técnica da 6 Para valores de constantes, consulte a Tabela 6 da seção 3.11.
Dinamarca (CARDOSO, 1988; CHIAVONE-FILHO, 1993; NICOLAISEN, 1994; THOMSEN, 1997). Nestes trabalhos pode-se observar o potencial de aplicação dos modelos de coeﬁciente de atividade para sistemas aquosos com sais e MEG. Esta abordagem, entretanto, requer informações experimentais para a estimação dos parâmetros dos respectivos modelos e, por conta da escassez de dados experimentais, há necessidade de desenvolvimento de modelos para as misturas especíﬁcas, como é o caso de sistemas aquosos com MEG e sais.
Renon (1996) e Anderko, Wang e Rafal (2002) apresentam resumos de diferentes modelos utilizados para soluções eletrolíticas com mistura de solventes, com proposta de classiﬁcação, tipo de equilíbrio, estados de referência e algumas hipóteses simpliﬁcadoras adotadas na modelagem. Observa-se que novos modelos são obtidos através de combinações de modelos anteriores para representar contribuições de interações entre espécies, de longe, médio (interações especíﬁcas) e curto alcance.
Liu e Watanasiri (1996) e Chen e Song (2004) utilizaram o modelo NRTL (Non-Random Two Liquid) para representar as interações de curto alcance e o modelo de Pitzer-Debye-Hückel (PDH) para as interações de longo alcance.
Pinho e Macedo (1996), Iliuta, Thomsen e Rasmussen (2000), Wang, Anderko e Young (2002), Thomsen, Iliuta e Rasmussen (2004), Wang et al. (2006), Kosinski et al. (2007), (FØSBOL; THOMSEN; STENBY, 2009) utilizaram o modelo UNIQUAC (UNIversal QUAsiChemical) para representar as interações de curto alcance e o modelo PDH para as interações de longo alcance. Observa-se em alguns dos trabalhos citados, o uso da equação de estado cúbica de Soave-Redlich-Kwong (SRK) para o ELV e a descrição de interações especíﬁcas entre íons realizadas por uma expansão de virial.
Grenthe e Plyasunov (1997) ﬁzeram uma comparação entre a modelo SIT (Speciﬁc ion Interaction Theory) de Brønsted-Guggenheim-Scatchard e o modelo PDH.
Dahl e Macedo (1992) utilizaram o modelo de contribuição de grupos UNIFAC (UNIQUAC Functional-group Activity Coeﬃcients) juntamente com a equação de estado cúbica SRK para ELV e equilíbrio líquido-líquido (ELL) de misturas com eletrólitos fortes.
Thomsen (1997) desenvolveu um modelo UNIQUAC estendido para soluções aquosas com eletrólitos baseado nas seguintes propriedades de equilíbrio e calorimétricas: atividade, coeﬁciente osmótico, grau de dissociação, densidade, calor de diluição e de solução e capacidade caloríﬁca. A partir destes novos parâmetros, foram elaborados diagramas de fases e simulações de processos, seguidas de otimização. O trabalho de Thomsen (1997) é uma importante referência, mas não se aplica diretamente a mistura de solventes, foco desta tese de doutorado.
Em Lorimer (1993) é apresenta uma modelagem não convencional para sistemas eletrolíticos com mistura de solventes, partindo-se do desenvolvimento baseado em soluções aquosas. Os modelos derivados do Modelo de Pitzer são de utilização convencional na abordagem de soluções aquosas eletrolíticas (ZEMAITIS JR. et al., 1986). Estes modelos são encontrados nas versões mais atualizadas de simuladores de processos como o AspenHYSYS® (aspentech.com). Entretanto, como parâmetros de íons e moléculas orgânicas ou grupos funcionais são raros e necessários nestes modelos, temos que este fato compromete as simulações de sistemas aquosos eletrolíticos com misturas de solventes.
Métodos de cálculo de equilíbrio de fases e fundamentação são encontrados em livros textos da área (SMITH; VAN NESS; ABBOTT, 2005; WALAS, 1985; PITZER, 1995; PRAUSNITZ; LICHTENTHALER; AZEVEDO, 1999; SANDLER, 1993).
Os modelos de coeﬁciente de atividade desenvolvidos para soluções não eletrolíticas, como UNIQUAC (ABRAMS; PRAUSNITZ, 1975), têm sido extensivamente aplicados.
Estes modelos se caracterizam por uma forte ﬂexibilidade matemática permitindo correlação de dados de equilíbrio para misturas complexas e também possuem fundamentação teórica.
O modelo UNIQUAC+Debye-Hückel foi aplicado para a modelagem de solubilidade de sais em mistura de solventes por Chiavone-Filho e Rasmussen (2000). Contudo, com base na literatura, é mais adequado o uso de modelos normalizados com a convenção assimétrica para sistemas com eletrólitos. Portanto, o modelo de Pitzer (1973) com a modelagem de solubilidade de excesso apresentada por Lorimer (1993) (que aplica a abordagem de McMillan-Mayer) apresenta-se mais coerente do ponto de vista de termodinâmica molecular e projeto de processos.
2.5 Ferramentas Computacionais O uso de ferramentas computacionais para a resolução de problemas em equilíbrio de fases de sistemas com eletrólitos se faz necessário devido à quantidade enorme de cálculos e a complexidade destes. A utilização destas ferramentas acompanhou o desenvolvimento das linguagens de computação, bem como dos programas computacionais com aplicações especíﬁcas, onde, hoje, cada qual apresenta suas vantagens: a) A linguagem de programação Fortran (gcc.gnu.org/Fortran) apresenta uma grande quantidade de bibliotecas matemáticas já consolidadas, como por exemplo, as bibliotecas numéricas e estatísticas IMSL (International Mathematics and Statistics Library) (roguewave.com); b) A linguagem de programação C++ (gcc.gnu.org/C++) continua sendo a mais utilizada no desenvolvimento ﬁnal de programas ou aplicações. Nela, a programação de alto nível, simpliﬁcada e rápida, permite excelentes resultados no nível de interação com o usuário; c) Destacam-se, também, os programas desenvolvidos para atividades especíﬁcas de simulação de processos como, por exemplo, o conhecido AspenHYSYS® (aspentech.com), que apresenta um conjunto de ferramentas, inclusive gráﬁcas que permitem reproduzir por simulação muitos dos processos encontrados na indústria de petróleo e gás natural; d) Outro destaque, são os programas com uma grande variedade de pacotes para aplicações especíﬁcas em diferentes áreas, indo desde pacotes matemáticos a pacotes de engenharia, como por exemplo: o MATLAB® (mathworks.com/MATLAB) e Simulink® (mathworks.com/Simulink), ou o seu clone livre: o Scilab (scilab.org); e) Existem linguagens de programação, ditas interpretadas, cujo código não é executado diretamente pelo sistema operacional e sim indiretamente por um programa chamado interpretador. Este fato implica em perda de desempenho em relação a outras linguagens que, após o seu código ser compilado, são executadas diretamente pelo sistema operacional. Porém, hoje, com os computadores cada vez mais rápidos, este fato torna-se cada vez menos relevante, implicando numa demanda menor de otimização do código para a máquina objetivando ganho de velocidade. Em contrapartida, cada vez é dado mais espaço em relação à otimização do código para o programador, cujo objetivo é uma melhor interação com o usuário. Neste aspecto, destaca-se a linguagem de programação Python (python.org), cuja otimização em relação ao programador permite até a mudança dinâmica da programação, ou seja, em tempo de execução. O destaque do Python em relação a outras linguagens também é evidente pela sua característica de ser multiplataforma, permitindo, sem grandes mudanças, a execução do mesmo código em diferentes sistemas operacionais como, por exemplo: Windows® (windows.microsoft.com), Mac OS X® (apple.com) e Ubuntu® (ubuntu.com). Também possui licença livre, o que é uma tendência mundial, apresenta bibliotecas numéricas avançadas, como o NumPy (numpy.org), cientíﬁcas, como o SciPy (scipy.org), gráﬁcas, como o matplotlib (matplotlib.org), de excepcional qualidade, além do desenvolvimento em programação visual, por meio do PySide (qt-project.org), ser simples e totalmente multiplataforma.
f) No desenvolvimento de aplicativos, destaca-se o Ambiente de Desenvolvimento Integrado (IDE) Eclipse (eclipse.org), que através de plugins, ou seja, módulos que ampliam as funções do aplicativo, consegue suportar as mais diversas linguagens de programação, além de permitir depuração e otimização, suporte a idiomas, gerência de versões, entre outras funcionalidades.
CAPÍTULO 3 METODOLOGIA 3 METODOLOGIA Neste capítulo, inicialmente explica-se sobre a estratégia utilizada na abordagem desta tese de doutorado. Em seguida, mostra-se como foram selecionados os sistemas estudados e apresenta-se os dados de equilíbrio que foram coletados e utilizados. Continua-se mostrando a forma de cálculo de diversas grandezas. A seguir, explica-se os algoritmos de cálculos usados pelo programa gerado (JAFOSSMS - Solubilidade de Sais em Mistura de Solventes). E por último descreve-se a implementação e forma de operação deste programa.
A Figura 19 ilustra de forma resumida a metodologia empregada neste trabalho de tese de doutorado.
Figura 19 – Fluxograma simpliﬁcado da metodologia empregada nesta tese de doutorado.
Deﬁnição dos sistemas a serem estudados Coleta de dados experimentais de solubilidade de sais em misturas de solventes da literatura Modelagem dos dados experimentais de solubilidade de sais em mistura de solventes Simulação e testes com modelo implementado Fonte: O autor.
Como pode ser observado na Figura 19, a primeira etapa consistiu em deﬁnir quais os sistemas a serem estudados. Para tanto, considerou-se, entre outros critérios, a disponibilidade de dados experimentais na literatura. Estes dados de solubilidade foram coletados juntamente com outros necessários a implementação, na etapa seguinte, dos métodos de cálculos para os modelos escolhidos e propostos. Após a transcrição do modelo em código computacional foram feitas simulações e testes para veriﬁcação da reprodutividade do modelo implementado em relação a conjuntos novos de dados experimentais. Tudo será detalhado nas próximas seções.
Em modelagem e simulação a partir de dados experimentais, destaca-se a estratégia adotada pela Universidade Técnica da Dinamarca, aqui ilustrada na Figura 20. Neste trabalho de tese de doutorado procurou-se utilizar esta mesma ideia. Esta, parte da classiﬁcação de três tipos de atividades necessárias ao êxito do trabalho, a saber: a) DADOS: dados experimentais; b) MODELOS: modelos e teorias; c) MÉTODOS: métodos e ferramentas de cálculo.
Figura 20 – Estratégia de abordagem do trabalho Os dados experimentais, que na Figura 20 estão, de propósito, em nível de destaque (mais elevados), reforçam a importância da qualidade destes e a prioridade que deve ser-lhes dada, considerando-os como fatores representativos da realidade do problema a ser abordado. Em seguida tem-se os modelos e teorias, que tanto podem ser inéditos como desenvolvidos (ou aperfeiçoados) a partir de conceitos já existentes, cujo objetivo é representar o melhor possível os dados experimentais (a realidade). Em igual nível tem-se os métodos e ferramentas de cálculo cujo objetivo é quantiﬁcar numericamente resultados advindos dos modelos e teorias de modo a compará-los com os dados experimentais. Isto é obtido por métodos numéricos e ferramentas computacionais que resolvem o modelo ou teoria propostos.
No processo de regeneração do MEG, conforme foi apresentado no Capítulo 1, podem ocorrer problemas operacionais por formação de precipitados em locais indesejáveis nos equipamentos. O conhecimento sobre as condições de formação destes precipitados é essencial para poder evitá-los. Portanto, o estudo do equilíbrio de fases em sistemas com espécies iônicas presentes na água de produção faz-se extremamente necessário. Para isto poder ser feito é preciso, primeiramente, o conhecimento da composição da água de produção. A Tabela 3 apresenta as características da água de formação representativa do campo de Mexilhão, coletada do poço 3-MXL-3-SPS.
Fonte: Petrobras (2007, p. 110).
Dentre as espécies iônicas presentes na água de formação, considerando que a água de produção possui composição semelhante a de formação e, também, em razão da maior disponibilidade de dados experimentais na literatura e a relevância destes íons, optou-se por selecionar, os seguintes sistemas para estudo através de modelagem e simulação com respeito ao comportamento da solubilidade dos sais e outras propriedades: a) Água+MEG+NaCl; b) Água+MEG+KCl.
Dados de ELV de sistemas aquosos com alcoóis (metanol e etanol) na presença de um eletrólito forte, a saber: o cloreto de sódio (NaCl), também foram estudados neste trabalho de tese de doutorado, em termos de modelagem e simulação, gerando um artigo (OLIVEIRA et al., 2014). Este artigo foi incluído no Apêndice A e o programa desenvolvido para ele, VLE Regression, é apresentado no Apêndice C.
Para realização da modelagem e simulação, após a seleção dos sistemas a serem estudados, ou seja: Água+MEG+NaCl e Água+MEG+KCl, escolheu-se os dados experimentais utilizados nesta tese de doutorado a partir da Tabela 1 e da Tabela 2, apresentadas na seção 2.2. Os critérios utilizados nesta seleção foram: a) a limitação da faixa de temperatura para a faixa de 10 ℃ a 150 ℃; b) a seleção de dados apenas dos sistemas escolhidos.
Os dados de solubilidade de sais em água, usados neste trabalho de tese de doutorado, obtidos a partir da Tabela 1 pela limitação da faixa de temperatura, são apresentados na Tabela 4.
Tabela 4 – Dados experimentais de solubilidade de sal em água a diferentes temperaturas usados nesta tese de doutorado.
Da mesma forma, os dados de solubilidade de sais em mistura de solventes (água e MEG), usados nesta tese de doutorado, obtidos a partir da Tabela 2 pela limitação aos sistemas escolhidos, são apresentados na Tabela 5.
Tabela 5 – Dados experimentais de solubilidade de sal em mistura de solventes usados nesta tese de doutorado.
Neste trabalho de tese de doutorado, optou-se pela uniformização de todas as equações e seus parâmetros para o Sistema Internacional de Unidades (SI) (BIPM, 2006).
Portanto, todas as grandezas presentes neste trabalho, cujas unidades não sejam declaradas explicitamente, estão no SI.
3.5 Molalidade e Fração Molar 3.5.1 Cálculo da molalidade do sal na mistura de solventes {H2O+MEG} MEG ) foi calculada em função das propriedades dos dados experimentais consultados. Assim sendo, em função da fração mássica de MX (wMX), tem-se: A molalidade do sal na mistura de solventes (b (3.1) onde MMX é a massa molar de MX. E, em função das massas respectivamente de MX (mMX) e de água e MEG (mH2O+MEG), tem-se: (3.2) 3.5.2 Cálculo da fração molar de MEG livre de sal na mistura de solventes A fração molar de MEG livre de sal na mistura de solventes (x0 MEG) foi calculada em função das propriedades dos dados experimentais consultados. Assim sendo, em função das massas respectivamente do MEG (mMEG) e da água (mH2O), tem-se: (3.3) onde MMEG função da fração mássica de água livre de sal na mistura de solventes (w0 H2O), tem-se: (3.4) MEG), tem-se: w0 MEG/MMEG MEG)/MH2O + w0 x0 MEG = (3.5) (1−w0 MEG/MMEG e, por último, em função das frações mássicas respectivamente de água (wH2O) e de MEG (wMEG) tem-se: wMEG/MMEG x0 MEG = (3.6) (1−wMEG−wMX)/MH2O + wMEG/MMEG 1 Para valores de constantes, consulte a Tabela 6 da seção 3.11.
As constantes dielétricas dos solventes puros (εr,H2O e εr,MEG) foram calculadas em função da temperatura (T) pelas seguintes equações (ÅKERLÖF, 1932): (3.7) (3.8) onde εr,H2O e εr,MEG são as constantes dielétricas respectivamente da água e do MEG.
3.6.2 Cálculo da constante dielétrica da mistura de solventes A constante dielétrica da mistura água e MEG (εr,H2O+MEG) foi calculada em função da temperatura (T), da fração molar de MEG livre de sal na mistura de solventes (x0 MEG) e das constantes dielétricas dos solventes puros na mesma temperatura (εr,H2O e εr,MEG) pela equação (JOUYBAN; SOLTANPOUR; CHAN, 2004): (3.9) H2O = 1 − x0 onde εr,H2O+MEG é a constante dielétrica da mistura água e MEG, e x0 MEG.
3.7 Densidades Absolutas 3.7.1 Cálculo das densidades absolutas dos solventes puros As densidades absolutas dos solventes puros (ρH2O e ρMEG) foram calculadas em função da temperatura (T) pelas equações (GREEN; PERRY, 2007): sendo τ = 1 − T/647,096.
3.7.2 Cálculo das densidades absolutas da mistura de solventes A densidade absoluta da mistura água e MEG (ρH2O+MEG) foi calculada em função das densidades dos solventes puros (ρH2O e ρMEG) e da fração molar de MEG livre de sal na mistura de solventes (x0 (volume especíﬁco), pela equação: MEG), assumindo regra de mistura ideal com o seu inverso 
ρH2O+MEG = (3.12) w0 H2O/ρH2O + w0 x0 MEGMMEG MEG/ρMEG H2O = 1 − w0 H2O = 1 − x0 e w0 sendo x0 MEG, w0 MEG.
MEG = x0H2OMH2O + x0MEGMMEG 3.8 Coeﬁciente de Atividade 3.8.1 Cálculo do coeﬁciente de atividade do sal pelo Modelo de Pitzer O Modelo de Pitzer (PITZER, 1973) conforme apresentado na subseção 2.3.3 foi empregado para o cálculo do coeﬁciente de atividade do sal (γMX). Sendo assim, este foi calculado em função da molalidade do sal (bMX), da constante de Debye-Hückel na forma (1) para coeﬁciente osmótico (Aφ) e dos parâmetros do modelo (β MX e C φMX), ou seja: (0) MX, β (3.13) C γMX (3.14) (3.15) (3.16) (3.17) (3.18) ν Neste trabalho de tese de doutorado, o Modelo de Pitzer foi estendido para misturas água e MEG. Bastou para isso, que a molalidade do sal (bMX), a constante de Debye-Hückel MX) fossem referentes a mistura água e (Aφ) e os parâmetros do modelo (β MEG, e não referentes somente a água (como no modelo original).
(0) MX, β (1) MX e C φ 3.8.2 Cálculo do coeﬁciente de atividade do sal em MEG {MEG} MX O coeﬁciente de atividade do sal em MEG (γ ) foi calculado em função da {H2O} MX ) e das molalidades ), utilizando-se a energia livre de Gibbs de {H2O} MX ) e em MEG (b 2), pela equação (LORIMER, 1993): (3.19) 3.8.3 Constante de Debye-Hückel 3.8.3.1 Cálculo da constante de Debye-Hückel para a água A constante de Debye-Hückel da água na forma para coeﬁciente osmótico (Aφ,H2O) foi calculada em função da temperatura (T) pela equação (CHEN et al., 1982): 3.20 + (3.20) 3.8.3.2 Cálculo da constante de Debye-Hückel para o MEG A constante de Debye-Hückel do MEG na forma para coeﬁciente osmótico (Aφ,MEG) foi calculada em função das constante de Debye-Hückel da água na forma para coeﬁciente osmótico (Aφ,H2O), densidade absoluta (ρH2O) e constante dielétrica (εr,H2O) da água, e das densidade absoluta (ρMEG) e constante dielétrica (εr,MEG) do MEG, tudo a mesma temperatura (T), pela Equação 3.21. Esta foi obtida a partir da razão entre a Equação 2.21 aplicada, primeiro, com ρsolv = ρH2O e, depois, com ρsolv = ρMEG, e da Equação 2.44.
(3.21) 3.8.3.3 Cálculo da constante de Debye-Hückel para a mistura de solventes A constante de Debye-Hückel da mistura água e MEG na forma para coeﬁciente osmótico (Aφ,H2O+MEG) foi calculada em função das constante de Debye-Hückel da água na forma para coeﬁciente osmótico (Aφ,H2O), densidade absoluta (ρH2O) e constante dielétrica (εr,H2O) da água, e das densidade absoluta (ρH2O+MEG) e constante dielétrica (εr,H2O+MEG) da mistura água e MEG, tudo calculado a mesma temperatura (T), pela Equação 3.22.
Esta foi obtida a partir da razão entre a Equação 2.21 aplicada, primeiro, com ρsolv = ρH2O e, depois, com ρsolv = ρH2O+MEG, e da Equação 2.44.
(3.22) e C φ{H2O} ), foram calculados em função da temperatura (T), pelas equações (SILVESTER; PITZER, (0){H2O} NaCl (1){H2O} NaCl Os parâmetros do modelo para o NaCl em água (β , β NaCl 1977): (3.23) (3.24) (3.25) (0){H2O} NaCl (1){H2O} NaCl são parâmetros do Modelo de Pitzer para o NaCl em água, e é o terceiro coeﬁciente do virial na forma para coeﬁciente de atividade para o onde β C φ{H2O} NaCl NaCl em água.
e β 3.8.4.2 Cálculo dos parâmetros do Modelo de Pitzer para o KCl em água (0){H2O} KCl (1){H2O} KCl e C φ{H2O} Os parâmetros do modelo para o KCl em água (β , β ), KCl foram calculados em função da temperatura (T), pelas equações (ARCHER, 1999): = 0, 413229483398493 − 0, 000870121476114027 (T − 298, 15) + + 0, 00000101413736179231 (T − 298, 15)2 + − 99, 8120581680816 − 1, 99822538522801 (0){H2O} KCl β (3.26) T − 225 T = 0, 206691413598171 + 0, 00102544606022162 (T − 298, 15) + − 1883, 49608000903 (1){H2O} KCl β (3.27) = −0, 00133515934994478 + 0, 234117693834228 = 0, 75896583546707 C φ{H2O} KCl + T − 225 (3.28) T (0){H2O} são parâmetros do Modelo de Pitzer para o KCl em água, e KCl é o terceiro coeﬁciente do virial na forma para coeﬁciente de atividade para o KCl (1){H2O} KCl onde β C φ{H2O} KCl em água.
e β 3.8.5 Parâmetros do Modelo de Pitzer em MEG e em mistura de solventes A metodologia usada por Lorimer (1993), em relação a misturas água e MEG, (0) MX e C φMX são constantes, e que o parâmetro considera que os parâmetros do modelo β (1) do modelo β MX apresenta dependência linear, em escala logarítmica, com a constante dielétrica. Com estas considerações, pode-se estender o Modelo de Pitzer para misturas água e MEG, permitindo o cálculo dos parâmetros do modelo para estas misturas.
3.8.5.1 Cálculo dos parâmetros do Modelo de Pitzer em MEG (0){MEG} MX e C φ{MEG} (0){H2O} MX Os parâmetros do modelo em MEG, β , foram calculados em MX função dos parâmetros do modelo em água, respectivamente β e C φ{H2O} , por: MX (3.29) (3.30) (1){MEG} MX foi calculado resolvendo-se, para este parâmetro, a equação do Modelo de Pitzer estendido para o MEG. Ou seja, usando, {MEG} neste modelo: o valor de ln γ , obtido da Equação 3.19, o valor de Aφ,MEG, obtido da MX (0){MEG} Equação 3.21, e os valores de β , obtidos respectivamente da Equação 3.29 MX e as constantes do sal e do modelo (zM, zX, ν, e da Equação 3.30, além do valor de b α e ), resulta em β como única incógnita. Logo, resolve-se a equação resultante para β O parâmetro do modelo em MEG, β e C φ{MEG} MX {MEG} MX (1){MEG} MX (1){MEG} MX .
3.8.5.2 Cálculo dos parâmetros do Modelo de Pitzer em mistura de solventes (0){H2O+MEG} MX e C φ{H2O+MEG} , (0){H2O} MX Os parâmetros do modelo na mistura água e MEG, β MX foram calculados em função dos parâmetros do modelo em água, respectivamente β e C φ{H2O} , por: MX (0){H2O+MEG} MX C φ{H2O+MEG} MX (0){H2O} = β MX = C φ{H2O} (3.31) (3.32) β MX (1){H2O+MEG} MX O parâmetro do modelo na mistura água e MEG, β , foi calculado e (1){H2O} MX em função dos parâmetros do modelo em água e em MEG (respectivamente β (1){MEG} ) e das constantes dielétricas dos solventes puros (εr,H2O e εr,MEG), por: β MX (3.33) (3.34) (3.35) onde β0 = 1.
Adaptou-se a Equação de Clarke-Glew (CLARKE; GLEW, 1966) para a molalidade, obtendo-se: (3.36) onde os Θ−2 e Θi são parâmetros ajustáveis da equação, e T0 = 1 K é a temperatura unitária.
3.9.2 Potencial químico padrão de excesso do sal em mistura de solventes como função da fração molar do MEG livre de sal e da temperatura Adaptou-se a equação proposta por Lorimer (1993) generalizando-a, e tornando os seus parâmetros dependentes polinomialmente da temperatura, obtendo-se: (3.37) 3.10 Propriedades de Excesso Apresentadas em Lorimer (1993) No cálculo das propriedades de excesso apresentadas em Lorimer (1993) foi necessário, primeiramente, calcular as respectivas propriedades ideais. Estas, foram calculadas utilizando-se regra de mistura ideal, em solventes simples, com a fração molar de MEG livre de sal, ou seja: (3.38) (3.39) (3.40) (3.41) (3.42) A Tabela 6 apresenta os valores de diversas constantes utilizadas neste trabalho de tese de doutorado, suas unidades e a referência de onde foram coletadas.
3.12 Algoritmos Nesta seção, várias sub-rotinas são apresentadas, na forma de ﬂuxograma, juntamente com um breve resumo que esclarece o seu funcionamento. Em seguida, mostra-se como foram utilizadas a Equação 3.36 (subseção 3.12.5) e a Equação 3.37 (subseção 3.12.6) nos ajustes, por regressão de dados de equilíbrio, para um sal (NaCl ou KCl) e, respectivamente com solvente simples em função da temperatura, e com mistura água e MEG em função da temperatura e da composição de MEG livre de sal. Finalmente, com estas equações e as sub-rotinas, mostra-se como calcular propriedades de misturas água e MEG, inclusive de excesso, em função da temperatura e da composição de MEG livre de sal (subseção 3.12.7).
Nestas sub-rotinas usou-se os valores presentes na Tabela 6, bem como os valores: (3.43) (3.44) para as cargas dos íons (zM e zX), para os coeﬁcientes estequiométricos dos íons (νM e νX) e para a sua soma (ν). Estes últimos valores, devem-se ao fato deste trabalho de tese de doutorado abordar apenas os sais monovalentes: NaCl e KCl.
3.12.1 Sub-rotina Pitzer 3.12.2 Sub-rotina beta1_MEG (1){MEG} MX do Modelo de Pitzer em MEG. Este foi calculado em função da molalidade de MX em ), da constante de Debye-Hückel do MEG na forma para coeﬁciente osmótico MEG (b do Modelo de Pitzer em MEG. Um valor (Aφ,MEG) e dos parâmetros β (1){MEG} inicial (estimativa) para β MX Esta sub-rotina (Figura 22) foi utilizada para calcular-se o parâmetro β {MEG} MX (0){MEG} MX (β e C φ{MEG} (1){MEG}∗ MX MX ) também precisou ser fornecido.
Figura 22 – Fluxograma da subrotina beta1_MEG.
3.12.3 Sub-rotina prop_mix Esta sub-rotina (Figura 23) foi utilizada para calcular-se propriedades de mistura.
Este cálculo foi realizado em função da molalidade de MX na mistura água e MEG {H2O+MEG} (b MEG) e da temperatura (T). A MX propriedade de mistura foi escolhida, por meio da variável f lag, da seguinte forma: ), da fração molar de MEG livre de sal (x0 Figura 23 – Fluxograma da subrotina prop_mix.
Fonte: O autor.
Observa-se que, na chamada a sub-rotina beta1_MEG, o valor inicial (estima- (1){MEG}∗ tiva) β ). Os valores das MX molalidades de MX em solvente simples (b ) foram obtidos em função da temperatura (T) com os parâmetros (Θi) da equação de ajuste por regressão de dados experimentais (Equação 3.36).
(1){H2O} MX corresponde ao valor do parâmetro em água (β {H2O} MX {M EG} MX e b 3.12.4 Sub-rotina b_mix Esta sub-rotina (Figura 24) foi utilizada para calcular-se a molalidade de MX na ) em função do potencial químico padrão de excesso de 0{H2O+MEG} /νRT), da fração molar de MEG livre de sal MX {H2O+MEG}∗ ) MX iE h {H2O+MEG} MX mistura água e MEG (b MX na mistura água e MEG ( (x0 também precisou ser fornecido.
µ {H2O+MEG} MX MEG) e da temperatura (T). Um valor inicial (estimativa) para b (b Figura 24 – Fluxograma da subrotina b_mix.
3.12.5 Cálculo da molalidade do sal em solvente simples como função da temperatura Através dos dados experimentais coletados da literatura (Tabela 4 e Tabela 5), selecionou-se os que referiam-se a solubilidade de um sal (NaCl ou KCl) em solvente simples a diferentes temperaturas. Em seguida, quando necessário, os dados foram convertidos para molalidade. Finalmente, usou-se a Equação 3.36 para, por meio de ajuste por regressão, obter-se os melhores valores para os parâmetros Θi. A equação especíﬁca resultante, para cada sal, que representava o conjunto experimental de forma satisfatória, foi selecionada desprezando-se parâmetros considerados irrelevantes. As equações especíﬁcas, para cada sal e solvente, encontram-se no Capítulo 4.
3.12.6 Cálculo do potencial padrão de excesso do sal na mistura de solventes Através dos dados experimentais coletados da literatura (Tabela 4 e Tabela 5), selecionou-se os que referiam-se a um sal (NaCl ou KCl) a diferentes frações de MEG na mistura de solvente e, também, a diferentes temperaturas e concentrações. Em seguida, quando necessário, os dados foram normalizados para molalidade de sal na mistura água e MEG (b MEG) e temperatura (T). Prosseguindo, estes dados, juntamente com as equações especíﬁcas para cada sal e solvente simples (obtidas conforme descrito na subseção 3.12.5) foram submetidos a sub-rotina prop_mix (Figura 23), com o valor para a variável de controle: f lag = 0. Desta forma, obteve-se valores de potencial padrão de excesso do sal na mistura água e MEG ( MEG e T. Finalmente, usou-se a Equação 3.37 nestes resultados para, por meio de ajuste por regressão, obter-se os melhores valores para os parâmetros Θi,j. A equação especíﬁca resultante, para cada sal, que representava o conjunto experimental de forma satisfatória, foi selecionada desprezando-se parâmetros considerados irrelevantes. As equações especíﬁcas, para cada sal, encontram-se no Capítulo 4.
{H2O+MEG} MX ), fração molar de MEG livre de sal na mistura água e MEG (x0 h iE /νRT), a diferentes x0 0{H2O+MEG} MX µ 3.12.7 Cálculo das propriedades de mistura A partir das sub-rotinas apresentadas nesta seção e das equações especíﬁcas, geradas por meio da regressão dos dados experimentais, cujos parâmetros foram selecionados e calculados conforme descrito na subseção 3.12.5 e na subseção 3.12.6, obteve-se as propriedades de mistura em função da fração molar de MEG livre de sal na mistura água e MEG (x0 MEG) e da temperatura (T). Para isso, primeiramente, calculou-se a molalidade de MX na mistura água e MEG (b ), usando a sub-rotina b_mix, com o valor para /νRT) obtido o potencial químico padrão de excesso na mistura água e MEG ( pela equação de regressão especíﬁca e, também, com os valores de x0 MEG e T. Finalmente, utilizando estes resultados na sub-rotina prop_mix (Figura 23), com valores para a variável h iE {H2O+MEG} MX 0{H2O+MEG} MX µ de controle (f lag) conforme a Tabela 7, obteve-se a propriedade de mistura especiﬁcada.
3.13 Programa JAFOSSMS Por meio dos algoritmos apresentados na seção 3.12, foi implementado em Python (python.org), utilizando-se o IDE Eclipse (eclipse.org) para depuração e desenvolvimento, o programa denominado: JAFOSSMS - Solubilidade de Sais em Mistura de Solventes.
Este aplicativo possui uma interface gráﬁca, de comunicação com o usuário, desenvolvida em PySide (qt-project.org), bem como utiliza as bibliotecas NumPy (numpy.org) e SciPy (scipy.org) para cálculos numéricos e cientíﬁcos e, a biblioteca matplotlib (matplotlib.org) para gerar gráﬁcos.
O sistema operacional adotado para programação foi o Ubuntu® (ubuntu.com), pelas facilidades próprias deste sistema. No entanto, o programa é totalmente portável em Windows® (windows.microsoft.com) e, também, em Mac OS X® (apple.com). Os requisitos para a execução deste programa, em diferentes sistemas operacionais, encontram-se descritos no Apêndice B. A seguir, apresenta-se o passo a passo de como utilizar o programa JAFOSSMS.
Para utilizar-se o programa JAFOSSMS, primeiramente escolhe-se o arquivo principal (subseção D.6.1), referente ao sistema a ser estudado, por meio do botão "Procurar" (Figura 25) ou caixa de texto "Arquivo com Dados de Entrada". Em seguida, executa-se os cálculos de regressão por meio do botão "Executar".
Figura 25 – Programa JAFOSSMS : Seleção do sistema a ser estudado.
Terminado os cálculos, o programa retorna para o usuário um relatório, na aba "RELATÓRIO GERAL", de tudo que foi calculado e utilizado nos cálculos, inclusive toda a parte estatística (Figura 26). Este relatório pode ser copiado ou salvo.
Figura 26 – Programa JAFOSSMS : Relatório gerado.
Fonte: o autor.
O programa oferece, por meio da aba "SOLVENTE SIMPLES", botões de opções e caixas de seleção com opções para poder-se gerar um gráﬁco binário (Figura 27).
Figura 27 – programa JAFOSSMS: Opções para geração de gráﬁco binário.
O programa oferece, por meio da aba "MISTURA DE SOLVENTES", botões de opções e caixas de seleção com opções para poder-se gerar um gráﬁco ternário (Figura 28).
Figura 28 – Programa JAFOSSMS : Opções para geração de gráﬁco ternário.
Fonte: o autor.
Dentre estes objetos gráﬁcos, destacam-se as caixas de seleção, para escolher o modo (regressão ou predição), e o botão para escolha de isotermas. A escolha de isotermas realiza-se numa nova janela (Figura 29).
Figura 29 – Programa JAFOSSMS : Seleção das isotermas para geração de gráﬁco ternário.
Por último, de acordo com a seleção, clicando no botão correspondente ao gráﬁco desejado, obtém-se este, na aba "GRÁFICO E ESTATÍSTICAS", juntamente com um pequeno resumo estatístico.
A Figura 30 ilustrada um gráﬁco binário.
Figura 30 – Programa JAFOSSMS : Gráﬁco binário.
Fonte: o autor.
A Figura 31 ilustrada um gráﬁco ternário.
Figura 31 – Programa JAFOSSMS : Gráﬁco ternário.
Na aba "GRÁFICO E ESTATÍSTICAS", apresenta-se o gráﬁco em uma interface que permite executar personalizações, como por exemplo: ampliar regiões no gráﬁco, mudar a posição e tamanho da legenda, mudar o tamanho dos rótulos nos eixos, e também, salvar o gráﬁco. Além destas personalizações para o gráﬁco, pode-se copiar ou salvar o resumo estatístico.
CAPÍTULO 4 RESULTADOS E DISCUSSÕES 4 RESULTADOS E DISCUSSÕES Neste capítulo, inicialmente apresenta-se cada resultado gerado pelo programa JAFOSSMS (seção 3.13), juntamente com uma discussão que esclarece o que ocorreu.
Por último, apresenta-se a validação do Modelo de Pitzer implementado e, também, a comparação do Modelo JAFOSSMS com outros modelos.
Foi escolhida uma sequência para a apresentação dos resultados e discussões.
Primeiramente, dividiu-se os sistemas estudados (Tabela 4 e Tabela 5) pelo sal. Ou seja, primeiro os sistemas com NaCl e, em seguida, os com KCl. Para cada sal, foi feita a divisão em sistemas com solvente simples e com mistura água e MEG. Para o caso dos sistemas com solvente simples, primeiro apresenta-se os sistemas com água e, em seguida, os com o MEG. Para o caso de sistemas com mistura de solventes, primeiro apresenta-se o potencial químico padrão de excesso, prossegue-se com a molalidade, o logaritmo de excesso da molalidade, o coeﬁciente de atividade e, ﬁnalmente, o logaritmo de excesso do coeﬁciente de atividade. Para cada caso, nos sistemas com mistura de solventes, primeiro apresenta-se o resultado cujos pontos experimentais foram utilizados no procedimento de ajuste por regressão do potencial químico padrão de excesso, seguido por outro resultado, cujos pontos experimentais não foram utilizados neste procedimento. O primeiro é chamado de modo de Cálculo Normal / Regressão e o outro de modo de Predição.
4.1 Sistemas com NaCl 4.1.1 Sistemas com solvente simples 4.1.1.1 Sistema H2O+NaCl Dados de solubilidade de NaCl em água, selecionados dos sistemas estudados (Tabela 4 e Tabela 5), foram ajustados por regressão não linear, conforme descrito na subseção 3.12.5, utilizando-se a Equação 3.36. Resultando, após desprezar-se b0 e outras simpliﬁcações, na equação: (4.1) A análise estatística do ajuste por regressão não linear foi realizada com um nível da signiﬁcância (α) de 5,0%, obtendo-se: linear.
Tabela 8 – ANOVA (Sistema H2O+NaCl).
A Tabela 9 apresenta os parâmetros obtidos, do ajuste por regressão não linear, para a Equação 4.1, juntamente com seus intervalos de conﬁança. O valor, para este caso, do t de Student crítico foi: t-crítico = 2,0484.
Tabela 9 – Parâmetros obtidos (Sistema H2O+NaCl).
A Tabela 10 apresenta a matriz de correlação dos parâmetros obtidos, do ajuste por regressão não linear, para a Equação 4.1.
Tabela 10 – Matriz de Correlação (Sis-Algumas outras medidas estatísticas básicas, também foram calculadas: a) desvio absoluto médio = 0, 01451 mol · kg−1; b) desvio absoluto máximo = 0, 06464 mol · kg−1; c) desvio relativo absoluto médio = 0,23%; d) desvio relativo absoluto máximo = 0,96%.
O ajuste foi bastante satisfatório, o que é evidenciado pelo valor R Observa-se, na Figura 32, que a molalidade do NaCl aumenta com a temperatura, de forma ligeiramente acima da linear, em toda a faixa de temperatura correlacionada. Os dados experimentais, de todos os autores, dispuseram-se em torno da curva, conﬁrmando um bom ajuste.
Figura 32 – Molalidade do NaCl em H2O em função da Temperatura.
Fonte: O autor.
4.1.1.2 Sistema MEG+NaCl Dados de solubilidade de NaCl em MEG, selecionados dos sistemas estudados (Tabela 4 e Tabela 5), foram ajustados por regressão não linear, conforme descrito na subseção 3.12.5, utilizando-se a Equação 3.36. Resultando, após desprezar-se b0 e outras simpliﬁcações, na equação: (4.2) da signiﬁcância (α) de 5,0%, obtendo-se: a) desvio padrão assintótico: s = 0, 010445 mol · kg−1; b) coeﬁciente de determinação: R c) coeﬁciente de determinação ajustado: R 2 = 0,93533; 
ajustado = 0,92455.
A Tabela 11 apresenta a ANOVA do ajuste por regressão não linear.
Tabela 11 – ANOVA (Sistema MEG+NaCl).
A Tabela 12 apresenta os parâmetros obtidos, do ajuste por regressão não linear, para a Equação 4.2, juntamente com seus intervalos de conﬁança. O valor, para este caso, do t de Student crítico foi: t-crítico = 2,4469.
Tabela 12 – Parâmetros obtidos (Sistema MEG+NaCl).
A Tabela 13 apresenta a matriz de correlação dos parâmetros obtidos, do ajuste por regressão não linear, para a Equação 4.2.
Tabela 13 – Matriz de Correlação (Sistema MEG+NaCl).
Algumas outras medidas estatísticas básicas foram calculadas: a) desvio absoluto médio = 0, 00699 mol · kg−1; b) desvio absoluto máximo = 0, 02083 mol · kg−1; c) desvio relativo absoluto médio = 0,58%; d) desvio relativo absoluto máximo = 1,74%.
O ajuste foi bastante satisfatório, o que é evidenciado pelo valor R 2 = 0, 93533 para o coeﬁciente de determinação, pela ANOVA (Tabela 8) com Pr(>F) = 0,00002 e Observa-se, na Figura 33, que a molalidade do NaCl diminui com a temperatura, de forma quase linear, em toda a faixa de temperatura correlacionada. Os dados experimentais, de todos os autores, dispuseram-se em torno da curva, conﬁrmando um bom ajuste. O ponto experimental de Kraus, Raridon e Baldwin (1964), próximo a 300K, embora sendo o mais deslocado da curva ajustada, apresenta um desvio absoluto, relativo a molalidade, muito pequeno.
Figura 33 – Molalidade do NaCl em MEG em função da Temperatura.
Fonte: O autor.
4.1.2 Sistema com mistura água e MEG (H2O+MEG+NaCl) 4.1.2.1 Potencial químico padrão de excesso do NaCl na mistura água e MEG (Regressão) Dados de solubilidade de NaCl em água e MEG, selecionados dos sistemas estudados (Tabela 4 e Tabela 5), foram ajustados por regressão não linear, conforme descrito na subseção 3.12.6, utilizando-se a Equação 3.37. Resultando, após desprezar-se b0 e outras simpliﬁcações, na equação: 2 (4.3) A análise estatística do ajuste por regressão não linear foi realizada com um nível da signiﬁcância (α) de 5,0%, obtendo-se: 
ajustado = 0,99926.
Tabela 14 – ANOVA (Sistema H2O+MEG+NaCl).
A Tabela 15 apresenta os parâmetros obtidos, do ajuste por regressão não linear, para a Equação 4.3, juntamente com seus intervalos de conﬁança. O valor, para este caso, do t de Student crítico foi: t-crítico = 1,9837.
Tabela 15 – Parâmetros obtidos (Sistema H2O+MEG+NaCl).
A Tabela 16 apresenta a matriz de correlação dos parâmetros obtidos, do ajuste por regressão não linear, para a Equação 4.3.
Observa-se, na Figura 34, que o potencial químico padrão de excesso do NaCl na mistura água e MEG, nas diversas isotermas, cresce desde zero até um valor máximo correspondente a fração molar de MEG livre de solvente próximo a 0,6 e, depois, decresce até o valor zero. Nota-se, também, que as isotermas se cruzam no valor aproximado de 0,2 para a fração molar de MEG livre de solvente. Para valores menores que este, o potencial químico padrão de excesso do NaCl na mistura água e MEG diminui com o aumento da temperatura e, para a faixa restante da fração molar de MEG livre de solvente, tem um comportamento inverso. Os dados experimentais, de todos os autores, dispuseram-se em torno das respectivas isotermas, conﬁrmando o bom ajuste.
Figura 34 – Potencial químico padrão de excesso do NaCl na mistura água e MEG em função da fração molar de MEG livre de NaCl (Regressão)2.
1 Foram desconsiderados 38 pontos experimentais.

Isotermas com menos de 3 pontos experimentais foram omitidas.
4.1.2.2 Potencial químico padrão de excesso do NaCl na mistura água e MEG (Predição) A Figura 35 representa as isotermas do potencial químico padrão de excesso do NaCl na mistura água e MEG em função da fração molar de MEG livre de NaCl (Predição). Nela, as regiões de crescimento e decrescimento correspondem, aproximadamente, as observadas na Figura 34. Nota-se, também, o fenômeno de inversão em torno do mesmo valor citado na Figura 34, ou seja, no valor aproximado de 0,2 para a fração molar de MEG livre de solvente. Os dados experimentais, de todos os autores, dispuseram-se em torno das respectivas isotermas, conﬁrmando a boa predição.
Figura 35 – Potencial químico padrão de excesso do NaCl na mistura água e MEG em função da fração molar de MEG livre de NaCl (Predição).
Fonte: O autor.
Algumas medidas estatísticas básicas, para os desvios entre valores estimados e pontos experimentais, foram geradas: 3 Foram desconsiderados 5 pontos experimentais.
4.1.2.3 Molalidade do NaCl na mistura água e MEG Observa-se, na Figura 36, que a molalidade do NaCl na mistura água e MEG, nas diversas isotermas, diminui, a razão inferior que a linear, com o aumento da fração molar de MEG livre de solvente em toda a faixa desta. Nota-se, também, que as isotermas se cruzam no valor aproximado de 0,8 para a fração molar de MEG livre de solvente. Para valores menores que este, a molalidade do NaCl na mistura água e MEG aumenta com o aumento da temperatura e, para a faixa restante da fração molar de MEG livre de solvente, tem um comportamento inverso. Os dados experimentais, de todos os autores, dispuseram-se em torno das respectivas isotermas, conﬁrmando o bom cálculo.
Figura 36 – Molalidade do NaCl na mistura água e MEG em função da fração molar de MEG livre de NaCl.
Fonte: O autor.
Algumas medidas estatísticas básicas, para os desvios entre valores calculados e pontos experimentais, foram geradas: a) desvio absoluto médio = 0, 02186 mol · kg−1; b) desvio absoluto máximo = 0, 12584 mol · kg−1; c) desvio relativo absoluto médio = 0,83%; d) desvio relativo absoluto máximo = 4,27%.
Os valores do desvio absoluto médio = 0, 02186 mol · kg−1 e do valor do desvio relativo absoluto médio = 0,83% indicam uma representatividade satisfatória em relação aos valores experimentais confrontados. Sendo assim, foi considerado que os valores calculados para a molalidade do NaCl na mistura água e MEG representaram, de forma aceitável, os dados experimentais comparativos usados.
4.1.2.4 Molalidade do NaCl na mistura água e MEG (Predição) A Figura 37 representa as isotermas da molalidade do NaCl na mistura água e MEG em função da fração molar de MEG livre de NaCl (Predição). Nela, a forma como ocorre o decrescimento da molalidade do NaCl na mistura água e MEG corresponde, aproximadamente, a observada na Figura 36. Nota-se, também, o fenômeno de inversão em torno do mesmo valor citado na Figura 36, ou seja, no valor aproximado de 0,8 para a fração molar de MEG livre de solvente. Os dados experimentais, de todos os autores, dispuseram-se em torno das respectivas isotermas, conﬁrmando a boa predição.
Figura 37 – Molalidade do NaCl na mistura água e MEG em função da fração molar de MEG livre de NaCl (Predição).
Fonte: O autor.
Algumas medidas estatísticas básicas, para os desvios entre valores estimados e pontos experimentais, foram geradas: 4.1.2.5 Logaritmo de excesso da molalidade do NaCl na mistura água e MEG Observa-se, na Figura 38, que o logaritmo de excesso da molalidade do NaCl na mistura água e MEG, nas diversas isotermas, decresce desde zero até um valor mínimo correspondente a fração molar de MEG livre de solvente próximo a 0,4 e, depois, cresce até o valor zero. Nota-se, também, que o logaritmo de excesso da molalidade do NaCl na mistura água e MEG, para cada fração molar de MEG livre de solvente, aumenta com o aumento da temperatura. Os dados experimentais, de todos os autores, dispuseram-se em torno das respectivas isotermas, conﬁrmando o bom cálculo.
Figura 38 – Logaritmo de excesso da molalidade do NaCl na mistura água e MEG em função da fração molar de MEG livre de NaCl.
Fonte: O autor.
Algumas medidas estatísticas básicas, para os desvios entre valores calculados e pontos experimentais, foram geradas: 4.1.2.6 Logaritmo de excesso da molalidade do NaCl na mistura água e MEG (Predição) A Figura 39 representa as isotermas do logaritmo de excesso da molalidade do NaCl na mistura água e MEG em função da fração molar de MEG livre de NaCl (Predição). Nela, as regiões de decrescimento e crescimento correspondem, aproximadamente, as observadas na Figura 38. Nota-se, como na Figura 38, que o logaritmo de excesso da molalidade do NaCl na mistura água e MEG, para cada fração molar de MEG livre de solvente, aumenta com o aumento da temperatura. Os dados experimentais, de todos os autores, dispuseram-se em torno das respectivas isotermas, conﬁrmando a boa predição.
Figura 39 – Logaritmo de excesso da molalidade do NaCl na mistura água e MEG em função da fração molar de MEG livre de NaCl (Predição).
Fonte: O autor.
Algumas medidas estatísticas básicas, para os desvios entre valores estimados e pontos experimentais, foram geradas: 4.1.2.7 Coeﬁciente de atividade do NaCl na mistura água e MEG Observa-se, na Figura 40, que o coeﬁciente de atividade do NaCl na mistura água e MEG, nas diversas isotermas, diminui da faixa de 0,8-1,0 até um valor mínimo correspondente a fração molar de MEG livre de solvente próximo a 0,6 e, depois, cresce até a faixa de 1,2-1,7. Nota-se, também, que as isotermas se cruzam no valor aproximado de 0,8 para a fração molar de MEG livre de solvente. Para valores menores que este, o coeﬁciente de atividade do NaCl na mistura água e MEG diminui com o aumento da temperatura e, para a faixa restante da fração molar de MEG livre de solvente, tem um comportamento inverso. Logo, os maiores afastamentos da idealidade ocorrem no mínimo antes da inversão e em MEG puro. Os dados experimentais, de todos os autores, dispuseram-se em torno das respectivas isotermas, conﬁrmando o bom cálculo.
Figura 40 – Coeﬁciente de atividade do NaCl na mistura água e MEG em função da fração molar de MEG livre de NaCl.
Algumas medidas estatísticas básicas, para os desvios entre valores calculados e pontos experimentais, foram geradas: a) desvio absoluto médio = 0,00125; b) desvio absoluto máximo = 0,01173; c) desvio relativo absoluto médio = 0,16%; d) desvio relativo absoluto máximo = 1,42%.
Os valores do desvio absoluto médio = 0,00125 e do desvio relativo absoluto médio = 0,16% indicam uma representatividade satisfatória em relação aos valores experimentais confrontados. Sendo assim, foi considerado que os valores calculados para o coeﬁciente de atividade do NaCl na mistura água e MEG representaram, de forma aceitável, os dados experimentais comparativos usados.
4.1.2.8 Coeﬁciente de atividade do NaCl na mistura água e MEG (Predição) A Figura 41 representa as isotermas do coeﬁciente de atividade do NaCl na mistura água e MEG em função da fração molar de MEG livre de NaCl (Predição). Nela, as regiões de decrescimento e crescimento correspondem, aproximadamente, as observadas na Figura 40. Nota-se, também, o fenômeno de inversão em torno do mesmo valor citado na Figura 40, ou seja, no valor aproximado de 0,8 para a fração molar de MEG livre de solvente. Os dados experimentais, de todos os autores, dispuseram-se em torno das respectivas isotermas, conﬁrmando a boa predição.
Figura 41 – Coeﬁciente de atividade do NaCl na mistura água e MEG em função da fração molar de MEG livre de NaCl (Predição).
Fonte: O autor.
Algumas medidas estatísticas básicas, para os desvios entre valores estimados e pontos experimentais, foram geradas: a) desvio absoluto médio = 0,00140; b) desvio absoluto máximo = 0,00520; c) desvio relativo absoluto médio = 0,16%; d) desvio relativo absoluto máximo = 0,48%.
Os valores do desvio absoluto médio = 0,00140 e do desvio relativo absoluto médio = 0,16% indicam uma representatividade satisfatória em relação aos valores experimentais confrontados. Sendo assim, foi considerado que a estimativa para o coeﬁciente de atividade do NaCl na mistura água e MEG previu, de forma aceitável, os dados experimentais comparativos usados.
4.1.2.9 Logaritmo de excesso do coeﬁciente de atividade do NaCl na mistura água e MEG Observa-se, na Figura 42, que o logaritmo de excesso do coeﬁciente de atividade do NaCl na mistura água e MEG, nas diversas isotermas, decresce desde zero até um valor mínimo correspondente a fração molar de MEG livre de solvente próximo a 0,65 e, depois, cresce até o valor zero. Nota-se, também, que as isotermas se cruzam no valor aproximado de 0,1 para a fração molar de MEG livre de solvente. Para valores menores que este, o logaritmo de excesso do coeﬁciente de atividade do NaCl na mistura água e MEG aumenta com o aumento da temperatura e, para a faixa restante da fração molar de MEG livre de solvente, tem um comportamento inverso. Os dados experimentais, de todos os autores, dispuseram-se em torno das respectivas isotermas, conﬁrmando o bom cálculo.
Figura 42 – Logaritmo de excesso do coeﬁciente de atividade do NaCl na mistura água e MEG em função da fração molar de MEG livre de NaCl.
Fonte: O autor.
Algumas medidas estatísticas básicas, para os desvios entre valores calculados e pontos experimentais, foram geradas: 4.1.2.10 Logaritmo de excesso do coeﬁciente de atividade do NaCl na mistura água e MEG (Predição) A Figura 43 representa as isotermas do logaritmo de excesso do coeﬁciente de atividade do NaCl na mistura água e MEG em função da fração molar de MEG livre de NaCl (Predição). Nela, as regiões de decrescimento e crescimento correspondem, aproximadamente, as observadas na Figura 42. Nota-se, também, o fenômeno de inversão em torno do mesmo valor citado na Figura 42, ou seja, no valor aproximado de 0,1 para a fração molar de MEG livre de solvente. Os dados experimentais, de todos os autores, dispuseram-se em torno das respectivas isotermas, conﬁrmando a boa predição.
Fonte: O autor.
Algumas medidas estatísticas básicas, para os desvios entre valores estimados e pontos experimentais, foram geradas: Dados de solubilidade de KCl em água, selecionados dos sistemas estudados (Tabela 4 e Tabela 5), foram ajustados por regressão não linear, conforme descrito na subseção 3.12.5, utilizando-se a Equação 3.36. Resultando, após desprezar-se b0 e outras simpliﬁcações, na equação: (4.4) A análise estatística do ajuste por regressão não linear foi realizada com um nível da signiﬁcância (α) de 5,0%, obtendo-se: não linear.
Tabela 17 – ANOVA (Sistema H2O+KCl).
A Tabela 18 apresenta os parâmetros obtidos, do ajuste por regressão não linear, para a Equação 4.4, juntamente com seus intervalos de conﬁança. O valor, para este caso, do t de Student crítico foi: t-crítico = 2,0739.
Tabela 18 – Parâmetros obtidos (Sistema H2O+KCl).
A Tabela 19 apresenta a matriz de correlação dos parâmetros obtidos, do ajuste por regressão não linear, para a Equação 4.4.
Tabela 19 – Matriz de Correlação (Sis-Algumas outras medidas estatísticas básicas foram calculadas: a) Desvio Absoluto Médio = 0, 01535 mol · kg−1 b) Desvio Absoluto Máximo = 0, 07874 mol · kg−1 c) Desvio Relativo Absoluto Médio = 0,31% d) Desvio Relativo Absoluto Máximo = 1,62% O ajuste foi bastante satisfatório, o que é evidenciado pelo valor R 2 = 0, 99933 para o coeﬁciente de determinação, pela ANOVA (Tabela 17) com Pr(>F) = 0,00000 e pelo desvio relativo absoluto médio = 0,31%. Todos os parâmetros obtidos (Tabela 18) contribuem signiﬁcativamente para o modelo, pois, possuem baixos valores de Pr(>|t|).
Estes, também, apresentam signiﬁcante correlação entre si, conforme evidenciado pelos altos valores absolutos na matriz de correlação (Tabela 19).
Observa-se, na Figura 44, que a molalidade do KCl aumenta com a temperatura, de forma quase linear, em toda a faixa de temperatura correlacionada. Os dados experimentais, de todos os autores, dispuseram-se em torno da curva, conﬁrmando um bom ajuste.
Figura 44 – Molalidade do KCl em H2O em função da Temperatura.
4.2.1.2 Sistema MEG+KCl Dados de solubilidade de KCl em MEG, selecionados dos sistemas estudados (Tabela 4 e Tabela 5), foram ajustados por regressão não linear, conforme descrito na subseção 3.12.5, utilizando-se a Equação 3.36. Resultando, após desprezar-se b0 e outras simpliﬁcações, na equação: (4.5) A análise estatística do ajuste por regressão não linear foi realizada com um nível da signiﬁcância (α) de 5,0%, obtendo-se: a) desvio padrão assintótico: s = 0, 021080 mol · kg−1; b) coeﬁciente de determinação: R c) coeﬁciente de determinação ajustado: R 2 = 0,94418; 
ajustado = 0,93301.
A Tabela 20 apresenta a análise de variância (ANOVA) do ajuste por regressão não linear.
Tabela 20 – ANOVA (Sistema MEG+KCl).
A Tabela 21 apresenta os parâmetros obtidos, do ajuste por regressão não linear, para a Equação 4.5, juntamente com seus intervalos de conﬁança. O valor, para este caso, do t de Student crítico foi: t-crítico = 2,5706.
Tabela 21 – Parâmetros obtidos (Sistema MEG+KCl).
A Tabela 22 apresenta a matriz de correlação dos parâmetros obtidos, do ajuste por regressão não linear, para a Equação 4.5.
Tabela 22 – Matriz de Correlação (Sistema MEG+KCl).
Algumas outras medidas estatísticas básicas foram calculadas: a) Desvio Absoluto Médio = 0, 01262 mol · kg−1 b) Desvio Absoluto Máximo = 0, 03993 mol · kg−1 c) Desvio Relativo Absoluto Médio = 1,74% d) Desvio Relativo Absoluto Máximo = 5,34% O ajuste foi satisfatório, o que é evidenciado pelo valor R 2 = 0, 944175 para o coeﬁciente de determinação, pela ANOVA (Tabela 20) com Pr(>F) = 0,00022 e pelo desvio relativo absoluto médio = 1,74%. Todos os parâmetros obtidos (Tabela 21) contribuem signiﬁcativamente para o modelo, pois, possuem baixos valores de Pr(>|t|). Estes, também, apresentam signiﬁcante correlação entre si, conforme evidenciado pelos altos valores absolutos na matriz de correlação (Tabela 22).
Observa-se, na Figura 45, que a molalidade do KCl aumenta com a temperatura, de forma quase linear, em toda a faixa de temperatura correlacionada. Os dados experimentais, de todos os autores, dispuseram-se em torno da curva, conﬁrmando um bom ajuste.
Figura 45 – Molalidade do KCl em MEG em função da Temperatura.
4.2.2 Sistema com mistura água e MEG (H2O+MEG+KCl) 4.2.2.1 Potencial químico padrão de excesso do KCl na mistura água e MEG (Regressão) Dados de solubilidade de KCl em água e MEG, selecionados dos sistemas estudados (Tabela 4 e Tabela 5), foram ajustados por regressão não linear, conforme descrito na subseção 3.12.6, utilizando-se a Equação 3.37. Resultando, após desprezar-se b0 e outras simpliﬁcações, na equação: 2 {H2O+MEG} MEG + (θ2 + θ3T) x + (θ4 + θ5T) x (4.6) A análise estatística do ajuste por regressão não linear foi realizada com um nível da signiﬁcância (α) de 5,0%, obtendo-se: não linear.
Tabela 23 – ANOVA (Sistema H2O+MEG+KCl).
A Tabela 24 apresenta os parâmetros obtidos, do ajuste por regressão não linear, para a Equação 4.6, juntamente com seus intervalos de conﬁança. O valor, para este caso, Tabela 24 – Parâmetros obtidos (Sistema H2O+MEG+KCl).
A Tabela 25 apresenta a matriz de correlação dos parâmetros obtidos, do ajuste por regressão não linear, para a Equação 4.6.
Fonte: O autor.
2 = 0, 99703 para o coeﬁciente de determinação, pela ANOVA (Tabela 14) com Pr(>F) = 0,00000 e visualmente pela Figura 46, mesmo com um desvio relativo absoluto médio = 14,88%. O ponto Figura 46 – Potencial químico padrão de excesso do KCl na mistura água e MEG em função da fração molar de MEG livre de KCl (Regressão).
Fonte: O autor.
8 Foram desconsiderados 28 pontos experimentais.
experimental com desvio relativo absoluto máximo = 197,84% não foi considerado ruim devido ao seu baixo desvio absoluto (0,00609). Todos os parâmetros obtidos (Tabela 24), dentro do nível de signiﬁcância adotado (5%), foram considerados, individualmente, não signiﬁcativos para o modelo por possuirem |t-valor|<t-crítico, o que gerou altos valores para Pr(>|t|). Estes, entretanto, apresentaram signiﬁcante correlação entre si, conforme evidenciado pelos altos valores absolutos na matriz de correlação (Tabela 25). Este fato, 2 e da ANOVA, ﬁzeram com que, coletivamente, os parâmetros juntamente os valores de R obtidos fossem considerados relevantes para o modelo.
Observa-se, na Figura 46, que o potencial químico padrão de excesso do KCl na mistura água e MEG, nas diversas isotermas, cresce desde zero até um valor máximo correspondente a fração molar de MEG livre de solvente próximo a 0,6 e, depois, decresce até o valor zero. Nota-se, também, que o potencial químico padrão de excesso do KCl na mistura água e MEG, para cada fração molar de MEG livre de solvente, aumenta com o aumento da temperatura. De todos os autores, somente os dados experimentais de Zhou et al. (2010), apresentaram um maior afastamento da respectiva isoterma, os demais, dispuseram-se em torno das respectivas isotermas, conﬁrmando o bom ajuste.
4.2.2.2 Potencial químico padrão de excesso do KCl na mistura água e MEG (Predição) A Figura 47 representa uma isoterma do potencial químico padrão de excesso do KCl na mistura água e MEG em função da fração molar de MEG livre de KCl (Predição).
Nela, as regiões de crescimento e decrescimento correspondem, aproximadamente, as observadas na Figura 46. Os dados experimentais, de todos os autores, dispuseram-se em torno das respectivas isotermas, conﬁrmando a boa predição.
Figura 47 – Potencial químico padrão de excesso do KCl na mistura água e MEG em função da fração molar de MEG livre de KCl (Predição).
Fonte: O autor.
Algumas medidas estatísticas básicas, para os desvios entre valores estimados e pontos experimentais, foram geradas: a) desvio absoluto médio = 0,00378; b) desvio absoluto máximo = 0,01199; c) desvio relativo absoluto médio = 0,65%; d) desvio relativo absoluto máximo = 1,33%.
Os valores do desvio absoluto médio = 0,00378 e do desvio relativo absoluto médio = 0,65% indicam uma representatividade satisfatória em relação aos valores experimentais confrontados. Sendo assim, foi considerado que a estimativa para o potencial químico padrão de excesso do KCl na mistura água e MEG previu, de forma aceitável, os dados experimentais comparativos usados.
4.2.2.3 Molalidade do KCl na mistura água e MEG Observa-se, na Figura 48, que a molalidade do KCl na mistura água e MEG, nas diversas isotermas, diminui, a razão inferior que a linear, com o aumento da fração molar de MEG livre de solvente em toda a faixa desta. Nota-se, também, que a molalidade do KCl na mistura água e MEG, para cada fração molar de MEG livre de solvente, aumenta com o aumento da temperatura. Os dados experimentais, de todos os autores, dispuseram-se em torno das respectivas isotermas, conﬁrmando o bom cálculo.
Figura 48 – Molalidade do KCl na mistura água e MEG em função da fração molar de MEG livre de KCl.
Fonte: O autor.
9 Foi desconsiderado 1 ponto experimental.
Algumas medidas estatísticas básicas, para os desvios entre valores calculados e pontos experimentais, foram geradas: a) desvio absoluto médio = 0, 02489 mol · kg−1; b) desvio absoluto máximo = 0, 10623 mol · kg−1; c) desvio relativo absoluto médio = 1,58%; d) desvio relativo absoluto máximo = 10,94%.
Os valores do desvio absoluto médio = 0, 02489 mol · kg−1 e do valor do desvio relativo absoluto médio = 1,58% indicam uma representatividade satisfatória em relação aos valores experimentais confrontados. Sendo assim, foi considerado que os valores calculados para a molalidade do KCl na mistura água e MEG representaram, de forma aceitável, os dados experimentais comparativos usados.
4.2.2.4 Molalidade do KCl na mistura água e MEG (Predição) A Figura 49 representa a isoterma da molalidade do KCl na mistura água e MEG em função da fração molar de MEG livre de KCl (Predição). Nela, a forma como ocorre o decrescimento da molalidade do KCl na mistura água e MEG corresponde, aproximadamente, a observada na Figura 48. Os dados experimentais, de todos os autores, dispuseram-se em torno da isoterma, conﬁrmando a boa predição.
Figura 49 – Isoterma da molalidade do KCl na mistura água e MEG em função da fração molar de MEG livre de KCl (Predição).
Fonte: O autor.
Algumas medidas estatísticas básicas, para os desvios entre valores estimados e pontos experimentais, foram geradas: a) desvio absoluto médio = 0, 06224 mol · kg−1; 4.2.2.5 Logaritmo de excesso da molalidade do KCl na mistura água e MEG Observa-se, na Figura 50, que o logaritmo de excesso da molalidade do KCl na mistura água e MEG, nas diversas isotermas, decresce desde zero até um valor mínimo correspondente a fração molar de MEG livre de solvente próximo a 0,4 e, depois, cresce até o valor zero. Nota-se, também, que o logaritmo de excesso da molalidade do KCl na mistura água e MEG, para cada fração molar de MEG livre de solvente, aumenta com o aumento da temperatura. De todos os autores, somente os dados experimentais de Zhou et al. (2010), apresentaram um maior afastamento da respectiva isoterma, os demais, dispuseram-se em torno das respectivas isotermas, conﬁrmando o bom cálculo.
Figura 50 – Logaritmo de excesso da molalidade do KCl na mistura água e MEG em função da fração molar de MEG livre de KCl.
Fonte: O autor.
Algumas medidas estatísticas básicas, para os desvios entre valores calculados e pontos experimentais, foram geradas: a) desvio absoluto médio = 0,01593; b) desvio absoluto máximo = 0,11588; 4.2.2.6 Logaritmo de excesso da molalidade do KCl na mistura água e MEG (Predição) A Figura 51 representa a isoterma do logaritmo de excesso da molalidade do KCl na mistura água e MEG em função da fração molar de MEG livre de KCl (Predição). Nela, as regiões de decrescimento e crescimento correspondem, aproximadamente, as observadas na Figura 50. Nota-se, como na Figura 50, que o logaritmo de excesso da molalidade do KCl na mistura água e MEG, para cada fração molar de MEG livre de solvente, aumenta com o aumento da temperatura. Os dados experimentais dispuseram-se em torno da isoterma, conﬁrmando a boa predição.
Figura 51 – Logaritmo de excesso da molalidade do KCl na mistura água e MEG em função da fração molar de MEG livre de KCl (Predição).
Fonte: O autor.
Algumas medidas estatísticas básicas, para os desvios entre valores estimados e pontos experimentais, foram geradas: a) desvio absoluto médio = 0,03039; 10 Foram desconsiderados 14 pontos experimentais.
4.2.2.7 Coeﬁciente de atividade do KCl na mistura água e MEG Observa-se, na Figura 52, que o coeﬁciente de atividade do KCl na mistura água e MEG, nas diversas isotermas, diminui da faixa de 0,6-0,7 até um valor mínimo correspondente a fração molar de MEG livre de solvente próximo a 0,6 e, depois, cresce até a faixa de 1,0-1,3. Nota-se, também, que as isotermas se cruzam nos valores aproximados de 0,2 e 0,7 para a fração molar de MEG livre de solvente. Para a faixa 0,2-0,7, o coeﬁciente de atividade do KCl na mistura água e MEG diminui com o aumento da temperatura e, para as faixas restantes de fração molar de MEG livre de solvente, tem um comportamento inverso. Logo, os maiores afastamentos da idealidade ocorrem no mínimo interno a faixa 0,2-0,7 e em MEG puro. Os dados experimentais, de todos os autores, dispuseram-se em torno das respectivas isotermas, conﬁrmando o bom cálculo.
Figura 52 – Coeﬁciente de atividade do KCl na mistura água e MEG em função da fração molar de MEG livre de KCl.
Fonte: O autor.
11 Foi desconsiderado 1 ponto experimental.
Algumas medidas estatísticas básicas, para os desvios entre valores calculados e pontos experimentais, foram geradas: a) desvio absoluto médio = 0,00133; b) desvio absoluto máximo = 0,00933; c) desvio relativo absoluto médio = 0,21%; d) desvio relativo absoluto máximo = 1,76%.
Os valores do desvio absoluto médio = 0,00133 e do desvio relativo absoluto médio = 0,21% indicam uma representatividade satisfatória em relação aos valores experimentais confrontados. Sendo assim, foi considerado que os valores calculados para o coeﬁciente de atividade do KCl na mistura água e MEG representaram, de forma aceitável, os dados experimentais comparativos usados.
4.2.2.8 Coeﬁciente de atividade do KCl na mistura água e MEG (Predição) A Figura 53 representa a isoterma do coeﬁciente de atividade do KCl na mistura água e MEG em função da fração molar de MEG livre de KCl (Predição). Nela, as regiões de decrescimento e crescimento correspondem, aproximadamente, as observadas na Figura 52. Os dados experimentais, de todos os autores, dispuseram-se em torno da isoterma, conﬁrmando a boa predição.
Figura 53 – Coeﬁciente de atividade do KCl na mistura água e MEG em função da fração molar de MEG livre de KCl (Predição).
Fonte: O autor.
Algumas medidas estatísticas básicas, para os desvios entre valores estimados e pontos experimentais, foram geradas: a) desvio absoluto médio = 0,00205; 4.2.2.9 Logaritmo de excesso do coeﬁciente de atividade do KCl na mistura água e MEG Observa-se, na Figura 54, que o logaritmo de excesso do coeﬁciente de atividade do KCl na mistura água e MEG, nas diversas isotermas, decresce desde zero até um valor mínimo correspondente a fração molar de MEG livre de solvente próximo a 0,7 e, depois, cresce até o valor zero. Nota-se, também, que o logaritmo de excesso do coeﬁciente de atividade do KCl na mistura água e MEG, para cada fração molar de MEG livre de solvente, diminui com o aumento da temperatura. Os dados experimentais, de todos os autores, dispuseram-se em torno das respectivas isotermas, conﬁrmando o bom cálculo.
Figura 54 – Logaritmo de excesso do coeﬁciente de atividade do KCl na mistura água e MEG em função da fração molar de MEG livre de KCl.
Fonte: O autor.
Algumas medidas estatísticas básicas, para os desvios entre valores calculados e pontos experimentais, foram geradas: a) desvio absoluto médio = 0,00209; b) desvio absoluto máximo = 0,01742; 4.2.2.10 Logaritmo de excesso do coeﬁciente de atividade do KCl na mistura água e MEG (Predição) A Figura 55 representa a isoterma do logaritmo de excesso do coeﬁciente de atividade do KCl na mistura água e MEG em função da fração molar de MEG livre de KCl (Predição).
Nela, as regiões de decrescimento e crescimento correspondem, aproximadamente, as observadas na Figura 54. Os dados experimentais dispuseram-se em torno da isoterma, conﬁrmando a boa predição.
Figura 55 – Logaritmo de excesso do coeﬁciente de atividade do KCl na mis-tura água e MEG em função da fração molar de MEG livre de KCl (Predição).
Fonte: O autor.
Algumas medidas estatísticas básicas, para os desvios entre valores estimados e pontos experimentais, foram geradas: a) desvio absoluto médio = 0,00378; 12 Foram desconsiderados 14 pontos experimentais.
4.3 Validação do Modelo de Pitzer implementado A subrotina do Modelo de Pitzer, utilizada pelo programa JAFOSSMS (seção 3.13), foi validada com base nos dados de Hamer e Wu (1972). A validação foi feita para o coeﬁciente de atividade. Os sistemas utilizados na validação consistiam de um sal (NaCl ou KCl) em água. Apresenta-se, a seguir, os resultados obtidos neste processo de validação.
4.3.1 Coeﬁciente de atividade do NaCl em água Observa-se, na Figura 56, que o coeﬁciente de atividade do NaCl em água a 25 ℃, como função da molalidade do NaCl, calculado pelo programa JAFOSSMS (seção 3.13), ajusta-se muito bem aos dados experimentais de Hamer e Wu (1972).
NaCl × b {H2O} {H2O} NaCl a 25 ℃).
Figura 56 – Modelo de Pitzer implementado (γ 13 Foi desconsiderado 1 ponto experimental.
Algumas medidas estatísticas básicas, relativas a Figura 56, para os desvios entre valores calculados e pontos experimentais, foram geradas: a) desvio absoluto médio = 0,00089; b) desvio absoluto máximo = 0,00418; c) desvio relativo absoluto médio = 0,11%; d) desvio relativo absoluto máximo = 0,42%.
Os valores baixos destes desvios demostraram uma grande precisão no cálculo do coeﬁciente de atividade do NaCl em água a 25 ℃.
4.3.2 Coeﬁciente de atividade do KCl em água Observa-se, na Figura 57, que o coeﬁciente de atividade do KCl em água a 25 ℃, como função da molalidade do KCl, calculado pelo programa JAFOSSMS (seção 3.13), ajusta-se bem aos dados experimentais de Hamer e Wu (1972). Nota-se, que o desvio em relação aos dados experimentais aumenta com o aumento da molalidade do KCl.
KCl × b {H2O} {H2O} KCl Figura 57 – Modelo de Pitzer implementado (γ ).
Algumas medidas estatísticas básicas, relativas a Figura 57, para os desvios entre valores calculados e pontos experimentais, foram geradas: a) desvio absoluto médio = 0,00409; b) desvio absoluto máximo = 0,01669; c) desvio relativo absoluto médio = 0,69%; d) desvio relativo absoluto máximo = 2,81%.
Os valores baixos destes desvios demostraram uma boa precisão no cálculo do coeﬁciente de atividade do KCl em água a 25 ℃.
O programa JAFOSSMS (seção 3.13) calcula os parâmetros do Modelo de Pitzer para o KCl, em função da temperatura, pelas equações de Archer (1999) (subseção 3.8.4.2).
Estas equações apresentam uma precisão muito boa, no então, para demostrar a inﬂuência dos parâmetros do Modelo de Pitzer no cálculo do coeﬁciente de atividade, utilizou-se os parâmetros de Zemaitis Jr. et al. (1986, p. 103). Os resultados obtidos com estes parãmetros são mostrados na Figura 58. Nesta, observa-se, que o coeﬁciente de atividade do KCl em água a 25 ℃, como função da molalidade do KCl, calculado pelo programa JAFOSSMS (seção 3.13), ajusta-se muito bem aos dados experimentais de Hamer e Wu (1972).
KCl × b {H2O} metros de Zemaitis Jr. et al. (1986, p. 103).
{H2O} KCl Figura 58 – Modelo de Pitzer implementado (γ ) utilizando os parâ-Algumas medidas estatísticas básicas, relativas a Figura 58, para os desvios entre valores calculados e pontos experimentais, foram geradas: Os valores baixos destes desvios demostraram uma grande precisão no cálculo do coeﬁciente de atividade do KCl em água a 25 ℃. Estes resultados conﬁrmam que os parâmetros de Zemaitis Jr. et al. (1986, p. 103) são melhores que os calculados utilizando as equações de Archer (1999) (subseção 3.8.4.2). Entretanto, os parâmetros de Zemaitis Jr. et al. (1986, p. 103) são apenas para 25 ℃, enquanto que as equações de Archer (1999) (subseção 3.8.4.2) cobrem uma ampla faixa de temperatura.
O Modelo JAFOSSMS foi comparado com o Modelo Ideal, extremamente simples, e com o Modelo UNIQUAC+DH, de maior complexidade, usado em Chiavone-Filho e Rasmussen (2000).
4.4.1 Modelo Ideal A molalidade do NaCl na mistura água e MEG foi calculada em função da fração molar do MEG livre de sal, para 6 isotermas, usando-se tanto o Modelo JAFOSSMS quanto o Modelo Ideal (Equação 2.38). Estes resultados são apresentados na Figura 59 .
Figura 59 – Comparação do Modelo JAFOSSMS com o Modelo Ideal (NaCl).
Fonte: O autor.
Observa-se, na Figura 59, a excelente representatividade dos dados experimentais pelo Modelo JAFOSSMS e o afastamento deste em relação ao Modelo Ideal, exceto nos extremos de fração molar de MEG livre de sal. Na Tabela 26, nota-se os baixos desvios dos dados experimentais em relação ao Modelo JAFOSSMS e os altos desvios em relação ao Modelo Ideal. Conﬁrmando a melhor representatividade do Modelo JAFOSSMS.
Tabela 26 – Comparação do Modelo JAFOSSMS com o Modelo Ideal (NaCl).
A molalidade do KCl na mistura água e MEG foi calculada em função da fração molar do MEG livre de sal, para 3 isotermas, usando-se tanto o Modelo JAFOSSMS quanto o Modelo Ideal (Equação 2.38). Estes resultados são apresentados na Figura 60 .
Figura 60 – Comparação do Modelo JAFOSSMS com o Modelo Ideal (KCl).
Fonte: O autor.
Observa-se, na Figura 60, a excelente representatividade dos dados experimentais pelo Modelo JAFOSSMS e o afastamento deste em relação ao Modelo Ideal, exceto nos extremos de fração molar de MEG livre de sal. Na Tabela 27, nota-se os baixos desvios dos dados experimentais em relação ao Modelo JAFOSSMS e os altos desvios em relação ao Modelo Ideal. Conﬁrmando, novamente, a melhor representatividade do Modelo JAFOSSMS.
Tabela 27 – Comparação do Modelo JAFOSSMS com o Modelo Ideal (KCl).
4.4.2 Modelo UNIQUAC+DH Uma comparação quantitativa foi feita entre o Modelo JAFOSSMS e o modelo utilizado em Chiavone-Filho e Rasmussen (2000), aqui chamado Modelo UNIQUAC+DH.
Os cálculos realizados em Chiavone-Filho e Rasmussen (2000), foram feitos por meio do programa PARASOLY (CHIAVONE-FILHO, 1993). Para que a comparação fosse possível os valores de solubilidade, obtidos pelo Modelo JAFOSSMS, foram convertidos para fração molar de KCl em base iônica mediante a Equação 4.7, pois, esta foi usada em Chiavone-Filho e Rasmussen (2000).
(4.7) ionizada MX onde x os dados utilizados nesta comparação é a fração molar de MX em base ionizada. Na Tabela 28, apresenta-se todos Tabela 28 – Dados de equilíbrio usados na comparação do Modelo JAFOSSMS com o Modelo UNIQUAC+DH.
Na Tabela 29, apresenta-se a comparação entre o Modelo JAFOSSMS e o Modelo UNIQUAC+DH. Observando os resultados, notou-se que, embora o Modelo UNIQUAC+DH tenha representado melhor os dados experimentais, dentro das incertezas experimentais, os cálculos resultaram, na realidade, em precisões equivalentes. No entanto, deve-se ressaltar que o Modelo JAFOSSMS possui, por ser parametrizado, a vantagem de necessitar de uma menor quantidade de informações para poder-se gerar resultados.
Tabela 29 – Comparação do Modelo JAFOSSMS com o Modelo UNIQUAC+DH.
CAPÍTULO 5 CONCLUSÕES 5 CONCLUSÕES Uma metodologia para descrever a solubilidade de sais em mistura de solventes foi desenvolvida partindo-se do Modelo de Pitzer (Pitzer (1973)), o qual foi estendido para misturas de solventes pela metodologia adotada por Lorimer (1993). Esta metodologia mostrou-se bastante adequada na descrição dos sistemas estudados neste trabalho de tese de doutorado (Tabela 4 e Tabela 5).
Os resultados obtidos, como foi apresentado no Capítulo 4, demonstraram a precisão da metodologia nos cálculos realizados, dentro das incertezas experimentais, para os sais KCl e NaCl em misturas com água e MEG.
Modelos e métodos de cálculo para propriedades de sais em misturas de solventes são escassos. Logo, a metodologia desenvolvida neste trabalho de tese de doutorado contribui de forma relevante para a área de equilíbrio eletrolítico de sais em misturas de solventes.
A extensão do Modelo de Pitzer para misturas de solventes, proposta neste trabalho de tese de doutorado, permite que lacunas existentes em bancos de dados experimentais disponíveis sejam preenchidas.
Além da parte referente ao modelo e metodologia termodinâmicos, foi desenvolvido um aplicativo (Programa JAFOSSMS), adequado para cálculos de solubilidade de sais em misturas aquosas contendo MEG, nos modos de correlação e predição. Este aplicativo possui um código muito ﬂexível (Apêndice D) de fácil implementação e adaptação para outras condições que se façam necessárias. Embora o desenvolvimento deste aplicativo tenha sido realizado em Ubuntu® (ubuntu.com), usando a linguagem Python (python.org) no ambiente Eclipse (eclipse.org), este aplicativo é totalmente portável para Windows® (windows.microsoft.com) e, também, para Mac OS X® (apple.com), como apresentado no Apêndice B.
Para trabalhos futuros são feitas as seguintes sugestões: a) utilização desta metodologia de cálculo em sistemas com os mesmos solventes e com outras espécies de sal; b) utilização desta metodologia de cálculo em sistemas com os mesmos solventes e com mais de um sal; c) utilização desta metodologia de cálculo em sistemas com outros solventes e sais; d) estudar outros sais presentes na água de produção do campo de Mexilhão; e) aplicar o modelo diretamente na modelagem e simulação de processos, como na unidade de regeneração do MEG.
Referências ABRAMS, D. S.; PRAUSNITZ, J. M. Statistical Thermodynamics of Liquid Mixtures: A New Expression for the Excess Gibbs Energy of Partly or Completely Miscible Systems.
AIChE Journal, American Institute of Chemical Engineers, v. 21, n. 1, p. 116–128, jan.
1975. ISSN 1547-5905. Disponível em: <http://doi.wiley.com/10.1002/aic.690210115>.
Citado na página 33.
ÅKERLÖF, G. DIELECTRIC CONSTANTS OF SOME ORGANIC SOLVENT-WATER MIXTURES AT VARIOUS TEMPERATURES. Journal of the American Chemical Society, ACS Publications, v. 54, n. 11, p. 4125–4139, nov. 1932. Disponível em: <http://pubs.acs.org/doi/abs/10.1021/ja01350a001>. Citado na página 42.
ANDERKO, A.; WANG, P.; RAFAL, M. Electrolyte solutions: from thermodynamic and transport property models to the simulation of industrial processes. Fluid Phase Equilibria, Elsevier Science Publishers B. V., v. 194-197, p. 123–142, mar. 2002. ISSN 0378-3812. Disponível em: <http://linkinghub.elsevier.com/retrieve/pii/S0378381201006458>.
Citado na página 32.
ANDRADE, A. R. Hidratos no Âmbito da Perfuração: Histórico, Mecanismos de Inibição e Técnicas para Análises de Hidrato. Monograﬁa (Especialização em Engenharia de Dutos) — Departamento de Engenharia Mecânica da PUC-Rio, 2009.
Disponível em: <http://www.ppgem.ct.utfpr.edu.br/lacit/publicacoes/monograﬁas/ monograﬁa%20Alex%20R.%20de%20Andrade%20-%20Vers%E3o%20Final.pdf>. Acesso em: 21 jan. 2015. Citado 3 vezes nas páginas 7, 8 e 9.
APPLE.COM. Apple - OS X Yosemite - Overview. Disponível em: <http: //www.apple.com/osx/>. Acesso em: 21 jan. 2015. Citado 4 vezes nas páginas 34, 53, 101 e 121.
ARCHER, D. G. Thermodynamic Properties of the KCl + H2O System. Journal of Physical and Chemical Reference Data, AIP Publishing, v. 28, n. 1, p. 1–17, maio 1999. ISSN 0047-2689. Disponível em: <http://link.aip.org/link/?JPR/28/1/1>. Citado 2 vezes nas páginas 45 e 94.
ASPENTECH.COM. Aspen HYSYS® - AspenTech. Disponível em: <http: //www.aspentech.com/products/aspen-hysys/>. Acesso em: 21 jan. 2015. Citado 2 vezes nas páginas 33 e 34.
BALDWIN, W. H.; RARIDON, R. J.; KRAUS, K. A. Properties of Organic-Water Mixtures. X. Activity Coeﬃcients of Sodium Chloride at Saturation in Water Mixtures of Polyglycols and Polyglycol Ethers at 50°. The Journal of Physical Chemistry, ACS Publications, v. 73, n. 10, p. 3417–3420, out. 1969. Disponível em: <http://pubs.acs.org/doi/abs/10.1021/j100844a045>. Citado 2 vezes nas páginas 28 e 40.
BAPTISTA, J. M. M. Análise da Formação de Hidratos em Atividades de Perfuração de Campos Petrolíferos. Monograﬁa (Projeto Final de Curso), 2007.
Disponível em: <http://www.ppgem.ct.utfpr.edu.br/lacit/publicacoes/projetos_ ﬁnais/PF%20-%20An%E1lise%20da%20Forma%E7%E3o%20de%20Hidratos%20em% 20atividades%20de%20Perfura%E7%E3o%20de%20Campos%20Petrol%EDferos% 202007.pdf>. Acesso em: 21 jan. 2015. Citado na página 7.
BELCHIOR, M. GOVERNO FEDERAL E O DESENVOLVIMENTO DE SÃO PAULO.
In: 57º Congresso de Municípios Paulistas. Santos, SP, BRA: [s.n.], 2013. Disponível em: <http://www.pac.gov.br/sobre-o-pac/apresentacoes/v/38e11f18>. Acesso em: 21 jan.
2015. Citado na página 4.
BIPM. Le Système international d’unités (SI) = The International System of Units (SI). 8th. ed. Sèvres, FRA: [s.n.], 2006. ISBN 92-822-2213-6. Disponível em: <http://www.bipm.org/utils/common/pdf/si_brochure_8.pdf>. Citado na página 41.
BRAUN, N. O.; PERSSON, U. Å.; KARLSSON, H. T. Densities and Viscosities of Mono(ethylene glycol) + 2-Amino-2-methyl-1-propanol + Water. Journal of Chemical & Engineering Data, ACS Publications, v. 46, n. 4, p. 805–808, maio 2001. ISSN 0021-9568. Disponível em: <http://pubs.acs.org/doi/abs/10.1021/je010004z>. Citado na página 28.
CAMERON. PureMEG - MEG reclamation and regeneration technology. 2012.
Disponível em: <http://www.c-a-m.com/~/media/1999835b6dfc462ead163ea4464a080f.
ashx>. Acesso em: 21 jan. 2015. Citado 2 vezes nas páginas 14 e 15.
CARDOSO, M. J. E. M. Calculation of Phase and Chemical Equilibria in Eletrolyte Sistems. Tese (Doutorado) — Department of Chemical Engineering.
Technical University of Denmark; DK-2800 Lyngby, Denmark, 1988. Citado na página 32.
CHEN, C.-C. et al. Local Composition Model for Excess Gibbs Energy of Electrolyte Systems. Part I: Single Solvent, Single Completely Dissociated Electrolyte Systems.
AIChE Journal, American Institute of Chemical Engineers, v. 28, n. 4, p. 588–596, jul.
1982. ISSN 1547-5905. Disponível em: <http://doi.wiley.com/10.1002/aic.690280410>.
Citado na página 44.
CHEN, C.-C.; SONG, Y. Generalized Electrolyte-NRTL Model for Mixed-Solvent Electrolyte Systems. AIChE Journal, American Institute of Chemical Engineers, v. 50, n. 8, p. 1928–1941, ago. 2004. ISSN 1547-5905. Disponível em: <http://doi.wiley.com/10.1002/aic.10151>. Citado na página 32.
CHIAVONE-FILHO, O. Phase Behavior of Aqueous Glycol Ether Mixtures: (1) Vapor-Liquid Equilibria (2) Salt Solubility. Tese (Doutorado) — Department of Chemical Engineering. Technical University of Denmark; DK-2800 Lyngby, Denmark, 1993. Citado 2 vezes nas páginas 32 e 96.
CHIAVONE-FILHO, O.; PROUST, P.; RASMUSSEN, P. Vapor-Liquid Equilibria for Glycol Ether + Water Systems. Journal of Chemical & Engineering Data, ACS Publications, v. 38, n. 1, p. 128–131, jan. 1993. ISSN 0021-9568. Disponível em: <http://pubs.acs.org/doi/abs/10.1021/je00009a031>. Citado na página 29.
CHIAVONE-FILHO, O.; RASMUSSEN, P. Solubilities of Salts in Mixed Solvents. Journal of Chemical & Engineering Data, ACS Publications, v. 38, n. 3, p. 367–369, jul. 1993.
ISSN 0021-9568. Disponível em: <http://pubs.acs.org/doi/abs/10.1021/je00011a009>.
Citado 2 vezes nas páginas 28 e 40.
. Modeling of salt solubilities in mixed solvents. Brazilian Journal of Chemical Engineering, Brazilian Society of Chemical Engineering, v. 17, p. 117–131, jun. 2000.
ISSN 0104-6632. Disponível em: <http://dx.doi.org/10.1590/S0104-66322000000200001>.
Citado 4 vezes nas páginas 33, 95, 96 e 97.
CLARKE, E. C. W.; GLEW, D. N. Evaluation of Thermodynamic Functions from Equilibrium Constants. Transactions of the Faraday Society, RSC Pub, v. 62, p.
539–547, 1966. Disponível em: <http://dx.doi.org/10.1039/TF9666200539>. Citado na página 47.
COHEN, E. R. et al. (Ed.). Quantities, Units and Symbols in Physical Chemistry.
3rd. ed. Cambridge, GBR: RSC Pub, 2007. ISBN 978-0-85404-433-7. Disponível em: <http://amazon.com/o/ASIN/0854044337/>. Citado na página 19.
DAHL, S.; MACEDO, E. A. The MHV Model: A UNIFAC-Based Equation of State Model for Vapor-Liquid and Liquid-Liquid Equilibria of Mixtures with Strong Electrolytes. Industrial & Engineering Chemistry Research, ACS Publications, v. 31, n. 4, p. 1195–1201, abr. 1992. ISSN 0888-5885. Disponível em: <http://pubs.acs.org/doi/abs/10.1021/ie00004a033>. Citado na página 32.
DEBYE, P.; HÜCKEL, E. The theory of electrolytes. I. Lowering of freezing point and related phenomena. Physikalische Zeitschrift, S. Hirzel Verlag, v. 24, n. 9, p. 185–206, maio 1923. Citado 2 vezes nas páginas 23 e 24.
ECLIPSE.ORG. Eclipse - The Eclipse Foundation open source community website. Disponível em: <http://eclipse.org/home/index.php>. Acesso em: 21 jan. 2015.
Citado 3 vezes nas páginas 34, 53 e 101.
FIGUEIREDO, C. S. et al. Salt solubility data for sodium chloride and mono ethylene glycol aqueous systems from 293.15 to 403.15 K. Fluid Phase Equilibria, Elsevier Science Publishers B. V., 2014 (em Publicação). ISSN 0378-3812. Citado 2 vezes nas páginas 28 e 40.
FØSBOL, P. L.; THOMSEN, K.; STENBY, E. H. Modeling of the Mixed Solvent Electrolyte System CO2-Na2CO3-NaHCO3-Monoethylene Glycol-Water. Industrial & Engineering Chemistry Research, ACS Publications, v. 48, n. 9, p. 4565–4578, maio 2009. ISSN 0888-5885. Disponível em: <http://pubs.acs.org/doi/abs/10.1021/ie801168e>.
Citado na página 32.
GALANTE, A. Jaqueta da plataforma de Mexilhão segue para a Bacia de Campos - Poder Naval. 2009. Disponível em: <http://www.naval.com.br/blog/2009/ 11/23/jaqueta-da-plataforma-de-mexilhao-segue-para-a-bacia-de-campos/>. Acesso em: 21 jan. 2015. Citado na página 4.
GCC.GNU.ORG/C++. GCC, the GNU Compiler Collection-GNU Project - Free Software Foundation (FSF). Disponível em: <https://gcc.gnu.org/>. Acesso em: 21 jan. 2015. Citado na página 33.
GCC.GNU.ORG/FORTRAN. GNU Fortran-GNU Project - Free Software Foundation (FSF). Disponível em: <https://gcc.gnu.org/fortran/>. Acesso em: 21 jan.
2015. Citado na página 33.
GREEN, D. W.; PERRY, R. H. Perry’s Chemical Engineers’ Handbook, Eighth Edition. 8th. ed. New York, NY, USA: McGraw-Hill, 2007. ISBN 978-0-07-142294-9.
Disponível em: <http://amazon.com/o/ASIN/0071422943/>. Citado na página 42.
GRENTHE, I.; PLYASUNOV, A. On the use of semiempirical electrolyte theories for modeling of solution chemical data. Pure and Applied Chemistry, International Union of Pure and Applied Chemistry, v. 69, n. 5, p. 951–958, jul. 1997. ISSN 0033-4545.
Disponível em: <http://iupac.org/publications/pac/69/5/0951/>. Citado na página 32.
GUGGENHEIM, E. L. The speciﬁc thermodynamic properties of aqueous solutions of strong electrolytes. Philosophical Magazine Series 7, Taylor & Francis, v. 19, n. 127, p. 588–643, 1935. Disponível em: <http://www.tandfonline.com/doi/abs/10.1080/ 14786443508561403>. Citado na página 24.
HAMER, W. J.; WU, Y.-C. Osmotic Coeﬃcients and Mean Activity Coeﬃcients of Uni-univalent Electrolytes in Water at 25 °C. Journal of Physical and Chemical Reference Data, AIP Publishing, v. 1, n. 4, p. 1047–1100, out. 1972. ISSN 0047-2689.
Disponível em: <http://link.aip.org/link/?JPR/1/1047/1>. Citado 3 vezes nas páginas 92, 93 e 94.
ILIUTA, M. C.; THOMSEN, K.; RASMUSSEN, P. Extended UNIQUAC model for correlation and prediction of vapour-liquid-solid equilibria in aqueous salt systems containing non-electrolytes. Part A. Methanol-water-salt systems. Chemical Engineering Science, Elsevier Science Publishers B. V., v. 55, n. 14, p. 2673–2686, abr.
2000. ISSN 0009-2509. Disponível em: <http://linkinghub.elsevier.com/retrieve/pii/ S0009250999005345>. Citado na página 32.
ISBIN, H. S.; KOBE, K. A. The Solubility of Some Salts in Ethylenediamine, Monoethanolamine and Ethylene Glycol. Journal of the American Chemical Society, ACS Publications, v. 67, n. 3, p. 464–465, mar. 1945. ISSN 0002-7863. Disponível em: <http://pubs.acs.org/doi/abs/10.1021/ja01219a029>. Citado 2 vezes nas páginas 28 e 40.
JOUYBAN, A.; SOLTANPOUR, S.; CHAN, H.-K. A simple relationship between dielectric constant of mixed solvents with solvent composition and temperature.
International Journal of Pharmaceutics, Elsevier Science Publishers B. V., v. 269, n. 2, p. 353–360, jan. 2004. ISSN 0378-5173. Disponível em: <http: //linkinghub.elsevier.com/retrieve/pii/S0378517303005118>. Citado na página 42.
KONTOGEORGIS, G. M.; FOLAS, G. K. Thermodynamic Models for Industrial Applications: From Classical and Advanced Mixing Rules to Association Theories. Chichester, GBR: Wiley, 2010. ISBN 978-0-470-69726-9. Disponível em: <http://amazon.com/o/ASIN/0470697261/>. Citado na página 22.
KOSINSKI, J. J. et al. Modeling acid-base equilibria and phase behavior in mixed-solvent electrolyte systems. Fluid Phase Equilibria, Elsevier Science Publishers B. V., v. 256, n. 1-2, p. 34–41, ago. 2007. ISSN 0378-3812. Disponível em: <http://linkinghub.elsevier.com/retrieve/pii/S0378381206004973>. Citado na página 32.
KRAUS, K. A.; RARIDON, R. J.; BALDWIN, W. H. Properties of Organic-Water Mixtures. I. Activity Coeﬃcients of Sodium Chloride, Potassium Chloride, and Barium Nitrate in Saturated Water Mixtures of Glycol, Glycerol, and Their Acetates. Model Solutions for Hyperﬁltration Membranes. Journal of the American Chemical Society, ACS Publications, v. 86, n. 13, p. 2571–2576, jul. 1964. ISSN 0022-3654.
Disponível em: <http://pubs.acs.org/doi/abs/10.1021/ja01067a010>. Citado 3 vezes nas páginas 28, 40 e 65.
LEE, L. L. A molecular theory of Setchenov’s salting-out principle and applications in mixed-solvent electrolyte solutions. Fluid Phase Equilibria, Elsevier Science Publishers B. V., v. 131, n. 1-2, p. 67–82, maio 1997. ISSN 0378-3812. Disponível em: <http://linkinghub.elsevier.com/retrieve/pii/S0378381296031986>. Citado na página 30.
LIDE, D. R. (Ed.). CRC Handbook of Chemistry and Physics, 90th Edition (CRC Handbook of Chemistry & Physics). 90. ed. Boca Raton, FL, USA: CRC Press, 2009.
ISBN 978-1-4200-9084-0. Disponível em: <http://amazon.com/o/ASIN/1420090844/>.
Citado 4 vezes nas páginas 9, 27, 40 e 48.
LINKE, W. F.; SEIDELL, A. SOLUBILITIEWS INORGANIC AND METAL-ORGANIC COMPOUNDS A - Ir: A Compilation of Solubility Data from the Periodical Literature, VOLUME I, FOURTH EDITION. 4th. ed. Princeton, NJ, USA: Van Nostrand, 1958. Citado na página 27.
. SOLUBILITIEWS INORGANIC AND METAL-ORGANIC COMPOUNDS K - Z: A Compilation of Solubility Data from the Periodical Literature, VOLUME II, FOURTH EDITION. 4th. ed. Washington, DC, USA: American Chemical Society, 1965. Citado 2 vezes nas páginas 27 e 40.
LIU, Y.; WATANASIRI, S. Representation of Liquid-Liquid Equilibrium of Mixed-Solvent Electrolyte Systems Using the Extended Electrolyte NRTL Model. Fluid Phase Equilibria, Elsevier Science Publishers B. V., v. 116, n. 1-2, p. 193–200, mar.
1996. ISSN 0378-3812. Disponível em: <http://linkinghub.elsevier.com/retrieve/pii/ 0378381295028870>. Citado na página 32.
LORIMER, J. W. Thermodynamics of solubility in mixed solvent systems.
Pure and Applied Chemistry, International Union of Pure and Applied Chemistry, v. 65, n. 2, p. 183–191, jul. 1993. ISSN 0033-4545. Disponível em: <http://iupac.org/publications/pac/65/2/0183/>. Citado 9 vezes nas páginas xvi, 29, 31, 32, 33, 43, 46, 47 e 101.
MARCUS, Y. Ion Solvation. Chichester, GBR: Wiley, 1985. ISBN 978-0-471-90756-5.
Disponível em: <http://amazon.com/o/ASIN/0471907561/>. Citado na página 48.
MATHWORKS.COM/MATLAB. MATLAB - The Language of Technical Computing - B. Disponível em: <http://www.mathworks.com/products/matlab/>.
Acesso em: 21 jan. 2015. Citado na página 34.
MATHWORKS.COM/SIMULINK. Simulink - Simulation and Model-Based Design. Disponível em: <http://www.mathworks.com/products/simulink/>. Acesso em: 21 jan. 2015. Citado na página 34.
MATPLOTLIB.ORG. matplotlib: python plotting - Matplotlib 1.4.2 documentation. Disponível em: <http://matplotlib.org/>. Acesso em: 21 jan. 2015.
Citado 2 vezes nas páginas 34 e 53.
MOURA, N. R. d. Desaﬁos Tecnológicos para o Gás Natural. 2007. Disponível em: <http://sites.petrobras.com.br/minisite/premiotecnologia/pdf/TecnologiaGas_ DesaﬁosTecnologicos-GasNatural.pdf>. Acesso em: 21 jan. 2015. Citado na página 6.
NAUMANN, M. P. Oportunidades na Logística de Exploração de Petróleo, Gás e Biocombustíveis. In: 9º Encontro da Arquitetura e da Engenharia Consultiva de São Paulo. Santos, SP, BRA: [s.n.], 2009. Disponível em: <http://www.sinaenco.com.br/downloads/Petrobras.pdf>. Acesso em: 21 jan. 2015.
Citado na página 4.
NAZZER, C.; KEOGH, J. Advances in Glycol Reclamation Technology. In: Oﬀshore Technology Conference. Houston, TX, USA: [s.n.], 2006. ISBN 978-1-55563-253-3.
Disponível em: <http://dx.doi.org/10.4043/18010-MS>. Citado 4 vezes nas páginas 10, 11, 12 e 13.
NICOLAISEN, H. Phase equilibria in aqueous electrolyte solutions. Tese (Doutorado) — Department of Chemical Engineering. Technical University of Denmark; DK-2800 Lyngby, Denmark, 1994. Citado na página 32.
NUMPY.ORG. NumPy - NumPy. Disponível em: <http://www.numpy.org/>. Acesso em: 21 jan. 2015. Citado 2 vezes nas páginas 34 e 53.
OLIVEIRA, J. A. F. et al. Levenberg-Marquardt method applied to the determination of vapor-liquid equilibrium model parameters. Latin American Applied Research, v. 44, n. 4, out. 2014. ISSN 0327-0793. Disponível em: <http: //www.laar.uns.edu.ar/indexes/i44_04.htm>. Citado 2 vezes nas páginas 39 e 115.
. Modelagem e Simulação da Solubilidade de Sais em Mistura de Solventes em Sistemas Aquosos com dois Sais Fortes e Monoetileno Glicol. In: XVIII COBEQ/V CBTERMO/EBA. Foz do Iguaçu, PR, BRA: [s.n.], 2010. Citado na página 30.
PETROBRAS. Atividade de Produção de Gás e Condensado no Campo de Mexilhão, Bacia de Santos : EIA – Estudo de Impacto Ambiental.
2007. Disponível em: <http://licenciamento.ibama.gov.br/Petroleo/Sistema%20de% 20Producao%20de%20Gas%20Natural%20e%20Condensados%20-%20Campo%20de% 20Mexilhao%20-%20Bacia%20de%20Santos/EIA%20Mexilh%C3%A3o/>. Acesso em: 21 jan. 2015. Citado 3 vezes nas páginas 3, 5 e 39.
PINHO, S. P.; MACEDO, E. A. REPRESENTATION OF SALT SOLUBILITY IN MIXED SOLVENTS: A COMPARATION OF THERMODYNAMIC MODELS. Fluid Phase Equilibria, Elsevier Science Publishers B. V., v. 116, n. 1-2, p. 209–216, mar.
1996. ISSN 0378-3812. Disponível em: <http://linkinghub.elsevier.com/retrieve/pii/ 0378381295028897>. Citado 2 vezes nas páginas 28 e 32.
. Solubility of NaCl, NaBr, and KCl in Water, Methanol, Ethanol, and Their Mixed Solvents. Journal of Chemical & Engineering Data, ACS Publications, v. 50, n. 1, p. 29–32, jan. 2005. ISSN 0021-9568. Disponível em: <http://pubs.acs.org/doi/abs/10.1021/je049922y>. Citado na página 28.
PITZER, K. S. Thermodynamics of Electrolytes. I. Theoretical Basis and General Equations. The Journal of Physical Chemistry, ACS Publications, v. 77, n. 2, p. 268–277, jan. 1973. ISSN 0022-3654. Disponível em: <http: //pubs.acs.org/doi/abs/10.1021/j100621a026>. Citado 4 vezes nas páginas 33, 43, 48 e 101.
. Thermodynamics (Mcgraw Hill Series in Advanced Chemistry). 3rd.
ed. New York, NY, USA: McGraw-Hill, 1995. ISBN 978-0-07-050221-5. Disponível em: <http://amazon.com/o/ASIN/0070502218/>. Citado na página 33.
PRAUSNITZ, J. M.; LICHTENTHALER, R. N.; AZEVEDO, E. G. d. Molecular Thermodynamics of Fluid-Phase Equilibria (3rd Edition). 3rd. ed. Upper Saddle River, NJ, USA: Prentice Hall PTR, 1999. ISBN 978-0-13-977745-5. Disponível em: <http://amazon.com/o/ASIN/0139777458/>. Citado 7 vezes nas páginas 21, 22, 24, 25, 26, 33 e 48.
PYTHON.ORG. Welcome to Python.org. Disponível em: <https://www.python.org/>.
Acesso em: 21 jan. 2015. Citado 3 vezes nas páginas 34, 53 e 101.
QT-PROJECT.ORG. Category:LanguageBindings -> PySide | Qt Wiki | Qt Project. Disponível em: <http://qt-project.org/wiki/PySide>. Acesso em: 21 jan. 2015.
Citado 2 vezes nas páginas 34 e 53.
RENON, H. Models for excess properties of electrolyte solutions: molecular bases and classiﬁcation, needs and trends for new developments. Fluid Phase Equilibria, Elsevier Science Publishers B. V., v. 116, n. 1-2, p. 217–224, mar. 1996. ISSN 0378-3812. Disponível em: <http://linkinghub.elsevier.com/retrieve/pii/0378381295028900>. Citado na página 32.
ROGUEWAVE.COM. IMSL Numerical Libraries | Rogue Wave. Disponível em: <http://www.roguewave.com/products-services/imsl-numerical-libraries>. Acesso em: 21 jan. 2015. Citado na página 33.
SANDENGEN, K.; KAASA, B. Estimation of Monoethylene Glycol (MEG) Content in Water + MEG + NaCl + NaHCO3 Solutions. Journal of Chemical & Engineering Data, ACS Publications, v. 51, n. 2, p. 443–447, mar. 2006. ISSN 0021-9568. Disponível em: <http://pubs.acs.org/doi/abs/10.1021/je0503711>. Citado na página 28.
SANDLER, S. I. Models for Thermodynamic and Phase Equilibria Calculations (Chemical Industries). New York, NY, USA: Marcell Dekker, 1993. ISBN 978-0-8247-9130-8. Disponível em: <http://amazon.com/o/ASIN/0824791304/>. Citado na página 33.
SCILAB.ORG. Home - Scilab. Disponível em: <http://www.scilab.org/>. Acesso em: 21 jan. 2015. Citado na página 34.
SCIPY.ORG. SciPy - SciPy. Disponível em: <http://www.scipy.org/>. Acesso em: 21 jan. 2015. Citado 2 vezes nas páginas 34 e 53.
SILVESTER, L. F.; PITZER, K. S. Thermodynamics of Electrolytes. 8. High-Temperature Properties, Including Enthalpy and Heat Capacity, with Application to Sodium Chloride. The Journal of Physical Chemistry, ACS Publications, v. 81, n. 19, p. 1822–1828, set. 1977. ISSN 0022-3654. Disponível em: <http: //pubs.acs.org/doi/abs/10.1021/j100534a007>. Citado na página 45.
SMITH, J. M.; VAN NESS, H.; ABBOTT, M. Introduction to Chemical Engineering Thermodynamics (The Mcgraw-Hill Chemical Engineering Series). 7th. ed.
Boston, MA, USA: McGraw-Hill, 2005. ISBN 978-0-07-310445-4. Disponível em: <http://amazon.com/o/ASIN/0073104450/>. Citado na página 33.
STATOIL. Gas Hydrates as a resource : Technology Readiness Level. 2011.
Disponível em: <http://nﬁpweb.org/oneday2011/Gas%20hydrates,%20Technology% 20Readiness%20Level.pdf>. Acesso em: 21 jan. 2015. Citado na página 7.
THOMPSON, A.; TAYLOR, B. N. Guide for the Use of the International System of Units (SI). NIST Special Publication 811 (2008 Edition). Gaithersburg, MD, USA, 2008. Disponível em: <http://physics.nist.gov/cuu/pdf/sp811.pdf>. Citado na página 19.
THOMSEN, K. Aqueous electrolytes: model parameters and process simulation.
Tese (Doutorado) — Department of Chemical Engineering. Technical University of Denmark; DK-2800 Lyngby, Denmark, 1997. Citado na página 32.
THOMSEN, K.; ILIUTA, M. C.; RASMUSSEN, P. Extended UNIQUAC model for correlation and prediction of vapor-liquid-liquid-solid equilibria in aqueous salt systems containing non-electrolytes. Part B. Alcohol (ethanol, propanols, butanols)-water-salt systems. Chemical Engineering Science, Elsevier Science Publishers B. V., v. 59, n. 17, p. 3631–3647, set. 2004. ISSN 0009-2509. Disponível em: <http://linkinghub.elsevier.com/retrieve/pii/S000925090400329X>. Citado na página 32.
TRIMBLE, H. M. Solubilities of Salts in Ethylene Glycol and in Its Mixtures with Water.
Industrial & Engineering Chemistry, ACS Publications, v. 23, n. 2, p. 165–167, fev. 1931. ISSN 0019-7866. Disponível em: <http://pubs.acs.org/doi/abs/10.1021/ ie50254a016>. Citado 2 vezes nas páginas 28 e 40.
TSIERKEZOS, N. G.; MOLINOU, I. E. Thermodynamic Properties of Water + Ethylene Glycol at 283.15, 293.15, 303.15, and 313.15 K. Journal of Chemical & Engineering Data, ACS Publications, v. 43, n. 6, p. 989–993, nov. 1998. ISSN 0021-9568. Disponível em: <http://pubs.acs.org/doi/abs/10.1021/je9800914>. Citado na página 28.
UBUNTU.COM. The leading OS for PC, tablet, phone and cloud | Ubuntu.
Disponível em: <http://www.ubuntu.com/>. Acesso em: 21 jan. 2015. Citado 4 vezes nas páginas 34, 53, 101 e 121.
WALAS, S. M. Phase Equilibria in Chemical Engineering. Boston, MA, USA: Butterworth, 1985. ISBN 978-0-409-95162-2. Disponível em: <http://amazon.com/o/ ASIN/0409951625/>. Citado na página 33.
WANG, P. et al. Modeling phase equilibria and speciation in mixed-solvent electrolyte systems: II. Liquid-liquid equilibria and properties of associating electrolyte solutions. Journal of Molecular Liquids, Elsevier Science Publishers B. V., v. 125, n. 1, p. 37–44, mar. 2006. ISSN 0167-7322. Disponível em: <http://linkinghub.elsevier.com/retrieve/pii/S0167732205002060>. Citado na página 32.
WANG, P.; ANDERKO, A.; YOUNG, R. D. A speciation-based model for mixed-solvent electrolyte systems. Fluid Phase Equilibria, Elsevier Science Publishers B. V., v. 203, n. 1-2, p. 141–176, dez. 2002. ISSN 0378-3812. Disponível em: <http://linkinghub.elsevier.com/retrieve/pii/S0378381202001784>. Citado na página 32.
WINDOWS.MICROSOFT.COM. Windows - Microsoft Windows. Disponível em: <http://windows.microsoft.com>. Acesso em: 21 jan. 2015. Citado 4 vezes nas páginas 34, 53, 101 e 121.
ZEMAITIS JR., J. F. et al. Handbook of Aqueous Electrolyte Thermodynamics: Theory & Application. New York, NY, USA: Wiley-AIChE, 1986. ISBN 978-0-8169-0350-4. Disponível em: <http://amazon.com/o/ASIN/0816903506/>. Citado 4 vezes nas páginas xxi, 31, 33 e 94.
ZHOU, Y. et al. Compositions, Densities, and Refractive Indices for the Ternary Systems Ethylene Glycol + NaCl + H2O, Ethylene Glycol + KCl + H2O, Ethylene Glycol + RbCl + H2O, and Ethylene Glycol + CsCl + H2O at 298.15 K. Journal of Chemical & Engineering Data, ACS Publications, v. 55, n. 3, p. 1289–1294, 2010. Disponível em: <http://pubs.acs.org/doi/abs/10.1021/je900630n>. Citado 4 vezes nas páginas 28, 40, 83 e 86.
APÊNDICES APÊNDICE A – Artigo sobre ELV Este apêndice reproduz o artigo publicado no periódico: Latin American Applied Research, sobre regressão de dados de ELV (OLIVEIRA et al., 2014). O programa usado neste artigo, VLE Regression, encontra-se no Apêndice C. Segue o artigo: APÊNDICE B – Requisitos para Executar os Programas Desenvolvidos Os programas desenvolvidos podem ser executados nos principais sistemas operacionais: Windows® (windows.microsoft.com), Ubuntu® (ubuntu.com) e, também, em Mac OS X® (apple.com). As seções seguintes apresentam os requisitos necessários em cada sistema operacional juntamente com um exemplo.
B.1 Requisitos Gerais Os requisitos gerais para a execução dos programas desenvolvidos são: a) Python versão 2.7 (<https://www.python.org/>); b) NumPy (<http://www.numpy.org/>); c) SciPy (<http://scipy.org/>); d) Matplotlib (<http://matplotlib.org/>); e) Qt e PySide (<http://qt-project.org/>).
B.2 Requisitos para o Ubuntu® B.2.1 Instalação e conﬁguração Todos os itens dos requisitos gerais (seção B.1) e especíﬁcos são instalados e conﬁgurados mediante os comandos, executados em linha de comando, a seguir: a) sudo apt-get install python-numpy python-scipy; b) sudo apt-get install python-matplotlib python-pyside.
B.2.2 Compilação e execução Antes de executar o programa é necessário compilar o arquivo Form.ui para gerar o arquivo ui_Form.py e compilar o arquivo Form.qrc para gerar o arquivo Form_rc.py.
Isto é feito em linha de comando, no diretório principal de cada programa, por meio dos comandos: a) python-uic Form.ui -o ui_Form.py (para ambos os programas); b) python-rcc Form.qrc -o Form_rc.py (apenas para o programa JAFOSSMS).
Depois destas etapas os programas podem ser executados, também, em linha de comando, por meio dos comandos: a) python VLEregression.py (para o programa VLE Regression); b) python JAFOSSMS.py (para o programa JAFOSSMS).
B.2.3 Exemplo No Ubuntu® 14.04 LTS (32bits), foram instalados e conﬁgurados os requisitos citados na seção B.1 e, também, os citados na seção B.2. Após a compilação dos arquivos Form.ui e Form.qrc (apenas para o programa JAFOSSMS), os programas foram executados, o que é ilustrado na Figura 61(a) e na Figura 61(b), a seguir: Figura 61 – Programas VLE Regression e JAFOSSMS no Ubuntu® 14.04 LTS.
Fonte: O autor.
B.3 Requisitos para o Windows® B.3.1 Instalação e conﬁguração dos requisitos Primeiramente, deve-se instalar todos os itens dos requisitos gerais (seção B.1), cujos executáveis podem ser encontrados nos respectivos portais. Após isso, é necessário, a instalação das seguintes bibliotecas Python, todas encontradas em <http://www.lfd.uci.
edu/~gohlke/pythonlibs/>: a) setuptools; b) six; c) python-dateutil; d) pyparsing.
Em seguida, para facilitar a execução dos programas, adicione a variável de ambiente Path, os caminhos: a) C:\Python27\; b) C:\Python27\Scripts\; c) C:\Python27\Lib\site-packages\PySide\.
B.3.2 Compilação e execução Antes de executar o programa é necessário compilar o arquivo Form.ui para gerar o arquivo ui_Form.py e compilar o arquivo Form.qrc para gerar o arquivo Form_rc.py.
Isto é feito em linha de comando, no diretório principal de cada programa, por meio dos comandos: a) python-uic Form.ui -o ui_Form.py (para ambos os programas); b) python-rcc Form.qrc -o Form_rc.py (apenas para o programa JAFOSSMS).
Depois destas etapas os programas podem ser executados, também, em linha de comando, por meio dos comandos: a) python VLEregression.py (para o programa VLE Regression); b) python JAFOSSMS.py (para o programa JAFOSSMS).
B.3.3 Exemplo No Windows® 7 Home Basic (32bits), foram instalados e conﬁgurados os requisitos citados na seção B.1, ou seja, instalou-se, na ordem: a) python-2.7.8.msi; b) numpy-1.9.0-win32-superpack-python.7.exe; c) scipy-0.14.0-win32-superpack-python.7.exe; d) matplotlib-1.4.0.win32-py2.7.exe; e) qt-opensource-windows-x86-mingw482\_opengpodeml-5.3.1.exe; f) PySide-1.2.2.win32-py2.7.exe.
Em seguida foram instalados ou requisitos citados na seção B.3, ou seja, instalou-se, na ordem: a) setuptools-3.8.1.win32-py2.7.exe; b) six-1.7.3.win32-py2.7.exe; c) python-dateutil-2.2.win32-py2.7.exe; d) pyparsing-2.0.2.win32-py2.7.exe.
Após a conﬁguração da variável de ambiente Path e a compilação dos arquivos Form.ui e Form.qrc (apenas para o programa JAFOSSMS), os programas foram executados, o que é ilustrado na Figura 62(a) e na Figura 62(b), a seguir: Figura 62 – Programas VLE Regression e JAFOSSMS no Windows® 7 Home Basic.
Fonte: O autor.
B.4 Requisitos para o Mac OS X® B.4.1 Instalação e conﬁguração Todos os itens dos requisitos gerais (seção B.1) e especíﬁcos são instalados e conﬁgurados mediante os instaladores encontrados nos respectivos portais. Podendo, ser utilizados, alternativamente aos arquivos .dmg e .pkg, os instaladores brew, easy_install e pip.
B.4.2 Compilação e execução Antes de executar o programa é necessário compilar o arquivo Form.ui para gerar o arquivo ui_Form.py e compilar o arquivo Form.qrc para gerar o arquivo Form_rc.py.
Isto é feito em linha de comando, no diretório principal de cada programa, por meio dos comandos: a) python-uic Form.ui -o ui_Form.py (para ambos os programas); b) python-rcc Form.qrc -o Form_rc.py (apenas para o programa JAFOSSMS).
Depois destas etapas os programas podem ser executados, também, em linha de comando, por meio dos comandos: a) python VLEregression.py (para o programa VLE Regression); b) python JAFOSSMS.py (para o programa JAFOSSMS).
B.4.3 Exemplo No Mac OS X® 10.6 Snow Leopard (32bits), foram instalados e conﬁgurados os requisitos citados na seção B.1 e, também, os citados na seção B.4, ou seja, instalou-se, na ordem: a) python-2.7.8-macosx10.6.dmg; b) scipy-0.14.0-py2.7-python.org-macosx10.6.dmg; c) numpy-1.8.0-py2.7-python.org-macosx10.6.dmg; d) matplotlib-1.3.1-py2.7-python.org-macosx10.6.dmg; e) qt-opensource-mac-4.8.6-1.dmg; f) pyside-1.1.1-qt48-py27apple.pkg.
Após a compilação dos arquivos Form.ui e Form.qrc (apenas para o programa JAFOSSMS), os programas foram executados, o que é ilustrado na Figura 63(a) e na Figura 63(b), a seguir: Figura 63 – Programas VLE Regression e JAFOSSMS no Mac OS X® 10.6 Snow Leopard.
Fonte: O autor.
APÊNDICE C – Programa VLE Regression Neste apêndice, primeiramente, apresenta-se os códigos da interface gráﬁca do usuário (GUI), da biblioteca de modelos termodinâmicos e do programa principal. E, por último, explica-se a formatação do arquivo com dados de entrada. Todos estes itens, juntos, constituem o programa VLE Regression.
Os códigos apresentados aqui permitem recriar, a partir do conteúdo impresso, o arquivo original. Para que isso seja possível, é necessário que o texto impresso (incluindo os espaços à esquerda, na exata quantidade) seja gravado na forma de arquivo de texto sem formatação, com os respectivos nomes (exceto os de dados de entrada, onde, apenas, sugere-se que tenham a extensão .dat) e, OBRIGATORIAMENTE, com codiﬁcação UTF-8.
C.1 Interface Gráﬁca do Usuário Form.ui 
































<?xml version="1.0" encoding="UTF-8"?> <ui version="4.0"> <class>Form</class> <widget class="QWidget" name="Form"> <property name="geometry"> <rect> <x>0</x> <y>0</y> <width>800</width> <height>600</height> </rect> </property> <property name="windowTitle"> <string>VLE Regression</string> </property> <layout class="QVBoxLayout" name="verticalLayout"> <item> <widget class="QLabel" name="label_Description"> <property name="text"> <string>Regression of VLE data to calculate binary parameters (Aij) of the UNIQUAC model </string> </property> </widget> </item> <item> <layout class="QHBoxLayout" name="horizontalLayout_1"> <item> <widget class="QLabel" name="label_Datafile"> <property name="text"> <string>Datafile:</string> </property> <property name="buddy"> <cstring>lineEdit_Datafile</cstring> 



























































</property> </widget> </item> <item> <widget class="QLineEdit" name="lineEdit_Datafile"/> </item> <item> <widget class="QPushButton" name="pushButton_Browse"> <property name="text"> <string>&amp;Browse</string> </property> </widget> </item> </layout> </item> <item> <layout class="QHBoxLayout" name="horizontalLayout_2"> <item> <widget class="QCheckBox" name="checkBox_FixedAij"> <property name="text"> <string>Use &amp;Fixed Aij</string> </property> </widget> </item> <item> <widget class="QLineEdit" name="lineEdit_FixedAij"> <property name="enabled"> <bool>false</bool> </property> </widget> </item> </layout> </item> <item> <layout class="QHBoxLayout" name="horizontalLayout_3"> <item> <widget class="QCheckBox" name="checkBox_TRange"> <property name="text"> <string>&amp;Use only experimental data in the temperature range (°C):</string> </property> </widget> </item> <item> <widget class="QLabel" name="label_TMin"> <property name="enabled"> <bool>false</bool> </property> <property name="text"> <string>Mi&amp;nimum =</string> </property> <property name="buddy"> <cstring>lineEdit_TMin</cstring> </property> </widget> </item> <item> <widget class="QLineEdit" name="lineEdit_TMin"> <property name="enabled"> <bool>false</bool> </property> 



























































</widget> </item> <item> <widget class="QLabel" name="label_TMax"> <property name="enabled"> <bool>false</bool> </property> <property name="text"> <string>Ma&amp;ximum =</string> </property> <property name="buddy"> <cstring>lineEdit_TMax</cstring> </property> </widget> </item> <item> <widget class="QLineEdit" name="lineEdit_TMax"> <property name="enabled"> <bool>false</bool> </property> </widget> </item> </layout> </item> <item> <widget class="QTextEdit" name="textEdit"/> </item> <item> <layout class="QHBoxLayout" name="horizontalLayout_4"> <item> <widget class="QPushButton" name="pushButton_Run"> <property name="text"> <string>&amp;Run</string> </property> </widget> </item> <item> <spacer name="horizontalSpacer"> <property name="orientation"> <enum>Qt::Horizontal</enum> </property> <property name="sizeHint" stdset="0"> <size> <width>40</width> <height>20</height> </size> </property> </spacer> </item> <item> <widget class="QPushButton" name="pushButton_Exit"> <property name="text"> <string>&amp;Exit</string> </property> </widget> </item> </layout> </item> </layout> </widget> 














<tabstops> <tabstop>lineEdit_Datafile</tabstop> <tabstop>pushButton_Browse</tabstop> <tabstop>checkBox_FixedAij</tabstop> <tabstop>lineEdit_FixedAij</tabstop> <tabstop>checkBox_TRange</tabstop> <tabstop>lineEdit_TMin</tabstop> <tabstop>lineEdit_TMax</tabstop> <tabstop>textEdit</tabstop> <tabstop>pushButton_Run</tabstop> <tabstop>pushButton_Exit</tabstop> </tabstops> <resources/> <connections/> </ui> C.2 Código Fonte da Biblioteca de Modelos Termodinâmicos ThermodynamicModels.py 








def UNIQUAC(r,q,a,x,T): from numpy import inner,outer,log,exp,array J = outer(1./inner(r,x),r) L = outer(1./inner(q,x),q) lnGammaC = 1-J+log(J)-5*q*(1-J/L+log(J/L)) tau = exp(outer(-1./T,a).reshape(T.shape+a.shape)) s = array([inner(xL_i,tau_i.T) for xL_i,tau_i in zip(x*L,tau)]) lnGammaR = q*(1-log(s)-array([inner(xLs_i,tau_i) for xLs_i,tau_i in zip(x*L/s,tau)])) return exp(lnGammaC+lnGammaR) C.3 Código Fonte do Programa Principal VLEregression.py 





















#!/usr/bin/env python # -*- coding: utf -*- from __future__ import division from PySide.QtGui import QApplication, QDialog, QFileDialog from PySide.QtCore import QFile, QTextStream import sys from numpy import * import matplotlib.pyplot as plt import ui_Form import ThermodynamicModels from numpy.f2py.auxfuncs import isarray class Form(QDialog, ui_Form.Ui_Form): def __init__(self): super(Form, self).__init__() self.setupUi(self) self.textEdit.setStyleSheet(’font: 8pt \"Courier\";’) self.checkBox_FixedAij.stateChanged.connect(self.toggleCheckBox_FixedAij) self.checkBox_TRange.stateChanged.connect(self.toggleCheckBox_TRange) self.pushButton_Browse.clicked.connect(self.browse) 



























































self.pushButton_Run.clicked.connect(self.runCalculations) self.pushButton_Exit.clicked.connect(self.exitProgram) self.show() def toggleCheckBox_FixedAij(self): flag = self.checkBox_FixedAij.isChecked() self.lineEdit_FixedAij.setEnabled(flag) def toggleCheckBox_TRange(self): flag = self.checkBox_TRange.isChecked() self.label_TMin.setEnabled(flag) self.label_TMax.setEnabled(flag) self.lineEdit_TMin.setEnabled(flag) self.lineEdit_TMax.setEnabled(flag) def browse(self): self.textEdit.clear() fName, _ = QFileDialog.getOpenFileName(self, ’Filename of the dataset’, ’.’, ’Dataset (*.dat);;All files (*.*)’) if fName: self.lineEdit_Datafile.setText(fName) return def runCalculations(self): fName =self.lineEdit_Datafile.text() if fName.strip() == ’’: return if not QFile(fName).exists: return self.nl_regression(fName) def exitProgram(self): self.close() def printText(self, text): self.textEdit.insertPlainText(text.decode(’utf-8’)) def nl_regression(self,fName): import scipy.stats as stats import scipy.optimize as optimize self.textEdit.clear() def readData(stream): return stream.readLine().split(’#’)[0].split() f=QFile(fName) f.open(QFile.ReadOnly | QFile.Truncate | QFile.Text) stream = QTextStream(f) self.printText(’Datafile: {}\n\n’.format(fName)) Comp = readData(stream) NComp = len(Comp) self.printText(’VLE System: ’) for i in range(NComp-1): self.printText(’({}){} + ’.format(i+1, Comp[i])) self.printText(’({}){}\n\n’.format(NComp, Comp[-1])) EqAntoine, r, q = [], [], [] for i in range(NComp): EqAntoine_i = [] NEqs = int(readData(stream)[0]) if NEqs == 0: EqAntoine.append(0.) else: 



























































for j in range(NEqs): EqAntoine_i.append(map(float, readData(stream))) EqAntoine.append(EqAntoine_i) for eq in EqAntoine: if eq != 0.: if len(eq)>1: T0 = None for i in range(len(eq)-1): T1, T2, T3, T4 = eq[i][-2], eq[i][-1], eq[i+1][-2], eq[i+1][-1] if i>0: eq[i-1][-1] = T0 T0 = (T2*(T4-T3)+T3*(T2-T1))/((T4-T3)+(T2-T1)) eq[-2][-1] = T0 eq[-1][-2] = T0 for i in range(NComp): line = map(float,readData(stream)) r.append(line[0]); q.append(line[1]) r, q = array(r), array(q) x, y, PExp, TExp = [], [], [], [] for i in range(NComp): x.append([]) y.append([]) self.printText(’Reference of data:\n’) NRef, Refs = 1, [] while not stream.atEnd(): notUse = int(readData(stream)[0]) ref = stream.readLine().split(’#’)[0].strip() SysOrder = map(lambda x: int(x)-1,readData(stream)) NPoints = SysOrder.pop()+1 SysType = len(SysOrder) NOutOfRange = 0 for _ in range(NPoints): line = map(float,readData(stream)) if notUse: continue if self.checkBox_TRange.isChecked(): if line[-1] < float(self.lineEdit_TMin.text()) or line[-1] > float( self.lineEdit_TMax.text()): NOutOfRange += 1 continue for i in range(SysType-1): x[SysOrder[i]].append(line[i]) y[SysOrder[i]].append(line[i+SysType-1]) x[SysOrder[SysType-1]].append(1.-sum(line[0:SysType-1])) y[SysOrder[SysType-1]].append(1.-sum(line[SysType-1:2*SysType-2])) for i in set(range(NComp))-set(SysOrder): x[i].append(0.) y[i].append(0.) PExp.append(line[-2]) TExp.append(line[-1]) Refs.append(NRef) if notUse: txtNoUsed = ’ (>> NOT USED <<)’ else: txtNoUsed =’’ if SysType < 1: self.printText(’\n=> ERROR: SysType < 2’) elif SysType == 2: self.printText(’{:<35}’.format(’({}) Binary VLE System {}:’.format(NRef, tuple(array(SysOrder)+1)))) elif SysType == 3: 



























































self.printText(’{:<35}’.format(’({}) Ternary VLE System {}:’.format(NRef, tuple(array(SysOrder)+1)))) elif SysType == 4: self.printText(’{:<35}’.format(’({}) Quaternary VLE System {}:’.format(NRef, tuple(array(SysOrder)+1)))) elif SysType > 4: self.printText(’{:<35}’.format(’({}) {}-nary VLE System {}:’.format(SysType, tuple(NRef,array(SysOrder)+1)))) self.printText(’{:4g} - {:4g} (out of T range) = {:4g} points => {}{}\n’.format( NPoints, NOutOfRange, NPoints-NOutOfRange, ref, txtNoUsed)) NRef += 1 f.close() x, y = array(x).T, array(y).T PExp, TExp, NRef = array(PExp), array(TExp), array(NRef) PSat = [] for T in TExp: PSat_i = [] for i in range(NComp): if type(EqAntoine[i])==float: PSat_i.append(0.) else: eqUsed = False for eq in EqAntoine[i]: A, B, C, T1, T2 = eq if T1<=T<T2: PSat_i.append(10**(A-B/(C+T))) eqUsed = True; break if eqUsed: continue self.printText(’\n=> ERROR: Impossible to calculate PSat’) self.printText(’ without Antoine Equation ({}) for T = {} °C.’ \ .format(Comp[i], T)) return PSat.append(PSat_i) PSat = array(PSat) TExp += 273.15 # °C => K theta_fixed_i, theta_fixed = [], [] def f_LCtoI(l,c,n): a = l*n+c return a-a//(n+1)-1 def f_ItoLC(i,n): l = i//(n-1); c = i%(n-1) if c>=l: c+=1 return l, c if self.checkBox_FixedAij.isChecked(): for value in self.lineEdit_FixedAij.text().split(’,’): lin, col, num = map(eval, value.split()) theta_fixed_i.append(f_LCtoI(lin-1, col-1, NComp)) theta_fixed.append(num) theta_i = sorted(set(range(NComp*(NComp-1)))-set(theta_fixed_i)) def f(X, *theta): for i, num in zip(theta_i, theta): a[f_ItoLC(i, NComp)] = num gamma = ThermodynamicModels.UNIQUAC(r, q, a, X, TExp) return array(map(sum, X*gamma*PSat)) def plus_minus(a,b): return a-b, a+b theta = (random.rand(NComp*(NComp-1)-len(theta_fixed))*2000-1000.).astype(int).astype( float) N, P = x.shape[0], theta.shape[0] a = zeros((NComp, NComp)) for i, num in zip(theta_fixed_i, theta_fixed): 



























































a[f_ItoLC(i,NComp)] = num self.printText(’\nAij = [[’) idx = 0 for i in range(NComp): for j in range(NComp): if i == j: self.printText(’{:^10}’.format(0)) else: k = f_LCtoI(i,j,NComp) if k in theta_fixed_i: self.printText(’{:^10}’.format(’{:7.2f}’.format(theta_fixed[ theta_fixed_i.index(k)]))) else: self.printText(’{:^10}’.format(’theta[{}]’.format(idx))) idx += 1 if i < NComp-1: self.printText(’]\n [’) self.printText(’]]\n\nInitial Guess:\nAij = [[’) l = 0 for i in range(NComp): for j in range(NComp): if i == j: self.printText(’{:^10}’.format(0)) else: k = f_LCtoI(i, j, NComp) if k in theta_fixed_i: self.printText(’{:^10}’.format(’{:7.2f}’.format(theta_fixed[ theta_fixed_i.index(k)]))) else: self.printText(’{:^10}’.format(’{:7.2f}’.format(theta[l]))) l += 1 if i < NComp-1: self.printText(’]\n [’) self.printText(’]]\n’) try: theta_optimum, cov_theta_optimum, _, errmsg, _ = optimize.curve_fit(f, x, PExp, theta, full_output=1) except: self.printText(’\n=> NOT CONVERGED: {}\n’.format(sys.exc_info()[0])) self.printText(’\n=> TRY RUNNING AGAIN OR ADD/REMOVE ELV SYSTEMS !!!’) return self.printText(’\n=> CONVERGED: {}\n\nSolution:\nAij = [[’.format(errmsg)) for i in range(NComp): for j in range(NComp): self.printText(’{:^10}’.format(’{:7.2f}’.format(a[i,j]))) if i < NComp-1: self.printText(’]\n [’) self.printText(’]]\n’) if type(cov_theta_optimum) == float: self.printText(’\n=> COVARIANCE MATRIX IS INFINITE!\n’) return PExp_optimum = f(x, *theta_optimum) # Total Sum of Squares (TSS) TSS_corrected = ((PExp-PExp.mean())**2).sum() TSS_uncorrected = (PExp**2).sum() # Residual Sum of Squares (RSS) or Sum of Squared Residuals (SSR) or # Sum of Squared Errors of Prediction (SSE) RSS = ((PExp-PExp_optimum)**2).sum() # Explained Sum of Squares (ESS) ESS_uncorrected = TSS_uncorrected-RSS # Mean Total Sum of Squares MST_corrected = TSS_corrected/(N-1) 



























































# Mean Residual Sum of Squares MSR = RSS/(N-P) # Mean Explained Sum of Squares MSE_uncorrected = ESS_uncorrected/P alpha = 0.05 F_critical_uncorrected = stats.f.isf(alpha, N-P, P) F_value_uncorrected = MSE_uncorrected/MSR Pr_F_value_uncorrected = stats.f.sf(F_value_uncorrected, N-P, P) s = sqrt(MSR) R2 = 1-RSS/TSS_corrected R2_bar = 1-MSR/MST_corrected ASE = sqrt(cov_theta_optimum.diagonal()) corr_theta_optimum = (cov_theta_optimum/ASE).T/ASE t_critical = stats.t.isf(alpha/2, N-P) t_value = theta_optimum/ASE Pr_tvalue = stats.t.sf(abs(t_value), N-P)*2 CI_theta = plus_minus(theta_optimum, t_critical*ASE) self.printText(’\nNon-Linear Least Squares Summary Statistics\n\n’) self.printText(’Function: y = {0}\n\n’.format(’UNIQUAC’)) self.printText(’Source | Sum of Squares | DF | Mean Square |’ ’ F-value | Pr(>F)\n’) self.printText(’Regression | {0:4d} | {1:16.6f} | {2:16.6f} | {3:12.6f} |’ ’ {4:8.6f}\n’.format(P, ESS_uncorrected, MSE_uncorrected, F_value_uncorrected, Pr_F_value_uncorrected)) self.printText(’Residual | {0:4d} | {1:16.6f} | {2:16.6f} |\n’.format(N-P, RSS, MSR)) self.printText(’ Uncorrected Total | {0:4d} | {1:16.6f} | \n’.format(N, TSS_uncorrected)) self.printText(’ (Corrected Total) | {0:4d} | {1:16.6f} | \n\n’.format(N-1, TSS_corrected)) self.printText(’alpha = {0:8.6f} self.printText(’s = {0:8.6f} t-critical = {1:8.6f}\n\n’.format(alpha, t_critical)) R-sq = {1:8.6f} R-sq(adj) = {2:8.6f}\n\n’.format(s, R2, R2_bar)) self.printText(’Parameter | Estimate | Asymptotic ’ Pr(>|t|) | Asymptotic {0:2.0%}\n’.format(1-alpha)) | Std. Error | t-value |’ self.printText(’ | | |’ ’ | Confidence Interval\n’) self.printText(’ | | | |’ ’ | Lower | Upper\n’) for i in range(P): self.printText(’{0:10s}| {1:16.6f} | {2:20.6f} | {3:12.6f} | {4:8.6f} | {5:23.6f} |’ ’ {6:23.6f}\n’.format(’theta[{0}]’.format(i), theta_optimum[i], ASE[i], t_value[i], Pr_tvalue[i], CI_theta[0][i], CI_theta[1][i])) self.printText(’\nParameter | Correlation Matrix\n for i in range(P): ’) self.printText(’{0:11s}’.format(’| theta[{0}]’.format(i))) for i in range(P): self.printText(’\n{0:10s}’.format(’theta[{0}]’.format(i))) for j in range(P): self.printText(’| {0:9.6f}’.format(corr_theta_optimum[i][j])) Gamma = ThermodynamicModels.UNIQUAC(r, q, a, x, TExp) PCalc = array(map(sum, x*Gamma*PSat)) dP = abs(PExp-PCalc) yCalc = ((x*Gamma*PSat).T/array(map(sum,x*ThermodynamicModels.UNIQUAC(r,q,a,x,TExp)* PSat))).T dy = abs(y-yCalc) sum_dyRel, yNull = [],[] for i in range(NComp-1): sum_dyRel.append(0.) yNull.append(0) for i in range(N): for j in range(NComp-1): 

















































if y[i,j] == 0.: yNull[j] += 1 else: sum_dyRel[j] += dy[i,j]/y[i,j] for i in range(NComp-1): self.printText(’\n\nMaximum deviation of y{} = {:8.6f}\n’.format(i+1, max(dy[:,i]))) self.printText(’Average absolute deviation of y{} = {:8.6f}\n’.format(i+1, sum(dy[:, i])/N)) self.printText(’Average relative deviation of y{} ({} null points) = {:5.2%}’.format( i+1, yNull[i], sum_dyRel[i]/N)) self.printText(’\n\nMaximum deviation of Pressure = {:7.2f}\n’.format(max(dP))) self.printText(’Average absolute deviation of Pressure = {:7.2f}\n’.format(sum(dP)/N)) self.printText(’Average relative deviation of Pressure = {:5.2%}\n\nReference ’.format( sum(dP/PExp)/N)) for i in range(NComp-1): self.printText(’| x{} for i in range(NComp-1): ’.format(i+1)) self.printText(’| y{0}Exp - y{0}Calc = abs(dy{0}) ’.format(i+1)) abs(dP) (mmHg) | TExp (°C)\n’) self.printText(’| PExp for i in range(N): - PCalc = self.printText(’{:^10}’.format(Refs[i])) for j in range(NComp-1): self.printText(’| {:8.6f} ’.format(x[i, j])) for j in range(NComp-1): self.printText(’| {:8.6f} - {:8.6f} = {:8.6f} ’. \ format(y[i,j], yCalc[i,j], dy[i,j])) self.printText(’| {:9.2f} - {:9.2f} = {:9.2f} | {:7.3f}\n’. \ format(PExp[i], PCalc[i], dP[i], TExp[i]-273.15)) self.printText(’\n Gamma for i in range(NComp-1): | ’) self.printText(’Gamma{} | ’.format(i+2)) for i in range(NComp): self.printText(’PSat{} | ’.format(i+1)) self.printText(’PExp for i in range(N): | T (°C)\n’) for j in range(NComp): self.printText(’{:9.5f} |’.format(Gamma[i,j])) for j in range(NComp): self.printText(’{:9.2f} |’.format(PSat[i,j])) self.printText(’{:7.2f} | {:7.3f}\n’.format(PExp[i], TExp[i]-173.15)) return def main(): app = QApplication(sys.argv) _ = Form() sys.exit(app.exec_()) if __name__ == ’__main__’: main() C.4 Arquivo com Dados de Entrada Para melhor compreensão do formato do arquivo com dados de entrada, e também como base para a criação de novos arquivos, á apresentado, a seguir, uma listagem do arquivo Dados.dat que contém os dados para o metanol e o etanol: Neste arquivo, a separação entre itens deve ser feita com espaços ou tabulações e, os comentários devem ser precedidos pelo caractere #. A linha 1 informa os componentes presentes. As linhas de 2 a 7 informam para cada componente, primeiro, o número de equações de Antoine utilizadas para cada componente e, em seguida, as respectivas constantes destas equações com sua faixa de temperatura. Caso queira-se desprezar a pressão de saturação, usa-se o valor 0 para número de equações. Portando, caso isto seja usado, não se acrescenta as linhas que corresponderiam as respectivas equações de Antoine para este componente. As linhas 8 e 9 informam os parâmetro r e q do modelo UNIQUAC.
A seguir são informados os dados de equilíbrio, isto é feito da seguinte forma: na primeira linha (linhas 10 e 25) é utilizada o valor 0 caso os dados desta referência devam ser usados, senão, usa-se 1; na segunda linha (linhas 11 e 26) cita-se a referência bibliográﬁca dos dados; na terceira linha (12 e 27) informa-se os índices relativos aos componentes (1 para metanol e 2 para etanol, neste exemplo) presentes nos dados de equilíbrio e em que ordem eles aparecem e, o número de pontos experimentais; as linhas seguintes (de 13 a 24 e de 28 a 38) informam os dados experimentais, propriamente ditos, iniciando pelos dados da composição de equilíbrio da fase líquida e depois da fase vapor, cada fase com menos um componente (que será calculado em função dos dados informados) e na ordem com que foram apresentados pelos índices na linha anterior, e terminando com a pressão (em mmHg) e com a temperatura (em °C). Todos os dados numéricos de ponto ﬂutuante devem utilizar ponto (.) como ponto decimal.
APÊNDICE D – Programa JAFOSSMS Neste apêndice, primeiramente, apresenta-se o ícone do programa (Figura 64) e os códigos do arquivo Qt Resource, da interface gráﬁca, do widget do matplotlib (componente da GUI, especiﬁcamente: a área do gráﬁco) e do programa principal. E, por último, explica-se a formatação dos arquivos com dados de entrada. Todos estes itens, juntos, constituem o programa JAFOSSMS.
Os códigos apresentados aqui permitem recriar, a partir do conteúdo impresso, o arquivo original. Para que isso seja possível, é necessário que o texto impresso (incluindo os espaços à esquerda, na exata quantidade) seja gravado na forma de arquivo de texto sem formatação, com os respectivos nomes (exceto os de dados de entrada, onde, apenas, sugere-se que tenham as extensões .in e .dat respectivamente para principal e para especíﬁco) e, OBRIGATORIAMENTE, com codiﬁcação UTF-8.
D.1 Ícone do Programa A Figura 64 ilustra a imagem do ícone do programa JAFOSSMS. Esta, para poder ser utilizada no programa JAFOSSMS, deverá ser copiada e gravada como arquivo de imagem do tipo Portable Network Graphics (PNG) com tamanho de 512x512 pontos e, com nome: JAFOSSMS.png.
Figura 64 – Ícone do Programa JAFOSSMS.
Fonte: O autor.
Form.qrc 




<RCC> <qresource> <file>JAFOSSMS.png</file> </qresource> </RCC> D.3 Código Fonte da Interface Gráﬁca do Usuário Form.ui 












































<?xml version="1.0" encoding="UTF-8"?> <ui version="4.0"> <class>Form</class> <widget class="QWidget" name="Form"> <property name="geometry"> <rect> <x>0</x> <y>0</y> <width>835</width> <height>445</height> </rect> </property> <property name="sizePolicy"> <sizepolicy hsizetype="Minimum" vsizetype="Minimum"> <horstretch>0</horstretch> <verstretch>0</verstretch> </sizepolicy> </property> <property name="windowTitle"> <string>JAFOSSMS - Solubilidade de Sais em Mistura de Solventes</string> </property> <property name="windowIcon"> <iconset resource="Form.qrc"> <normaloff>:/JAFOSSMS.png</normaloff>:/JAFOSSMS.png</iconset> </property> <layout class="QVBoxLayout" name="verticalLayout_Form"> <item> <widget class="QTabWidget" name="tabWidget"> <property name="currentIndex"> <number>0</number> </property> <widget class="QWidget" name="tab_GeneralReport"> <attribute name="title"> <string>RELA&amp;TÓRIO GERAL</string> </attribute> <layout class="QVBoxLayout" name="verticalLayout_GeneralReport"> <item> <widget class="QTextEdit" name="textEdit_GeneralReport"/> </item> <item> <layout class="QHBoxLayout" name="horizontalLayout_GeneralReport" stretch="4,1,0"> <item> <widget class="QPushButton" name="pushButton_SaveGeneralReport"> <property name="text"> <string>Gra&amp;var Relatório Geral</string> 



























































</property> </widget> </item> <item> <widget class="QSlider" name="horizontalSlider_GeneralReport"> <property name="orientation"> <enum>Qt::Horizontal</enum> </property> </widget> </item> <item> <widget class="QLabel" name="label_Slider_GeneralReport"/> </item> </layout> </item> </layout> </widget> <widget class="QWidget" name="tab_SingleSolvent"> <attribute name="title"> <string>SOLVENTE &amp;SIMPLES</string> </attribute> <layout class="QVBoxLayout" name="verticalLayout_SingleSolvent"> <item> <layout class="QGridLayout" name="gridLayout_Plot"> <item row="0" column="1"> <layout class="QHBoxLayout" name="horizontalLayout_Plot_y"> <item> <widget class="QLabel" name="label_Plot_y_1"> <property name="text"> <string>Ordenada:</string> </property> </widget> </item> <item> <widget class="QComboBox" name="comboBox_Plot_y_C"> <item> <property name="text"> <string>Molalidade</string> </property> </item> <item> <property name="text"> <string>Molaridade</string> </property> </item> <item> <property name="text"> <string>Fração Molar</string> </property> </item> <item> <property name="text"> <string>Fração Mássica</string> </property> </item> </widget> </item> <item> <widget class="QLabel" name="label_Plot_y_2"> <property name="text"> 



























































<string>do Sal em</string> </property> </widget> </item> <item> <widget class="QComboBox" name="comboBox_Plot_y_solv"> <item> <property name="text"> <string>MEG</string> </property> </item> <item> <property name="text"> <string>Água</string> </property> </item> </widget> </item> <item> <spacer name="horizontalSpacer_Plot_y"> <property name="orientation"> <enum>Qt::Horizontal</enum> </property> <property name="sizeHint" stdset="0"> <size> <width>0</width> <height>0</height> </size> </property> </spacer> </item> </layout> </item> <item row="0" column="0" rowspan="2"> <widget class="QPushButton" name="pushButton_Plot"> <property name="sizePolicy"> <sizepolicy hsizetype="Minimum" vsizetype="Expanding"> <horstretch>0</horstretch> <verstretch>0</verstretch> </sizepolicy> </property> <property name="text"> <string>Gráfico &amp;1</string> </property> </widget> </item> <item row="1" column="1"> <layout class="QHBoxLayout" name="horizontalLayout_Plot_x"> <item> <widget class="QLabel" name="label_Plot_x"> <property name="text"> <string>Abscissa: Temperatura em</string> </property> </widget> </item> <item> <widget class="QComboBox" name="comboBox_Plot_x_T"> <item> <property name="text"> <string>Kelvins</string> 



























































</property> </item> <item> <property name="text"> <string>Graus Celsius</string> </property> </item> <item> <property name="text"> <string>Graus Rankine</string> </property> </item> <item> <property name="text"> <string>Graus Fahrenheit</string> </property> </item> </widget> </item> <item> <spacer name="horizontalSpacer_Plot_x"> <property name="orientation"> <enum>Qt::Horizontal</enum> </property> <property name="sizeHint" stdset="0"> <size> <width>0</width> <height>0</height> </size> </property> </spacer> </item> </layout> </item> </layout> </item> <item> <spacer name="verticalSpacer_SingleSolvent"> <property name="orientation"> <enum>Qt::Vertical</enum> </property> <property name="sizeHint" stdset="0"> <size> <width>0</width> <height>0</height> </size> </property> </spacer> </item> </layout> </widget> <widget class="QWidget" name="tab_MixedSolvents"> <attribute name="title"> <string>&amp;MISTURA DE SOLVENTES</string> </attribute> <layout class="QVBoxLayout" name="verticalLayout_MixedSolvents"> <item> <layout class="QHBoxLayout" name="horizontalLayout_Isotherms"> <item> <widget class="QLabel" name="label_Isotherms_1"> 



























































<property name="text"> <string>&amp;Isotermas para</string> </property> <property name="buddy"> <cstring>lineEdit_Isotherms</cstring> </property> </widget> </item> <item> <widget class="QComboBox" name="comboBox_Isotherms_mode"> <item> <property name="text"> <string>Cálculo Normal / Regressão</string> </property> </item> <item> <property name="text"> <string>Predição</string> </property> </item> </widget> </item> <item> <widget class="QLabel" name="label_Isotherms_2"> <property name="text"> <string>em</string> </property> </widget> </item> <item> <widget class="QComboBox" name="comboBox_Isotherms_T"> <item> <property name="text"> <string>Kelvins</string> </property> </item> <item> <property name="text"> <string>Graus Celsius</string> </property> </item> <item> <property name="text"> <string>Graus Rankine</string> </property> </item> <item> <property name="text"> <string>Graus Fahrenheit</string> </property> </item> </widget> </item> <item> <widget class="QLineEdit" name="lineEdit_Isotherms"/> </item> <item> <widget class="QPushButton" name="pushButton_Isotherms_Choose"> <property name="text"> <string>&amp;Escolher</string> 



























































</property> </widget> </item> </layout> </item> <item> <widget class="QGroupBox" name="groupBox_Plots"> <property name="title"> <string>Gráficos:</string> </property> <layout class="QVBoxLayout" name="verticalLayout_Plots"> <item> <layout class="QGridLayout" name="gridLayout_Plot"> <item row="0" column="0" rowspan="2"> <widget class="QPushButton" name="pushButton_Plot"> <property name="sizePolicy"> <sizepolicy hsizetype="Minimum" vsizetype="Expanding"> <horstretch>0</horstretch> <verstretch>0</verstretch> </sizepolicy> </property> <property name="text"> <string>Gráfico &amp;2</string> </property> </widget> </item> <item row="1" column="1"> <layout class="QHBoxLayout" name="horizontalLayout_Plot_x"> <item> <widget class="QLabel" name="label_Plot_x_1"> <property name="text"> <string>Abscissa: Fração</string> </property> </widget> </item> <item> <widget class="QComboBox" name="comboBox_Plot_x_C_SF"> <item> <property name="text"> <string>Molar</string> </property> </item> <item> <property name="text"> <string>Mássica</string> </property> </item> </widget> </item> <item> <widget class="QLabel" name="label_Plot_x_2"> <property name="text"> <string>do</string> </property> </widget> </item> <item> <widget class="QComboBox" name="comboBox_Plot_x_solv"> <item> <property name="text"> 























































































































<string>Fração Mássica</string> </property> </item> </widget> </item> <item> <widget class="QLabel" name="label_Plot_y_2"> <property name="text"> <string>do Sal em Mistura de Solventes</string> </property> </widget> </item> <item> <spacer name="horizontalSpacer_Plot_y"> <property name="orientation"> <enum>Qt::Horizontal</enum> </property> <property name="sizeHint" stdset="0"> <size> <width>0</width> <height>0</height> </size> </property> </spacer> </item> </layout> </item> </layout> </item> <item> <widget class="Line" name="line_Plots_1"> <property name="orientation"> <enum>Qt::Horizontal</enum> </property> </widget> </item> <item> <layout class="QGridLayout" name="gridLayout_Plot"> <item row="0" column="1"> <layout class="QHBoxLayout" name="horizontalLayout_Plot_y"> <item> <widget class="QLabel" name="label_Plot_y_1"> <property name="text"> <string>Ordenada: </string> </property> </widget> </item> <item> <widget class="QComboBox" name="comboBox_Plot_y_F"> <item> <property name="text"> <string>Coeficiente de Atividade</string> </property> </item> <item> <property name="text"> <string>Logaritmo do Coeficiente de Atividade</string> </property> </item> </widget> 























































































































<widget class="QLabel" name="label_Plot_x_2"> <property name="text"> <string>do</string> </property> </widget> </item> <item> <widget class="QComboBox" name="comboBox_Plot_x_solv"> <item> <property name="text"> <string>MEG</string> </property> </item> <item> <property name="text"> <string>Água</string> </property> </item> </widget> </item> <item> <widget class="QLabel" name="label_Plot_x_3"> <property name="text"> <string>Livre de Sal</string> </property> </widget> </item> <item> <spacer name="horizontalSpacer_Plot_x"> <property name="orientation"> <enum>Qt::Horizontal</enum> </property> <property name="sizeHint" stdset="0"> <size> <width>0</width> <height>0</height> </size> </property> </spacer> </item> </layout> </item> </layout> </item> <item> <widget class="Line" name="line_Plots_2"> <property name="orientation"> <enum>Qt::Horizontal</enum> </property> </widget> </item> <item> <layout class="QGridLayout" name="gridLayout_Plot"> <item row="0" column="1"> <layout class="QHBoxLayout" name="horizontalLayout_Plot_y"> <item> <widget class="QLabel" name="label_Plot_y_1"> <property name="text"> <string>Ordenada: </string> </property> 



























































</widget> </item> <item> <widget class="QComboBox" name="comboBox_Plot_y_F_E"> <item> <property name="text"> <string>Potencial Químico Padrão de Excesso</string> </property> </item> <item> <property name="text"> <string>Logaritmo de Excesso do Coeficiente de Atividade</string> </property> </item> <item> <property name="text"> <string>Logaritmo de Excesso da Molalidade</string> </property> </item> </widget> </item> <item> <widget class="QLabel" name="label_Plot_y_2"> <property name="text"> <string>do Sal em Mistura de Solventes</string> </property> </widget> </item> <item> <spacer name="horizontalSpacer_Plot_y"> <property name="orientation"> <enum>Qt::Horizontal</enum> </property> <property name="sizeHint" stdset="0"> <size> <width>0</width> <height>0</height> </size> </property> </spacer> </item> </layout> </item> <item row="0" column="0" rowspan="2"> <widget class="QPushButton" name="pushButton_Plot"> <property name="sizePolicy"> <sizepolicy hsizetype="Minimum" vsizetype="Expanding"> <horstretch>0</horstretch> <verstretch>0</verstretch> </sizepolicy> </property> <property name="text"> <string>Gráfico &amp;4</string> </property> </widget> </item> <item row="1" column="1"> <layout class="QHBoxLayout" name="horizontalLayout_Plot_x"> <item> <widget class="QLabel" name="label_Plot_x_1"> 



























































<property name="text"> <string>Abscissa: Fração</string> </property> </widget> </item> <item> <widget class="QComboBox" name="comboBox_Plot_x_C_SF"> <item> <property name="text"> <string>Molar</string> </property> </item> <item> <property name="text"> <string>Mássica</string> </property> </item> </widget> </item> <item> <widget class="QLabel" name="label_Plot_x_2"> <property name="text"> <string>do</string> </property> </widget> </item> <item> <widget class="QComboBox" name="comboBox_Plot_x_solv"> <item> <property name="text"> <string>MEG</string> </property> </item> <item> <property name="text"> <string>Água</string> </property> </item> </widget> </item> <item> <widget class="QLabel" name="label_Plot_x_3"> <property name="text"> <string>Livre de Sal</string> </property> </widget> </item> <item> <spacer name="horizontalSpacer_Plot_x"> <property name="orientation"> <enum>Qt::Horizontal</enum> </property> <property name="sizeHint" stdset="0"> <size> <width>0</width> <height>0</height> </size> </property> </spacer> </item> 



























































</layout> </item> </layout> </item> </layout> </widget> </item> <item> <spacer name="verticalSpacer_MixedSolvents"> <property name="orientation"> <enum>Qt::Vertical</enum> </property> <property name="sizeHint" stdset="0"> <size> <width>0</width> <height>0</height> </size> </property> </spacer> </item> </layout> </widget> <widget class="QWidget" name="tab_GraphicAndStatistics"> <attribute name="title"> <string>&amp;GRÁFICO E ESTATÍSTICAS</string> </attribute> <layout class="QVBoxLayout" name="verticalLayout_GraphicAndStatistics"> <item> <widget class="QSplitter" name="splitter_GraphicAndStatistics"> <property name="orientation"> <enum>Qt::Horizontal</enum> </property> <widget class="QWidget" name="layoutWidget"> <layout class="QVBoxLayout" name="verticalLayout_Graphic"> <item> <widget class="MplWidget" name="mplWidget_Graphic" native="true"> <property name="sizePolicy"> <sizepolicy hsizetype="Expanding" vsizetype="Expanding"> <horstretch>0</horstretch> <verstretch>0</verstretch> </sizepolicy> </property> </widget> </item> <item> <layout class="QHBoxLayout" name="horizontalLayout_Graphic"> <item> <layout class="QVBoxLayout" name="verticalLayout_Graphic_1"> <item> <widget class="QCheckBox" name="checkBox_Graphic_NavigationToolbar"> <property name="text"> <string>Barra de &amp;Navegação</string> </property> </widget> </item> <item> <layout class="QHBoxLayout" name="horizontalLayout_Graphic_Legend"> <item> <widget class="QCheckBox" name="checkBox_Graphic_Legend"> <property name="text"> 



























































<string>&amp;Legenda:</string> </property> </widget> </item> <item> <widget class="QSlider" name="horizontalSlider_Graphic_Legend"> <property name="orientation"> <enum>Qt::Horizontal</enum> </property> </widget> </item> <item> <widget class="QLabel" name="label_Slider_Graphic_Legend"/> </item> </layout> </item> </layout> </item> <item> <spacer name="horizontalSpacer_Graphic"> <property name="orientation"> <enum>Qt::Horizontal</enum> </property> <property name="sizeHint" stdset="0"> <size> <width>0</width> <height>0</height> </size> </property> </spacer> </item> <item> <layout class="QVBoxLayout" name="verticalLayout_Graphic_2"> <item> <layout class="QHBoxLayout" name="horizontalLayout_Graphic_AxesTicks"> <item> <widget class="QLabel" name="label_Graphic_AxesTicks"> <property name="text"> <string>Mar&amp;cas nos Eixos:</string> </property> <property name="buddy"> <cstring>horizontalSlider_Graphic_AxesTicks</cstring> </property> </widget> </item> <item> <widget class="QSlider" name="horizontalSlider_Graphic_AxesTicks"> <property name="orientation"> <enum>Qt::Horizontal</enum> </property> </widget> </item> <item> <widget class="QLabel" name="label_Slider_Graphic_AxesTicks"/> </item> </layout> </item> <item> <layout class="QHBoxLayout" name="horizontalLayout_Graphic_AxesLabels"> <item> 



























































<widget class="QLabel" name="label_Graphic_AxesLabels"> <property name="text"> <string>Rótulos dos &amp;Eixos:</string> </property> <property name="buddy"> <cstring>horizontalSlider_Graphic_AxesLabels</cstring> </property> </widget> </item> <item> <widget class="QSlider" name="horizontalSlider_Graphic_AxesLabels"> <property name="orientation"> <enum>Qt::Horizontal</enum> </property> </widget> </item> <item> <widget class="QLabel" name="label_Slider_Graphic_AxesLabels"/> </item> </layout> </item> </layout> </item> </layout> </item> </layout> </widget> <widget class="QWidget" name="layoutWidget"> <layout class="QVBoxLayout" name="verticalLayout_Statistics"> <item> <widget class="QTextEdit" name="textEdit_Statistics"/> </item> <item> <layout class="QHBoxLayout" name="horizontalLayout_Statistics" stretch="4,1,0"> <item> <widget class="QPushButton" name="pushButton_SaveStatistics"> <property name="text"> <string>Gra&amp;var Estatísticas</string> </property> </widget> </item> <item> <widget class="QSlider" name="horizontalSlider_Statistics"> <property name="orientation"> <enum>Qt::Horizontal</enum> </property> </widget> </item> <item> <widget class="QLabel" name="label_Slider_Statistics"/> </item> </layout> </item> </layout> </widget> </widget> </item> </layout> </widget> </widget> 



























































</item> <item> <layout class="QHBoxLayout" name="horizontalLayout_Datafile"> <item> <widget class="QLabel" name="label_Datafile"> <property name="text"> <string>Arquivo com &amp;Dados de Entrada:</string> </property> <property name="buddy"> <cstring>lineEdit_Datafile</cstring> </property> </widget> </item> <item> <widget class="QLineEdit" name="lineEdit_Datafile"/> </item> <item> <widget class="QPushButton" name="pushButton_Datafile_Browse"> <property name="text"> <string>&amp;Procurar</string> </property> </widget> </item> </layout> </item> <item> <layout class="QHBoxLayout" name="horizontalLayout_Run_Exit"> <item> <widget class="QPushButton" name="pushButton_Run"> <property name="text"> <string>E&amp;xecutar</string> </property> </widget> </item> <item> <widget class="QPushButton" name="pushButton_Exit"> <property name="text"> <string>Sai&amp;r</string> </property> </widget> </item> </layout> </item> </layout> </widget> <customwidgets> <customwidget> <class>MplWidget</class> <extends>QWidget</extends> <header>mplwidget.h</header> <container>1</container> </customwidget> </customwidgets> <tabstops> <tabstop>tabWidget</tabstop> <tabstop>textEdit_GeneralReport</tabstop> <tabstop>pushButton_SaveGeneralReport</tabstop> <tabstop>horizontalSlider_GeneralReport</tabstop> <tabstop>pushButton_Plot</tabstop> <tabstop>comboBox_Plot_y_C</tabstop> D.4 Código Fonte do widget do matplotlib mplwidget.py 
















from matplotlib import use, rcParams use("Qt4Agg") rcParams[’mathtext.fontset’] = ’stix’ rcParams[’backend.qt4’] = ’PySide’ rcParams.update({’figure.autolayout’: True}) from matplotlib.backends.backend_qt4agg import (FigureCanvasQTAgg as FigureCanvas, NavigationToolbar2QT as NavigationToolbar) from matplotlib.figure import Figure from PySide.QtGui import QWidget, QVBoxLayout class MplCanvas(FigureCanvas): def __init__(self): self.fig = Figure() self.ax = self.fig.add_subplot(111) FigureCanvas.__init__(self, self.fig) 












FigureCanvas.updateGeometry(self) class MplWidget(QWidget): def __init__(self, parent = None): QWidget.__init__(self, parent) self.canvas = MplCanvas() self.vbl = QVBoxLayout() self.vbl.addWidget(self.canvas) self.navbar = NavigationToolbar(self.canvas, self) self.vbl.addWidget(self.navbar) self.setLayout(self.vbl) D.5 Código Fonte do Programa Principal JAFOSSMS.py 







































#!/usr/bin/env python # -*- coding: utf-8 -*- from __future__ import division from decimal import Decimal, Context from numpy import abs, append, array, asarray, concatenate, exp, linspace, log, random, sqrt from PySide.QtCore import QFile, QFileInfo, QRegExp, Qt, QTextStream, SLOT from PySide.QtGui import (qApp, QApplication, QCheckBox, QDialog, QDialogButtonBox, QFileDialog, QGridLayout, QRegExpValidator, QTextBlockFormat, QTextCharFormat, QTextDocument, QTextTableFormat) from scipy.optimize import curve_fit, fsolve import matplotlib.lines as mlines import matplotlib.patches as mpatches import matplotlib.ticker as tkr import re import scipy.stats as stats import sys import ui_Form ALIGN = { ’L’: Qt.AlignLeft, ’C’: Qt.AlignCenter, ’R’: Qt.AlignRight } DP, COLORS = ’,’, ’rygcbm’ MARKERS = [[’o’, 8], [’*’, 10], [’s’, 7], [’d’, 9], [’^’, 8], [’p’, 9], [’v’, 8]] REG_EXP = ’(([+-]?((\d*[’+DP+’]?\d+)|(\d+[’+DP+’]?\d*)))\s)*’ MODE, TYPES = [u’Regressão’, u’Predição’], [’str’, ’unicode’, ’int’, ’float’] UNITS_T = [’K’, u’°C’, u’°R’, u’°F’] M_H2O = 0.018015 # kg·mol^(-1) - LIDE e HAYNES, 2009 M_MEG = 0.062068 # kg·mol^(-1) - LIDE e HAYNES, 2009 R = 8.314472 # J·K^(-1)·mol^(-1) - LIDE e HAYNES, 2009 multAppend = lambda *_: map(lambda __: __[0].append(__[1]), zip(_[::2],_[1::2])) multToArray = lambda *_: map(array, _) strTo = lambda s, t: s if t == ’str’ else eval(t)(s.replace(DP, ’.’)) map_strTo = lambda l, t: map(strTo, l, [t]*len(l)) toStr = lambda x: unicode(x).replace(’.’, DP) decimalPlaces = lambda x: -Decimal(str(x)).as_tuple().exponent decimalPlaces = lambda x: decimalPlaces(x) if decimalPlaces(x) > 0 else 1 setDecimalPlaces = lambda x, N: toStr(Decimal(x).quantize(Decimal(10)**-N)) setDecimalPlacesPercent = lambda x, N: setDecimalPlaces(x*100, N)+’%’ significantFigures = lambda x, N: Context(prec=N).create_decimal(x) setSignificantFigures = lambda x, N: toStr(setDecimalPlaces(significantFigures(x, N), decimalPlaces(significantFigures(x, N)))) 



























































setSignificantFiguresPercent = lambda x, N: setSignificantFigures(x*100, N)+’%’ def f_gen(s): i, n = 0, len(s) while True: yield s[i%n] i += 1 def convertT(T, i): # Converte temperaturas de K para °C/°R/°F ou vice-versa # i = 0/4 # i = 1/2/3 => Kelvins para graus Celsius/Rankine/Fahrenheit # i = 5/6/7 => graus Celsius/Rankine/Fahrenheit para kelvins return [T, T-273.15, T*1.8, T*1.8 - 459.67, T, T+273.15, T/1.8, (T+459.67) / 1.8][i] => Não converte class htlmlTags: def __init__(self): self.b = lambda s: ’<b>’+s+’</b>’ self.i = lambda s: ’<i>’+s+’</i>’ self.u = lambda s: ’<u>’+s+’</u>’ self.bi = lambda s: self.b(self.i(s)) self.bu = lambda s: self.b(self.u(s)) self.sub = lambda s: ’<sub>’+s+’</sub>’ self.sup = lambda s: ’<sup>’+s+’</sup>’ self.center = lambda s: ’<center>’+s+’</center>’ self.div = lambda s, bc, c: ’<div style="background-color:’+bc+’;color:’+c+’;">’+s+’</div>’ self.title = lambda s, bc, c: self.center(self.div(self.bu(s), bc, c))+’<br>’ class chooseIsotherms(QDialog): def __init__(self, lineEdit, i_T, i_mode): super(chooseIsotherms, self).__init__() self.setWindowTitle(’Escolha as isotermas para a ’+MODE[i_mode]) self.lineEdit = lineEdit T = list(convertT([T_reg, T_prd][i_mode], i_T)) T_set = set(map_strTo(lineEdit.text().split(), ’float’)) T_sorted = sorted(set(T) | T_set) layout, self.checkBoxs, ncols = QGridLayout(), [], 3 for col in range(ncols): row = 0 for T_ in T_sorted[col::ncols]: n = T.count(T_) checkBox = QCheckBox((toStr(T_)+’ ’+UNITS_T[i_T]+’ (’+(str(n) if n > 0 else ’nenhum’)+[’ ponto experimental’, ’ pontos experimentais’][n > 1]+’)’)) checkBox.setChecked(T_ in T_set) self.checkBoxs.append(checkBox) layout.addWidget(checkBox, row, col) row += 1 buttonBox = QDialogButtonBox(QDialogButtonBox.Cancel | QDialogButtonBox.Ok) layout.addWidget(buttonBox, row+1, 0, 1, ncols) buttonBox.accepted.connect(self.accept) buttonBox.rejected.connect(self.reject) self.setLayout(layout) def accept(self): self.lineEdit.setText(’ ’.join([checkBox.text().split()[0] for checkBox in self.checkBoxs if checkBox.isChecked()])) 



























































QDialog.accept(self) def reject(self): QDialog.reject(self) class JAFOSSMS(QDialog, ui_Form.Ui_Form): def __init__(self): super(JAFOSSMS, self).__init__() self.setupUi(self) global canvas, h, comboBoxs, sliders canvas, h = self.mplWidget_Graphic.canvas, htlmlTags() comboBoxs = [self.comboBox_Plot_x_T, self.comboBox_Plot_y_C, self.comboBox_Plot_y_solv, self.comboBox_Isotherms_mode, self.comboBox_Isotherms_T, self.comboBox_Plot_x_C_SF, self.comboBox_Plot_x_solv, self.comboBox_Plot_y_C, self.comboBox_Plot_x_C_SF, self.comboBox_Plot_x_solv, self.comboBox_Plot_y_F, self.comboBox_Plot_x_C_SF, self.comboBox_Plot_x_solv, self.comboBox_Plot_y_F_E] sliders = [self.horizontalSlider_GeneralReport, self.horizontalSlider_Statistics, self.horizontalSlider_Graphic_Legend, self.horizontalSlider_Graphic_AxesTicks, self.horizontalSlider_Graphic_AxesLabels] for slider, min_, max_ in zip(sliders, [6, 6, 8, 8, 10], [18, 18, 20, 20, 22]): slider.setMinimum(min_) slider.setMaximum(max_) self.horizontalSlider_GeneralReport.valueChanged.connect(lambda: self.changeSize(0)) self.horizontalSlider_Statistics.valueChanged.connect(lambda: self.changeSize(1)) self.horizontalSlider_Graphic_Legend.valueChanged.connect(lambda: self.changeSize(2)) self.horizontalSlider_Graphic_AxesTicks.valueChanged.connect(lambda: self.changeSize(3)) self.horizontalSlider_Graphic_AxesLabels.valueChanged.connect(lambda: self.changeSize(4)) self.setAttribute(Qt.WA_DeleteOnClose) self.setWindowFlags(Qt.WindowMinMaxButtonsHint|Qt.WindowCloseButtonHint) self.initializeAll() self.tableformat = QTextTableFormat() self.tableformat.setCellPadding(2) self.tableformat.setCellSpacing(1) self.headerformat = QTextCharFormat() self.brush = self.headerformat.background() self.brush.setColor(Qt.lightGray) self.brush.setStyle(Qt.SolidPattern) self.headerformat.setBackground(self.brush) self.headerformat.setVerticalAlignment(QTextCharFormat.AlignMiddle) self.blockFormat = QTextBlockFormat() self.blockFormat.setRightMargin(10) self.blockFormat.setLeftMargin(10) self.textDocument_GeneralReport = QTextDocument() self.textDocument_Statistics = QTextDocument() self.textEdit_GeneralReport.setDocument(self.textDocument_GeneralReport) self.textEdit_GeneralReport.setFont(’Courier’) self.textEdit_Statistics.setDocument(self.textDocument_Statistics) self.textEdit_Statistics.setFont(’Courier’) self.checkBox_Graphic_Legend.stateChanged.connect(lambda: self.changeSize(2)) self.checkBox_Graphic_NavigationToolbar.stateChanged.connect(self.showNavigationToolbar) for comboBox in comboBoxs: comboBox.currentIndexChanged.connect(self.clearGraphicsAndStatistics) self.comboBox_Isotherms_mode.currentIndexChanged.connect(self.clearIsotherms) self.comboBox_Isotherms_T.currentIndexChanged[int].connect(self.validateIsotherms) validator = QRegExpValidator(QRegExp(REG_EXP), self.lineEdit_Isotherms) self.lineEdit_Datafile.returnPressed.connect(self.existDatafile) self.lineEdit_Isotherms.lostFocus.connect(lambda: self.validateIsotherms(last_i_T)) self.lineEdit_Isotherms.setValidator(validator) 



























































self.pushButton_Datafile_Browse.clicked.connect(self.browse) self.pushButton_Exit.clicked.connect(qApp, SLOT("quit()")) self.pushButton_Isotherms_Choose.clicked.connect(self.chooseIsotherms) self.pushButton_Plot.clicked.connect(lambda: self.f_plot(0)) self.pushButton_Plot.clicked.connect(lambda: self.f_plot(1)) self.pushButton_Plot.clicked.connect(lambda: self.f_plot(2)) self.pushButton_Plot.clicked.connect(lambda: self.f_plot(3)) self.pushButton_Run.clicked.connect(self.runCalculations) self.pushButton_SaveGeneralReport.clicked.connect(self.saveGeneralReport) self.pushButton_SaveStatistics.clicked.connect(self.saveStatistics) def initializeAll(self): global handles, labels, last_i_T handles, labels, last_i_T = [], [], 0 self.textEdit_GeneralReport.clear() for comboBox in comboBoxs: comboBox.setCurrentIndex(0) self.lineEdit_Isotherms.clear() self.groupBox_Plots.setEnabled(False) self.checkBox_Graphic_NavigationToolbar.setChecked(True) self.checkBox_Graphic_Legend.setChecked(True) for slider, size in zip(sliders, [12, 8, 12, 14, 16]): slider.setValue(size) self.label_Slider_GeneralReport, self.pushButton_Run.setEnabled(False) self.tabWidget.setEnabled(False) self.tabWidget.setCurrentIndex(0) self.tabWidget.setTabEnabled(3, False) def clearIsotherms(self): self.lineEdit_Isotherms.clear() def chooseIsotherms(self): dialog = chooseIsotherms(self.lineEdit_Isotherms, last_i_T, self.comboBox_Isotherms_mode.currentIndex()) dialog.exec_() self.validateIsotherms(last_i_T) def validateIsotherms(self, i_T): global last_i_T T = array(sorted(set(map_strTo(self.lineEdit_Isotherms.text().split(), ’float’)))) T_in_kelvins = convertT(T, 4+last_i_T) T_in_kelvins = T_in_kelvins[T_in_kelvins >= 0] if i_T is None: return T_in_kelvins self.lineEdit_Isotherms.setText(’ ’.join(map(toStr, convertT(T_in_kelvins, i_T)))) self.groupBox_Plots.setEnabled(self.lineEdit_Isotherms.text() != ’’) self.clearGraphicsAndStatistics() last_i_T = i_T def changeSize(self, i): if i in [0, 1]: te = [self.textEdit_GeneralReport, self.textEdit_Statistics][i] label = [self.label_Slider_GeneralReport, self.label_Slider_Statistics][i] slider = [self.horizontalSlider_GeneralReport, self.horizontalSlider_Statistics][i] cursor = te.textCursor() oldPosition = cursor.position() te.selectAll() size = slider.value() te.setFontPointSize(size) 



























































label.setNum(size) cursor.setPosition(oldPosition) te.setTextCursor(cursor) else: size = self.horizontalSlider_Graphic_Legend.value() leg = canvas.ax.legend(handles, labels, loc=0, fontsize=size, fancybox=True, shadow=True) leg.draggable(state=True, use_blit=True) vis = self.checkBox_Graphic_Legend.isChecked() canvas.ax.get_legend().set_visible(vis) self.horizontalSlider_Graphic_Legend.setEnabled(vis) self.label_Slider_Graphic_Legend.setEnabled(vis) self.label_Slider_Graphic_Legend.setNum(size) f_tkr_x = lambda x, pos: setDecimalPlaces(x, max(map(decimalPlaces, canvas.ax.xaxis.get_ticklocs()))) f_tkr_y = lambda y, pos: setDecimalPlaces(y, max(map(decimalPlaces, canvas.ax.yaxis.get_ticklocs()))) canvas.ax.xaxis.set_major_formatter(tkr.FuncFormatter(f_tkr_x)) canvas.ax.yaxis.set_major_formatter(tkr.FuncFormatter(f_tkr_y)) size = self.horizontalSlider_Graphic_AxesTicks.value() canvas.ax.tick_params(axis=’both’, which=’major’, labelsize=size) self.label_Slider_Graphic_AxesTicks.setNum(size) size = self.horizontalSlider_Graphic_AxesLabels.value() canvas.ax.xaxis.label.set_size(size) canvas.ax.yaxis.label.set_size(size) self.label_Slider_Graphic_AxesLabels.setNum(size) canvas.draw() def showNavigationToolbar(self): if self.checkBox_Graphic_NavigationToolbar.isChecked(): self.mplWidget_Graphic.navbar.show() else: self.mplWidget_Graphic.navbar.hide() def clearGraphicsAndStatistics(self): self.tabWidget.setTabEnabled(3, False) def existDatafile(self): if QFile.exists(self.lineEdit_Datafile.text()): self.initializeAll() self.pushButton_Run.setEnabled(True) def browse(self): fileName = QFileDialog.getOpenFileName(self, ’Procurando Arquivo com Dados de Entrada’, ’.’, ’Dados de Entrada(*.in);;Todos os Arquivos (*.*)’)[0] if fileName: self.lineEdit_Datafile.setText(fileName) self.initializeAll() self.pushButton_Run.setEnabled(True) def saveGeneralReport(self): fileName = QFileDialog.getSaveFileName(self, u’Gravando Relatório Geral’, ’.’, ’Arquivo HTML (*.html);;Todos os Arquivos (*.*)’)[0] if fileName: data = QFile(fileName) if data.open(QFile.WriteOnly | QFile.Text): QTextStream(data) << self.textDocument_GeneralReport.toHtml(encoding=’utf-8’) def saveStatistics(self): fileName = QFileDialog.getSaveFileName(self, u’Gravando Estatísticas’, ’.’, 



























































’Arquivo HTML (*.html);;Todos os Arquivos (*.*)’)[0] if fileName: data = QFile(fileName) if data.open(QFile.WriteOnly | QFile.Text): QTextStream(data) << self.textDocument_Statistics.toHtml(encoding=’utf-8’) def linearMixingRule(self, property_1, property_2, fraction_2): # Regra de Mistura Binária Linear com a Fração fraction_1 = 1-fraction_2 return fraction_1*property_1 + fraction_2*property_2 def excessProperty(self, property_real, property_ideal): # Calcula uma Propriedade de Excesso return property_real-property_ideal def rho_and_epsilon_r_of_pures(self, T, i=0): # Calcula as Densidades Absolutas e as Constantes Dielétricas # dos solventes puros # GREEN e PERRY, 2007 tau = 1 - T/647.096 rho_H2O = (17863 + 58606*tau**.35 - 95396*tau**(2/3) + 213890*tau - 141260*tau**(4/3) ) * M_H2O rho_MEG = (1315 / (.25125**(1 + (1 - T/720)**.21868))) * M_MEG if i: return rho_H2O, rho_MEG # ÅKERLÖF, 1932 epsilon_r_H2O = 10**(1.9051 - .00205*(T-293.15)) epsilon_r_MEG = 10**(1.5872 - .00224*(T-293.15)) return rho_H2O, rho_MEG, epsilon_r_H2O, epsilon_r_MEG def rho_and_epsilon_r_of_mixing(self, rho_H2O, rho_MEG, epsilon_r_H2O, epsilon_r_MEG, x_MEG_SF, T, i=0): # Calcula a Densidade Absoluta e a Constante Dielétrica da # mistura de solventes x_H2O_SF = 1-x_MEG_SF w_MEG_SF = x_MEG_SF*M_MEG / (x_H2O_SF*M_H2O + x_MEG_SF*M_MEG) # Regra de Mistura rho_H2O_MEG = 1/self.linearMixingRule(1/rho_H2O, 1/rho_MEG, w_MEG_SF) if i: return rho_H2O_MEG # JOUYBAN, SOLTANPOUR e CHAN, 2004 epsilon_r_H2O_MEG = exp(x_H2O_SF*log(epsilon_r_H2O) + x_MEG_SF*log(epsilon_r_MEG) + x_H2O_SF*x_MEG_SF/T * (153.6 + 57.3*(x_H2O_SF-x_MEG_SF))) return rho_H2O_MEG, epsilon_r_H2O_MEG def A_phi_H2O(self, T): # Calcula a Constante de Debye-Hückel para a água # => CHEN, BRITT, et al., 1982 return (-61.44534*exp((T-273.15)/273.15) + 2.864468*exp(2*(T-273.15)/273.15) + 183.5379* log(T/273.15) - .6820223*(T-273.15) + .0007875695*(T**2 - 273.15**2) + 58.95788*(273.15/T)) def A_phi_solv(self, A_phi_H2O, rho_H2O, epsilon_r_H2O, rho_solv, epsilon_r_solv): # Calcula Constante de Debye-Hückel para outros solventes return ((rho_solv/rho_H2O)**0.5 * (epsilon_r_H2O/epsilon_r_solv)**1.5 * A_phi_H2O) def Pitzer_parameters(self, T): # Calcula os parâmetros do Modelo de Pitzer em H2O: # => beta0_MX_H2O, beta1_MX_H2O e C_phi_MX_H2O Tr = 298.15 # K 



























































if MX == ’NaCl’: # SILVESTER e PITZER, 1977 q = array([[.0765, -777.03, -4.4706, .008946, -3.3158e-6], [.2664, 0, 0, 6.1608e-5, 1.0715e-6], [.00127, 33.317, 0.09421, -4.655e-5, 0]]) return (q[i,0] + q[i,1]*(1/T - 1/Tr) + q[i,2]*log(T/Tr) + q[i,3]*(T-Tr) + q[i,4]*(T**2 - Tr**2) for i in range(3)) elif MX == ’KCl’: # ARCHER, 1999 b = array([[.413229483398493, -.0870121476114027, .101413736179231, -.0199822538522801, -.0998120581680816, 0], [.206691413598171, .102544606022162, 0, 0, 0, -.00188349608000903], [-.00133515934994478, 0, 0, .00234117693834228, -.00075896583546707, 0]]) return (b[i,0] + 1e-2*b[i,1]*(T-Tr) + 1e-5*b[i,2]*(T-Tr)**2 + 1e2*b[i,3]/(T-225) + 1e3*b[i,4]/T + 1e6*b[i,5]/(T-225)**3 for i in range(3)) def Pitzer_parameters_in_mixtures(self, beta0_MX_H2O, beta1_MX_H2O, beta1_MX_MEG, epsilon_r_H2O, epsilon_r_MEG, epsilon_r_H2O_MEG, C_phi_MX_H2O): # Calcula os parâmetros do Modelo de Pitzer em mistura H2O-MEG: # => beta0_MX_H2O_MEG, beta1_MX_H2O_MEG e C_phi_MX_H2O_MEG # => LORIMER, 1993 A = log(beta1_MX_H2O/beta1_MX_MEG) / log(epsilon_r_H2O/epsilon_r_MEG) B = log(beta1_MX_H2O) - A*log(epsilon_r_H2O) return beta0_MX_H2O, exp(A*log(epsilon_r_H2O_MEG) + B), C_phi_MX_H2O def ln_gamma_MX(self, b_MX, A_phi, beta0_MX, beta1_MX, C_phi_MX): # Calcula o Coeficiente de Atividade pelo Modelo de Pitzer # => PITZER, 1973 alpha, b_, b_M, b_X = 2, 1.2, nu_M*b_MX, nu_X*b_MX I_b = (b_M*z_M**2 + b_X*z_X**2) / 2 sqrt_I_b = sqrt(I_b) f_gamma_MX = -A_phi*(2/b_*log(1 + b_*sqrt_I_b) + sqrt_I_b/(1 + b_*sqrt_I_b)) B_gamma_MX = 2*(beta0_MX + beta1_MX*(1 - (1 + alpha*sqrt_I_b - .5*alpha**2*I_b)*exp(-alpha* sqrt_I_b)) / (alpha**2*I_b)) C_gamma_MX = 1.5*C_phi_MX return abs(z_M*z_X)*f_gamma_MX + 2*b_MX*nu_M*nu_X/nu*(B_gamma_MX + b_MX*sqrt(nu_M*nu_X)* C_gamma_MX) def ln_gamma_MX_in_MEG(self, ln_gamma_MX_in_H2O, b_MX_in_H2O, b_MX_in_MEG, T): # Calcula o Coeficiente de Atividade do sal em MEG # => LORIMER, 1993 return (ln_gamma_MX_in_H2O + log(b_MX_in_H2O/b_MX_in_MEG) - Delta_tr_G0_H2O_to_MEG / (nu*R*T)) def b_MX_in_H2O_MEG(self, i, C_MX, C_H2O_MEG=None): # Normaliza para Molalidade do Sal na mistura de solventes # i = 0 => m_MX (g), m_H2O_MEG (g) if i: # w_MX_in_H2O_MEG_MX C_H2O_MEG = 1-C_MX return C_MX/M_MX/C_H2O_MEG def x_MEG_SF(self, i, C_H2O, C_MEG=None): # Normaliza para Fração Molar de MEG Livre de Sal # i = 0 => m_H2O (g), m_MEG (g) if i: if i == 1: # w_H2O_SF_in_H2O_MEG C_MEG = 1-C_H2O else: # w_MEG_SF_in_H2O_MEG C_H2O, C_MEG = 1-C_H2O, C_H2O return C_MEG/M_MEG / (C_H2O/M_H2O + C_MEG/M_MEG) def convertC(self, b_MX_in_H2O_MEG, x_MEG_SF, T, i): if i: 



























































if i == 1: # Converte Molalidade para Molaridade rho_H2O, rho_MEG = self.rho_and_epsilon_r_of_pures(T, 1) rho_H2O_MEG = self.rho_and_epsilon_r_of_mixing(rho_H2O, rho_MEG, None, None, x_MEG_SF, T, 1) return b_MX_in_H2O_MEG*rho_H2O_MEG/1000 elif i == 2: # Converte Molalidade para Fração Molar x_H2O_SF = 1-x_MEG_SF return b_MX_in_H2O_MEG / (1/(x_H2O_SF*M_H2O + x_MEG_SF*M_MEG) + b_MX_in_H2O_MEG) else: # Converte Molalidade para Fração Mássica return b_MX_in_H2O_MEG / (1/M_MX + b_MX_in_H2O_MEG) return b_MX_in_H2O_MEG # Não converte def convertC_SF(self, x_MEG_SF, i): x_H2O_SF = 1-x_MEG_SF if i: # Converte para Fração Mássica Livre de Sal return x_MEG_SF / (x_H2O_SF*M_H2O/M_MEG + x_MEG_SF) return x_MEG_SF # Não converte def printText(self, text, i=0): [self.textEdit_GeneralReport, self.textEdit_Statistics][i].textCursor().insertHtml(text) def printVars(self, *args): n = len(args) r = n%3 i = int(r != 0)*int(args[-1] != 0) for name, value, unit in zip(*[args[_:-3:3] for _ in range(3)]): text = toStr(value) if type(value) == float else unicode(value) self.printText(h.b(name)+’ = ’+text+(’ ’+unit)*bool(unit)+’<br>’, i) name, value, unit = args[-3-r:n-r] text = toStr(value) if type(value) == float else unicode(value) self.printText(h.b(name)+’ = ’+text+(’ ’+unit)*bool(unit), i) def createTable(self, nrows, ncols, nHeaderLines=1, mergedLines=[], brushedLines=[], i=0): self.tableformat.setHeaderRowCount(nHeaderLines) table = [self.textEdit_GeneralReport, self.textEdit_Statistics][i].textCursor().\ insertTable(nrows+1, ncols, self.tableformat) for (r, c, nr, nc) in mergedLines: table.mergeCells(r, c, nr, nc) if brushedLines: for (r, c) in brushedLines: self.writeCell(table, r, c, ’’, format_=self.headerformat) else: for r in range(nHeaderLines): for c in range(ncols): self.writeCell(table, r, c, ’’, format_=self.headerformat) return table def writeCell(self, table, row, col, text, align=’C’, format_=None): cell = table.cellAt(row, col) if format_: cell.setFormat(format_) self.blockFormat.setAlignment(ALIGN[align]) cell.firstCursorPosition().setBlockFormat(self.blockFormat) cellCursor = cell.firstCursorPosition() cellCursor.insertHtml(text) def writeLineInTable(self, table, row, col, line, align_orientation=’Rv’): align_, orientation = align_orientation[0], align_orientation[1] for i, text in enumerate(line): 



























































if orientation == ’v’: self.writeCell(table, row+i, col, text, align_) else: self.writeCell(table, row, col+i, text, align_) def printVectors(self, *args): n = len(args)-1 r = n%3 i = int(r != 0)*int(args[-1] != 0) formats = args[0] names, vectors, units = (args[_+1::3] for _ in range(3)) nrows, ncols = len(vectors[0]), len(vectors) table = self.createTable(nrows, ncols, i=i) for col in range(ncols): text = ’<b>’+names[col]+(’ (’+units[col]+’)’)*bool(units[col])+’</b>’ self.writeCell(table, 0, col, text) vector, format_ = vectors[col], formats[col] align, type_, N = format_[0], format_[1], int(format_[2:]) # ’format_[0]’: # ’L’ => esquerda # ’C’ => centro # ’R’ => direita # ’format_[1]’: # ’f’ => ’float’ # ’i’ => ’int’ # ’s’ => ’str’ # ’format_[2:]’: # < 0 => ’float’ arredondado (’-N’ casas decimais); # # > 0 => ’float’ arredondado (’N’ dígitos significativos) if type_ in [’f’, ’%’]: 0 => ’float’ não arrendondado; if N < 0: N = -N elif N == 0: N = max(map(decimalPlaces, vector)) elif N > 0: N = max(map(lambda x: decimalPlaces(strTo(setSignificantFigures(x, N)), ’float’), vector)) for row, value in enumerate(vector): if type_ == ’f’: self.writeCell(table, row+1, col, setDecimalPlaces(value, N), align) else: self.writeCell(table, row+1, col, setDecimalPlacesPercent(value, N), align) else: for row, value in enumerate(vector): self.writeCell(table, row+1, col, str(value), align) def readDataFile(self, fileName): f = QFile(fileName) if f.open(QFile.ReadOnly | QFile.Truncate | QFile.Text): inStream = QTextStream(f) inStream.setCodec(’utf-8’) lines = inStream.readAll().splitlines() f.close() values, vectors = [], [] for line in lines: args = [arg.strip() for arg in line.split(’;’)] type_ = args[0] if type_: for vector in vectors: 